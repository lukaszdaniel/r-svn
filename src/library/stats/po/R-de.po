# Translation of /src/library/stats/po/R-stats.pot to German
# Copyright (C) 2008-2022 The R Foundation
# This file is distributed under the same license as the R package.
# Detlef Steuer <steuer@hsu-hh.de>, 2008-2023.
#
msgid ""
msgstr ""
"Project-Id-Version: R-4.2.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2025-02-02 12:23\n"
"PO-Revision-Date: 2024-03-19 12:53+0000\n"
"Last-Translator: Michael Chirico <michaelchirico4@gmail.com>\n"
"Language-Team: R Core <r-core@r-project.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.16.4\n"

#. R/xtabs.R: gettextf("%s applies only to two-way tables", "xtabs(*, sparse=TRUE)")
#: R/xtabs.R:0
msgid "%s applies only to two-way tables"
msgstr "%s ist nur für zweifache Tabellen anwendbar"

#. R/family.R: gettextf("%s link not recognised", sQuote(link))
#: R/family.R:0
msgid "%s link not recognised"
msgstr "Link %s nicht erkannt"

#. R/stl.R: gettextf("%s must be 0 or 1", degname)
#: R/stl.R:0
msgid "%s must be 0 or 1"
msgstr "%s muss 0 oder 1 sein"

#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/xtabs.R: gettextf("%s needs package 'Matrix' correctly installed", "xtabs(*, sparse=TRUE)")
#: R/contrast.R:0 R/xtabs.R:0
msgid "%s needs package 'Matrix' correctly installed"
msgstr "%s benötigt das korrekt installierte Paket 'Matrix'"

#. R/lm.R: gettextf("%s: NAs produced for non-estimable cases", msg1)
#: R/lm.R:0
msgid "%s: NAs produced for non-estimable cases"
msgstr ""

#. R/lm.R: gettextf("%s; attr(*, \"non-estim\") has doubtful cases", msg1)
#: R/lm.R:0
msgid "%s; attr(*, \"non-estim\") has doubtful cases"
msgstr ""

#. R/lm.R: gettextf("%s; consider predict(., rankdeficient=\"NA\")", msg1)
#: R/lm.R:0
msgid "%s; consider predict(., rankdeficient=\"NA\")"
msgstr ""

#. R/nlsFunc.R: gettextf("'%s' cannot be of mode '%s'", deparse1(substitute(object)),     mode(object))
#: R/nlsFunc.R:0
msgid "'%s' cannot be of mode '%s'"
msgstr "'%s' kann nicht von Modus '%s' sein"

#. R/models.R: gettextf("'%s' must be a character string", "response")
#. R/reshape.R: gettextf("'%s' must be a character string", "sep")
#: R/models.R:0 R/reshape.R:0
#, fuzzy
msgid "'%s' must be a character string"
msgstr "'sep' muss eine Zeichenkette sein"

#. R/power.R: gettextf("'%s' must be numeric in [0, 1]", deparse1(substitute(x)))
#: R/power.R:0
msgid "'%s' must be numeric in [0, 1]"
msgstr "'%s' muss numerisch aus [0, 1] sein"

#. R/addmargins.R: stop("'A' must be an array or table")
#: R/addmargins.R:0
msgid "'A' must be an array or table"
msgstr "'A' muss ein Array oder eine Tabelle sein"

#. R/dendrogram.R: stop("'ColSideColors' must be a character vector of length ncol(x)")
#: R/dendrogram.R:0
msgid "'ColSideColors' must be a character vector of length ncol(x)"
msgstr "'ColSideColors' muss ein Zeichenkettenvektor der Länge ncol(x) sein"

#. R/anova.R: stop("'P.values' is TRUE, but 'has.Pvalue' is not")
#: R/anova.R:0
msgid "'P.values' is TRUE, but 'has.Pvalue' is not"
msgstr "'P.values' ist TRUE, aber 'has.Pvalue' nicht"

#. R/dendrogram.R: stop("'RowSideColors' must be a character vector of length nrow(x)")
#: R/dendrogram.R:0
msgid "'RowSideColors' must be a character vector of length nrow(x)"
msgstr "'RowSideColors' muss ein Zeichenkettenvektor der Länge nrow(x) sein"

#. R/poisson.test.R: stop("'T' must be nonnegative")
#: R/poisson.test.R:0
msgid "'T' must be nonnegative"
msgstr "'T' muss nicht-negativ sein"

#. R/cor.R: stop("'V' is not a square numeric matrix")
#: R/cor.R:0
msgid "'V' is not a square numeric matrix"
msgstr "'V' ist keine quadratische, numerische Matrix"

#. R/dendrogram.R: stop("'X' is not a dendrogram")
#: R/dendrogram.R:0
msgid "'X' is not a dendrogram"
msgstr "'X' ist kein Dendrogramm"

#. R/lsfit.R: warning("'X' matrix was collinear")
#: R/lsfit.R:0
msgid "'X' matrix was collinear"
msgstr "Matrix 'X' war kollinear"

#. R/ARMAtheory.R: stop("'acf' must be of length two or more")
#: R/ARMAtheory.R:0
msgid "'acf' must be of length two or more"
msgstr "'acf' muss Länge zwei oder mehr haben"

#. R/smspline.R: warning("'all.knots' is TRUE; 'nknots' specification is disregarded")
#: R/smspline.R:0
msgid "'all.knots' is TRUE; 'nknots' specification is disregarded"
msgstr "'all.knots' ist TRUE; 'nknots' Angabe wird nicht beachtet"

#. R/smspline.R: warning("'all.knots' is vector of knots; 'nknots' specification is disregarded")
#: R/smspline.R:0
msgid "'all.knots' is vector of knots; 'nknots' specification is disregarded"
msgstr "'all.knots' ist ein Vektor von Knoten; 'nknots' Angabe wird nicht beachtet"

#. R/HoltWinters.R: stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
#: R/HoltWinters.R:0
msgid "'alpha', 'beta' and 'gamma' must be within the unit interval"
msgstr "'alpha', 'beta' und 'gamma' müssen im Einheitsintervall liegen"

#. R/nls.R: stop("'anova' is only defined for sequences of \"nls\" objects")
#: R/nls.R:0
msgid "'anova' is only defined for sequences of \"nls\" objects"
msgstr "'anova' ist nur für Folgen von \"nls\" Objekten definiert"

#. R/anova.R: stop("'anova' object must have colnames")
#: R/anova.R:0
msgid "'anova' object must have colnames"
msgstr "'anova' Objekt muss Spaltennamen haben"

#. R/approx.R: stop("'approx' requires n >= 1")
#: R/approx.R:0
msgid "'approx' requires n >= 1"
msgstr "'approx' verlangt n >= 1"

#. R/ts.R: stop("'ar' part of model is not stationary")
#: R/ts.R:0
msgid "'ar' part of model is not stationary"
msgstr "'ar' Teil des Modells ist nicht stationär"

#. R/density.R: stop("'bw' is not positive.")
#: R/density.R:0
msgid "'bw' is not positive."
msgstr "'bw' nicht positiv"

#. R/aggregate.R: stop("'by' must be a list")
#: R/aggregate.R:0
msgid "'by' must be a list"
msgstr "'by' muss eine Liste sein"

#. R/kmeans.R: stop("'centers' must be a number or a matrix")
#: R/kmeans.R:0
msgid "'centers' must be a number or a matrix"
msgstr "'centers' müssen eine Zahl oder eine Matrix sein"

#. R/filter.R: stop("'circular' must be logical and not NA")
#: R/filter.R:0
msgid "'circular' must be logical and not NA"
msgstr "'circular' muss boolesch und nicht NA sein"

#. R/kernel.R: stop("'coef' does not have the correct length")
#: R/kernel.R:0
msgid "'coef' does not have the correct length"
msgstr "'coef' hat falsche Länge"

#. R/kernel.R: stop("'coef' must be a vector")
#: R/kernel.R:0
msgid "'coef' must be a vector"
msgstr "'coef' muss ein Vektor sein"

#. R/aov.R: stop("'coef' must define a contrast, i.e., sum to 0")
#. R/aov.R: stop("'coef' must define a contrast, i.e., sum to 0")
#: R/aov.R:0
msgid "'coef' must define a contrast, i.e., sum to 0"
msgstr "'coef' muss einen Kontrast definieren, also insbsondere Summe = 0"

#. R/aov.R: stop("'coef' must have same length as 'contrast.obj'")
#. R/aov.R: stop("'coef' must have same length as 'contrast.obj'")
#: R/aov.R:0
msgid "'coef' must have same length as 'contrast.obj'"
msgstr "'coef' muss dieselbe Länge wie 'contrast.obj' haben"

#. R/ftable.R: stop("'col.vars' missing or incorrect")
#: R/ftable.R:0
msgid "'col.vars' missing or incorrect"
msgstr "'col.vars' fehlt oder falsch"

#. R/qqplot.R: stop("'conf.level' is not a probability")
#: R/qqplot.R:0
msgid "'conf.level' is not a probability"
msgstr ""

#. R/ansari.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/binom.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/cor.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/fisher.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/mantelhaen.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/prop.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/t.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/var.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/wilcox.test.R: stop("'conf.level' must be a single number between 0 and 1")
#: R/ansari.test.R:0 R/binom.test.R:0 R/cor.test.R:0 R/fisher.test.R:0
#: R/mantelhaen.test.R:0 R/prop.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "'conf.level' must be a single number between 0 and 1"
msgstr "'conf.level' muss eine einzelne Zahl zwischen 0 und 1 sein"

#. R/models.R: stop("'contrasts.arg' argument must be named")
#: R/models.R:0
msgid "'contrasts.arg' argument must be named"
msgstr "'contrasts.arg' Argument muss benannt sein"

#. R/nlminb.R: stop("'control' argument must be a named list")
#. R/nls.R: stop("'control' argument must be a named list")
#: R/nlminb.R:0 R/nls.R:0
msgid "'control' argument must be a named list"
msgstr "'control' Argument muss eine benannte Liste sein"

#. R/factanal.R: stop("'covmat' is not a valid covariance list")
#. R/princomp.R: stop("'covmat' is not a valid covariance list")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is not a valid covariance list"
msgstr "'covmat' ist keine zulässige Kovarianzliste"

#. R/factanal.R: stop("'covmat' is of unknown type")
#. R/princomp.R: stop("'covmat' is of unknown type")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is of unknown type"
msgstr "'covmat' ist von unbekanntem Typ"

#. R/model.tables.R: stop("'cterms' argument must match terms in model object")
#: R/model.tables.R:0
msgid "'cterms' argument must match terms in model object"
msgstr "'cterms' Argument muss zu den Termen im Modell-Objekt passen"

#. R/symnum.R: gettext("'cutpoints' must be unique in 0 < cuts < 1, but are = ")
#: R/symnum.R:0
msgid "'cutpoints' must be unique in 0 < cuts < 1, but are ="
msgstr "'cutpoints' müssen in 0 < cuts < 1 eindeutig sein, aber sind ="

#. R/symnum.R: gettext("'cutpoints' must be unique, but are = ")
#: R/symnum.R:0
msgid "'cutpoints' must be unique, but are ="
msgstr "'cutpoints' müssen eindeutig sein, aber sind ="

#. R/smspline.R: stop("'cv' must not be NA when 'df' is specified")
#: R/smspline.R:0
msgid "'cv' must not be NA when 'df' is specified"
msgstr "'cv' darf nicht NA sein, wenn 'df' angegeben wird"

#. R/models.R: stop("'data' must be a data.frame, environment, or list")
#. R/models.R: stop("'data' must be a data.frame, environment, or list")
#: R/models.R:0
msgid "'data' must be a data.frame, environment, or list"
msgstr "'data' muss data.frame, Umgebung oder Liste sein"

#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#: R/models.R:0
msgid "'data' must be a data.frame, not a matrix or an array"
msgstr "'data' muss ein Dataframe sein, weder Matrix noch Array"

#. R/nls.R: stop("'data' must be a list or an environment")
#: R/nls.R:0
msgid "'data' must be a list or an environment"
msgstr "'data' muss Liste oder Umgebung sein"

#. R/loess.R: stop("'degree' must be 0, 1 or 2")
#: R/loess.R:0
msgid "'degree' must be 0, 1 or 2"
msgstr "'degree' muss 0, 1 oder 2 sein"

#. R/contr.poly.R: stop("'degree' must be at least 1")
#: R/contr.poly.R:0
msgid "'degree' must be at least 1"
msgstr "'degree' muss mindestens 1 sein"

#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#: R/contr.poly.R:0
msgid "'degree' must be less than number of unique points"
msgstr "'degree' muss kleiner sein, als die Zahl der verschiedenen Punkte"

#. R/splinefun.R: stop("'deriv' must be between 0 and 3")
#. R/splinefun.R: stop("'deriv' must be between 0 and 3")
#: R/splinefun.R:0
msgid "'deriv' must be between 0 and 3"
msgstr "'deriv' muss zwischen 0 und 3 liegen"

#. R/ts.R: stop("'end' must be a whole number of cycles after 'start'")
#: R/ts.R:0
msgid "'end' must be a whole number of cycles after 'start'"
msgstr "'end' muss eine ganze Zahl von Zyklen hinter 'start' sein"

#. R/ts.R: warning("'end' value not changed")
#: R/ts.R:0
msgid "'end' value not changed"
msgstr "'end' Wert nicht geändert"

#. R/glm.R: stop("'family' argument seems not to be a valid family object",     call. = FALSE)
#: R/glm.R:0
msgid "'family' argument seems not to be a valid family object"
msgstr "'family' Argument scheint kein zulässiges Familienobjekt sein"

#. R/glm.R: stop("'family' not recognized")
#: R/glm.R:0
msgid "'family' not recognized"
msgstr "'family' nicht erkannt"

#. R/ftable.R: stop("'file' must be a character string or connection")
#: R/ftable.R:0
msgid "'file' must be a character string or connection"
msgstr "'file' muss eine Zeichenkette oder eine Verbindung sein"

#. R/filter.R: stop("'filter' is longer than time series")
#: R/filter.R:0
msgid "'filter' is longer than time series"
msgstr "'filter' ist länger als die Zeitreihe"

#. R/ftable.R: stop("'formula' has '.' in both left and right hand sides")
#: R/ftable.R:0
msgid "'formula' has '.' in both left and right hand sides"
msgstr "'formula' hat '.' sowohl auf der linken und auf der rechten Seite"

#. R/quade.test.R: stop("'formula' missing")
#: R/quade.test.R:0
msgid "'formula' missing"
msgstr "'formula' fehlt"

#. R/ansari.test.R: stop("'formula' missing or incorrect")
#. R/bartlett.test.R: stop("'formula' missing or incorrect")
#. R/fligner.test.R: stop("'formula' missing or incorrect")
#. R/ftable.R: stop("'formula' missing or incorrect")
#. R/kruskal.test.R: stop("'formula' missing or incorrect")
#. R/ks.test.R: stop("'formula' missing or incorrect")
#. R/ks.test.R: stop("'formula' missing or incorrect")
#. R/mood.test.R: stop("'formula' missing or incorrect")
#. R/oneway.test.R: stop("'formula' missing or incorrect")
#. R/t.test.R: stop("'formula' missing or incorrect")
#. R/t.test.R: stop("'formula' missing or incorrect")
#. R/var.test.R: stop("'formula' missing or incorrect")
#. R/wilcox.test.R: stop("'formula' missing or incorrect")
#. R/wilcox.test.R: stop("'formula' missing or incorrect")
#. R/xtabs.R: stop("'formula' missing or incorrect")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/fligner.test.R:0 R/ftable.R:0
#: R/kruskal.test.R:0 R/ks.test.R:0 R/mood.test.R:0 R/oneway.test.R:0
#: R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0 R/xtabs.R:0
msgid "'formula' missing or incorrect"
msgstr "'formula' fehlt oder ist falsch"

#. R/cor.test.R: stop("'formula' missing or invalid")
#: R/cor.test.R:0
msgid "'formula' missing or invalid"
msgstr "'formula' fehlt oder unzulässig"

#. R/ftable.R: stop("'formula' must have both left and right hand sides")
#: R/ftable.R:0
msgid "'formula' must have both left and right hand sides"
msgstr "'formula' benötigt sowohl eine linke als auch eine rechte Seite"

#. R/bartlett.test.R: stop("'formula' should be of the form response ~ group")
#. R/fligner.test.R: stop("'formula' should be of the form response ~ group")
#. R/kruskal.test.R: stop("'formula' should be of the form response ~ group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'formula' should be of the form response ~ group"
msgstr "'formula' sollte von der Art response ~ group sein"

#. R/ts.R: stop("'frequency' and 'deltat' are both not NULL and are inconsistent")
#: R/ts.R:0
msgid "'frequency' and 'deltat' are both not NULL and are inconsistent"
msgstr "'frequency' und 'deltat' sind beide nicht NULL und inkonsistent"

#. R/ts.R: warning("'frequency' not changed")
#: R/ts.R:0
msgid "'frequency' not changed"
msgstr "'frequency' nicht geändert"

#. R/dendrogram.R: gettextf("'height' must be at least %g, the maximal height of its components",     h.max)
#: R/dendrogram.R:0
msgid "'height' must be at least %g, the maximal height of its components"
msgstr "'height' muss mindestens %g sein, die maximale Höhe der Komponenten"

#. R/fisher.test.R: warning("'hybrid' is ignored for a 2 x 2 table")
#: R/fisher.test.R:0
msgid "'hybrid' is ignored for a 2 x 2 table"
msgstr "'hybrid' wird für 2 x 2 Tabellen ignoriert"

#. R/plot.lm.R: gettextf("'id.n' must be in {1,..,%d}", n)
#: R/plot.lm.R:0
msgid "'id.n' must be in {1,..,%d}"
msgstr "'id.n' muss in {1,...,%d} liegen"

#. R/reshape.R: stop("'idvar' must uniquely identify records")
#: R/reshape.R:0
msgid "'idvar' must uniquely identify records"
msgstr "'idvar' muss Einträge eindeutig identifizieren"

#. R/arima.R: stop("'init' is of the wrong length")
#. R/arma0.R: stop("'init' is of the wrong length")
#: R/arima.R:0 R/arma0.R:0
msgid "'init' is of the wrong length"
msgstr "'init' hat falsche Länge"

#. R/nlm.R: stop("'interval' must be a vector of length 2")
#: R/nlm.R:0
msgid "'interval' must be a vector of length 2"
msgstr "'interval' muss ein Vektor der Länge 2 sein"

#. R/kmeans.R: stop("'iter.max' must be positive")
#: R/kmeans.R:0
msgid "'iter.max' must be positive"
msgstr "'iter.max' muss positiv sein"

#. R/identify.hclust.R: stop("'k' and 'h' must be a scalar")
#: R/identify.hclust.R:0
msgid "'k' and 'h' must be a scalar"
msgstr "'k' und 'h' muss ein Skalar sein"

#. R/runmed.R: gettextf("'k' is bigger than 'n'!  Changing 'k' to %d", k <- as.integer(1 +     2 * ((n - 1)%/%2)))
#: R/runmed.R:0
msgid "'k' is bigger than 'n'!  Changing 'k' to %d"
msgstr "'k' ist größer als 'n'! Ändere 'k' in %d"

#. R/kernel.R: stop("'k' is not a kernel")
#. R/kernel.R: stop("'k' is not a kernel")
#: R/kernel.R:0
msgid "'k' is not a kernel"
msgstr "'k' ist kein Kernel"

#. R/lag.R: warning("'k' is not an integer")
#: R/lag.R:0
msgid "'k' is not an integer"
msgstr "'k' ist keine ganze Zahl"

#. R/cmdscale.R: stop("'k' must be in {1, 2, ..  n - 1}")
#: R/cmdscale.R:0
msgid "'k' must be in {1, 2, ..  n - 1}"
msgstr "'k' muss in {1, 2, .. n-1} liegen"

#. R/runmed.R: gettextf("'k' must be odd!  Changing 'k' to %d", k <- as.integer(1 +     2 * (k%/%2)))
#: R/runmed.R:0
msgid "'k' must be odd!  Changing 'k' to %d"
msgstr "'k' muss ungerade sein! Ändere 'k' in %d"

#. R/runmed.R: stop("'k' must be positive")
#: R/runmed.R:0
msgid "'k' must be positive"
msgstr "'k' muss positiv sein"

#. R/kernel.R: stop("'kernapply' is not available for object 'x'")
#: R/kernel.R:0
msgid "'kernapply' is not available for object 'x'"
msgstr "'kernapply' für Objekt 'x' nicht verfügbar"

#. R/acf.R: stop("'lag.max' must be at least 0")
#: R/acf.R:0
msgid "'lag.max' must be at least 0"
msgstr "'lag.max' muss mindestens 0 sein"

#. R/acf.R: stop("'lag.max' must be at least 1")
#: R/acf.R:0
msgid "'lag.max' must be at least 1"
msgstr "'lag.max' muss mindestens 1 sein"

#. R/reshape.R: stop("'lengths(varying)' must all match 'length(times)'")
#: R/reshape.R:0
msgid "'lengths(varying)' must all match 'length(times)'"
msgstr "'lengths(varying)' müssen alle 'length(times)' entsprechen"

#. R/logLik.R: stop("'logLik.lm' does not support multiple responses")
#: R/logLik.R:0
msgid "'logLik.lm' does not support multiple responses"
msgstr "'logLik.lm' ist für multiple Zielgrößen nicht implementiert"

#. R/mad.R: stop("'low' and 'high' cannot be both TRUE")
#: R/mad.R:0
msgid "'low' and 'high' cannot be both TRUE"
msgstr "'low' und 'high' können nicht beide TRUE sein"

#. R/optim.R: stop("'lower' and 'upper' must be finite values")
#: R/optim.R:0
msgid "'lower' and 'upper' must be finite values"
msgstr "'lower' und 'upper' müssen endliche Werte sein"

#. R/kernel.R: stop("'m' is less than 1")
#. R/kernel.R: stop("'m' is less than 1")
#: R/kernel.R:0
msgid "'m' is less than 1"
msgstr "'m' ist kleiner als 1"

#. R/kernel.R: stop("'m' must be numeric with non-negative integers")
#: R/kernel.R:0
msgid "'m' must be numeric with non-negative integers"
msgstr "'m' muss numerisch mit nicht-negativen, ganzen Zahlen sein"

#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#: R/termplot.R:0
msgid "'main' must be TRUE, FALSE, NULL or character (vector)."
msgstr "'main' muss entweder TRUE, FALSE, NULL oder Zeichen(kette) sein"

#. R/loglin.R: stop("'margin' must contain names or numbers corresponding to 'table'")
#: R/loglin.R:0
msgid "'margin' must contain names or numbers corresponding to 'table'"
msgstr "'margin' muss Namen oder Zahlen enthalten, die mit 'table' korrespondieren"

#. R/dendrogram.R: stop("'margins' must be a numeric vector of length 2")
#: R/dendrogram.R:0
msgid "'margins' must be a numeric vector of length 2"
msgstr "'margins' muss ein numerischer Vektor der Länge 2 sein"

#. R/mlm.R: stop("'mlm' objects with weights are not supported")
#: R/mlm.R:0
msgid "'mlm' objects with weights are not supported"
msgstr "Gewichtete 'mlm' Objekte werden nicht unterstützt"

#. R/ts.R: stop("'model$order' must be of length 3")
#: R/ts.R:0
msgid "'model$order' must be of length 3"
msgstr "'model$order' muss Länge 3 haben"

#. R/ts.R: stop("'model' must be list")
#: R/ts.R:0
msgid "'model' must be list"
msgstr "'model' muss einen Liste sein"

#. R/model.tables.R: stop("'model.tables' is not implemented for multiple responses")
#: R/model.tables.R:0
msgid "'model.tables' is not implemented for multiple responses"
msgstr "'model.tables' für multiple Antworten nicht implementiert"

#. R/t.test.R: stop("'mu' must be a single number")
#. R/wilcox.test.R: stop("'mu' must be a single number")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'mu' must be a single number"
msgstr "'mu' muss einzelne Zahl sein"

#. R/fisher.test.R: stop("'mult' must be integer >= 2, typically = 30")
#: R/fisher.test.R:0
msgid "'mult' must be integer >= 2, typically = 30"
msgstr "'mult' muss eine ganze Zahl >= 2 sein, typisch = 30"

#. R/binom.test.R: stop("'n' must be a positive integer >= 'x'")
#: R/binom.test.R:0
msgid "'n' must be a positive integer >= 'x'"
msgstr "'n' muss eine positive, ganze Zahl >= 'x' sein"

#. R/ts.R: stop("'n' must be strictly positive")
#: R/ts.R:0
msgid "'n' must be strictly positive"
msgstr "'n' muss strikt positiv sein"

#. R/ar.R: stop("'n.ahead' must be at least 1")
#: R/ar.R:0
msgid "'n.ahead' must be at least 1"
msgstr "'n.ahead' muss mindestens 1 sein"

#. R/prcomp.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#. R/princomp-add.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have named columns matching one or more of the original columns"
msgstr "'newdata' hat keine benannte Spalte, die zu einer oder mehreren der Originalspalten passt"

#. R/prcomp.R: stop("'newdata' does not have the correct number of columns")
#. R/princomp-add.R: stop("'newdata' does not have the correct number of columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have the correct number of columns"
msgstr "'newdata' hat falsche Anzahl von Spalten"

#. R/prcomp.R: stop("'newdata' must be a matrix or data frame")
#. R/princomp-add.R: stop("'newdata' must be a matrix or data frame")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' must be a matrix or data frame"
msgstr "'newdata' muss eine Matrix oder ein Dataframe sein"

#. R/smspline.R: stop("'nknots' must be at least 1")
#: R/smspline.R:0
msgid "'nknots' must be at least 1"
msgstr "'nknots' muss mindestens 1 sein"

#. R/smspline.R: stop("'nknots' must be numeric (in {1,..,n})")
#: R/smspline.R:0
msgid "'nknots' must be numeric (in {1,..,n})"
msgstr "'nknots' muss numerisch aus {1,.., n} sein"

#. R/ppr.R: stop("'nterms' is missing with no default")
#: R/ppr.R:0
msgid "'nterms' is missing with no default"
msgstr "'nterm' fehlt ohne Standardwert"

#. R/aov.R: stop("'object' does not include an error 'qr' component")
#: R/aov.R:0
msgid "'object' does not include an error 'qr' component"
msgstr "'object' enthält keine Fehlerkomponente 'qr'"

#. R/lm.R: stop("'object' has no 'effects' component")
#: R/lm.R:0
msgid "'object' has no 'effects' component"
msgstr "'object' hat keine 'effects' Komponente"

#. R/models.R: stop("'offset' must be numeric")
#: R/models.R:0
msgid "'offset' must be numeric"
msgstr "'offset' muss numerisch sein"

#. R/fisher.test.R: stop("'or' must be a single number between 0 and Inf")
#: R/fisher.test.R:0
msgid "'or' must be a single number between 0 and Inf"
msgstr "'or' muss einzelne Zahl zwischen 0 und unendlich sein"

#. R/arima.R: stop("'order' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("'order' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
msgid "'order' must be a non-negative numeric vector of length 3"
msgstr "'order' muss ein nicht-negativer numerischer Vektor der Länge 3 sein"

#. R/dendrogram.R: stop("'order.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'order.dendrogram' requires a dendrogram"
msgstr "'order.dendrogramm' benötigt ein Dendrogramm"

#. R/ar.R: stop("'order.max' must be < 'n.obs'")
#: R/ar.R:0
msgid "'order.max' must be < 'n.obs'"
msgstr "'order.max' muss kleiner sein als 'n.obs'"

#. R/ar.R: stop("'order.max' must be < 'n.used'")
#. R/ar.R: stop("'order.max' must be < 'n.used'")
#. R/ar.R: stop("'order.max' must be < 'n.used'")
#: R/ar.R:0
msgid "'order.max' must be < 'n.used'"
msgstr "'order.max' muss kleiner sein als 'n.used'"

#. R/ar.R: stop("'order.max' must be >= 0")
#. R/ar.R: stop("'order.max' must be >= 0")
#: R/ar.R:0
msgid "'order.max' must be >= 0"
msgstr "'order.max' muss >= 0 sein"

#. R/ar.R: stop("'order.max' must be >= 1")
#. R/ar.R: stop("'order.max' must be >= 1")
#. R/ar.R: stop("'order.max' must be >= 1")
#: R/ar.R:0
msgid "'order.max' must be >= 1"
msgstr "'order.max' muss >= 1 sein"

#. R/binom.test.R: stop("'p' must be a single number between 0 and 1")
#: R/binom.test.R:0
msgid "'p' must be a single number between 0 and 1"
msgstr "'p' muss eine einzelne Zahl zwischen 0 und 1 sein"

#. R/spectrum.R: stop("'p' must be between 0 and 0.5")
#: R/spectrum.R:0
msgid "'p' must be between 0 and 0.5"
msgstr "'p' muss zwischen 0 und 0.5 liegen"

#. R/prop.test.R: stop("'p' must have the same length as 'x' and 'n'")
#: R/prop.test.R:0
msgid "'p' must have the same length as 'x' and 'n'"
msgstr "'p' muss die selbe Länge haben wie 'x' und 'n'"

#. R/nls-profile.R: stop("'params' has wrong length")
#: R/nls-profile.R:0
msgid "'params' has wrong length"
msgstr "'params' hat falsche Länge"

#. R/stepfun.R: stop("'plot.stepfun' called with wrong type of argument 'x'")
#: R/stepfun.R:0
msgid "'plot.stepfun' called with wrong type of argument 'x'"
msgstr "'plot.stepfun' mit einem Argument 'x' vom falschen Typ aufgerufen"

#. R/ppr.R: stop("'ppr' applies only to numerical variables")
#: R/ppr.R:0
msgid "'ppr' applies only to numerical variables"
msgstr "'ppr' lässt sich nur auf numerische Vawriablen anwenden"

#. R/princomp.R: stop("'princomp' can only be used with more units than variables")
#: R/princomp.R:0
msgid "'princomp' can only be used with more units than variables"
msgstr "'princomp' kann nur mit mehr Beobachtungen als Variablen genutzt werden"

#. R/nlm.R: stop("'print.level' must be in {0,1,2}")
#: R/nlm.R:0
msgid "'print.level' must be in {0,1,2}"
msgstr "'print.level' muss 0, 1 oder 2 sein"

#. R/distn.R: stop("'prob' and 'mu' both specified")
#. R/distn.R: stop("'prob' and 'mu' both specified")
#. R/distn.R: stop("'prob' and 'mu' both specified")
#. R/distn.R: stop("'prob' and 'mu' both specified")
#: R/distn.R:0
msgid "'prob' and 'mu' both specified"
msgstr "'prob' und 'mu' angegeben"

#. R/quantile.R: stop("'probs' outside [0,1]")
#: R/quantile.R:0
msgid "'probs' outside [0,1]"
msgstr "'probs' nicht in [0, 1]"

#. R/proj.R: stop("'proj' is not implemented for multiple responses")
#. R/proj.R: stop("'proj' is not implemented for multiple responses")
#: R/proj.R:0
msgid "'proj' is not implemented for multiple responses"
msgstr "'proj' ist für multiple Zielgrößen nicht implementiert"

#. R/kernel.R: stop("'r' is less than 0")
#: R/kernel.R:0
msgid "'r' is less than 0"
msgstr "'r' ist kleiner als 0"

#. R/kernel.R: stop("'r' is less than 1")
#: R/kernel.R:0
msgid "'r' is less than 1"
msgstr "'r' ist kleiner als 1"

#. R/poisson.test.R: stop("'r' must be a single positive number")
#: R/poisson.test.R:0
msgid "'r' must be a single positive number"
msgstr "'r' muss eine einzelne positive Zahl sein"

#. R/var.test.R: stop("'ratio' must be a single positive number")
#: R/var.test.R:0
msgid "'ratio' must be a single positive number"
msgstr "'ratio' muss eine einzelne positive Zahl sein"

#. R/relevel.R: stop("'ref' must be an existing level")
#: R/relevel.R:0
msgid "'ref' must be an existing level"
msgstr "'ref' muss eine existierende Faktorstufe sein"

#. R/relevel.R: stop("'ref' must be of length one")
#: R/relevel.R:0
msgid "'ref' must be of length one"
msgstr "'ref' muss Länge eins haben"

#. R/relevel.R: stop("'relevel' only for (unordered) factors")
#: R/relevel.R:0
msgid "'relevel' only for (unordered) factors"
msgstr "'relevel' nur für (ungeordnete) Faktoren"

#. R/relevel.R: stop("'relevel' only for unordered factors")
#: R/relevel.R:0
msgid "'relevel' only for unordered factors"
msgstr "'relevel' nur für ungeordnete Faktoren"

#. R/dendrogram.R: stop("'reorder.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'reorder.dendrogram' requires a dendrogram"
msgstr "'reorder.dendrogram' benötigt ein Dendrogramm"

#. R/ftable.R: stop("'row.var.names' missing")
#: R/ftable.R:0
msgid "'row.var.names' missing"
msgstr "'row.var.names' fehlt"

#. R/acf.R: stop("'sampleT' and 'nser' must be integer")
#: R/acf.R:0
msgid "'sampleT' and 'nser' must be integer"
msgstr "'sampleT' und 'nser' müssen ganzzahlig sein"

#. R/biplot.R: warning("'scale' is outside [0, 1]")
#. R/biplot.R: warning("'scale' is outside [0, 1]")
#: R/biplot.R:0
msgid "'scale' is outside [0, 1]"
msgstr "'scale' ist nicht aus [0, 1]"

#. R/contr.poly.R: stop("'scores' argument is of the wrong length")
#: R/contr.poly.R:0
msgid "'scores' argument is of the wrong length"
msgstr "'scores' Argument hat falsche Länge"

#. R/contr.poly.R: stop("'scores' must all be different numbers")
#: R/contr.poly.R:0
msgid "'scores' must all be different numbers"
msgstr "'scores' müssen alles unterschiedliche Zahlen sein"

#. R/ar.R: warning("'se.fit' not yet implemented for multivariate models")
#: R/ar.R:0
msgid "'se.fit' not yet implemented for multivariate models"
msgstr "'se.fit' für multivariate Modelle noch nicht implementiert"

#. R/arima.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
msgid "'seasonal$order' must be a non-negative numeric vector of length 3"
msgstr "'seasonal$order' muss ein nicht-negativer numerischer Vektor der Länge 3 sein"

#. R/arima.R: stop("'seasonal' is neither a list with component 'order' nor a numeric vector of length 3")
#. R/arma0.R: stop("'seasonal' is neither a list with component 'order' nor a numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
#, fuzzy
msgid "'seasonal' is neither a list with component 'order' nor a numeric vector of length 3"
msgstr "'seasonal' muss eine Liste mit einer Komponenete 'order' sein"

#. R/arima.R: stop("'seasonal' must be a list with component 'order'")
#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#: R/arima.R:0 R/arma0.R:0
msgid "'seasonal' must be a list with component 'order'"
msgstr "'seasonal' muss eine Liste mit einer Komponenete 'order' sein"

#. R/smspline.R: stop("'span' must be between 0 and 1.")
#: R/smspline.R:0
msgid "'span' must be between 0 and 1."
msgstr "'span' muss zwischen 0 und 1 liegen"

#. R/smspline.R: stop("'spar' must be of length 1")
#: R/smspline.R:0
msgid "'spar' must be of length 1"
msgstr "'spar' muss Länge eins haben"

#. R/spline.R: stop("'spline' requires n >= 1")
#: R/spline.R:0
msgid "'spline' requires n >= 1"
msgstr "'spline' erwartet n >= 1"

#. R/ts.R: stop("'start' > 'end'")
#: R/ts.R:0
msgid "'start' > 'end'"
msgstr "'start' > 'end'"

#. R/loglin.R: stop("'start' and 'table' must be same length")
#: R/loglin.R:0
msgid "'start' and 'table' must be same length"
msgstr "'start' und 'table' müssen dieselbe Länge haben"

#. R/ts.R: stop("'start' cannot be after 'end'")
#. R/ts.R: stop("'start' cannot be after 'end'")
#: R/ts.R:0
msgid "'start' cannot be after 'end'"
msgstr "'start' kann nicht nach 'end' sein"

#. R/ts.R: warning("'start' value not changed")
#: R/ts.R:0
msgid "'start' value not changed"
msgstr "'start' Wert nicht geändert"

#. R/models.R: stop("'termlabels' must be a character vector of length at least one")
#: R/models.R:0
msgid "'termlabels' must be a character vector of length at least one"
msgstr "'termlabels' muss ein Zeichenkettenvektor mit Länge >= 1 sein"

#. R/models.R: gettextf("'termobj' must be a object of class %s", dQuote("terms"))
#: R/models.R:0
msgid "'termobj' must be a object of class %s"
msgstr "'termobj' muss ein Objekt aus der Klasse %s sein"

#. R/approx.R: stop("'ties' is not \"ordered\", a function, or list(<string>, <function>)")
#: R/approx.R:0
msgid "'ties' is not \"ordered\", a function, or list(<string>, <function>)"
msgstr "'ties' sind weder \"ordered\", noch eine Funktion, noch list(<string>, <function>)"

#. R/smspline.R: stop("'tol' must be strictly positive and finite")
#: R/smspline.R:0
msgid "'tol' must be strictly positive and finite"
msgstr "'tol' muss strikt positiv und endlich sein"

#. R/optim.R: stop("'trace != 0' needs 'REPORT >= 1'")
#: R/optim.R:0
msgid "'trace != 0' needs 'REPORT >= 1'"
msgstr "'trace != 0' benötigt 'REPORT >= 1'"

#. R/ts.R: stop("'ts' object must have one or more observations")
#: R/ts.R:0
msgid "'ts' object must have one or more observations"
msgstr "'ts' Objekt muss eine oder mehrere Beobachtungen enthalten"

#. R/quantile.R: stop("'type' must be 1 or 3 for ordered factors")
#: R/quantile.R:0
msgid "'type' must be 1 or 3 for ordered factors"
msgstr "'type' muss für geordnete Faktoren 1 oder 3 sein"

#. R/family.R: gettextf("'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\"",     vtemp)
#: R/family.R:0
msgid "'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\""
msgstr "'variance' \"%s\" ist unzulässig: mögliche Werte sind \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" und \"constant\""

#. R/reshape.R: stop("'varying' arguments must be the same length")
#: R/reshape.R:0
msgid "'varying' arguments must be the same length"
msgstr "'varying' Argumente müssen gleich lang sein"

#. R/nls-profile.R: stop("'varying' has wrong length")
#: R/nls-profile.R:0
msgid "'varying' has wrong length"
msgstr "'varying' hat falsche Länge"

#. R/nls-profile.R: stop("'varying' must be in seq_along(pars)")
#. R/nls-profile.R: stop("'varying' must be in seq_along(pars)")
#: R/nls-profile.R:0
msgid "'varying' must be in seq_along(pars)"
msgstr "'varying' muss in seq_along(pars) liegen"

#. R/nls-profile.R: stop("'varying' must be logical, integer or character")
#: R/nls-profile.R:0
msgid "'varying' must be logical, integer or character"
msgstr "'varying' muss logisch, ganzzahlig oder Zeichenkette sein"

#. R/reshape.R: stop("'varying' must be nonempty list or vector")
#: R/reshape.R:0
msgid "'varying' must be nonempty list or vector"
msgstr "'varying' muss eine nicht-leere Liste oder Vektor sein"

#. R/lm.R: stop("'weights' as formula should be one-sided")
#: R/lm.R:0
msgid "'weights' as formula should be one-sided"
msgstr "'weights' als Formel sollte einseitig sein"

#. R/density.R: stop("'weights' must all be finite")
#: R/density.R:0
msgid "'weights' must all be finite"
msgstr "'weights' müssen alle endlich sein"

#. R/glm.R: stop("'weights' must be a numeric vector")
#. R/lm.R: stop("'weights' must be a numeric vector")
#: R/glm.R:0 R/lm.R:0
msgid "'weights' must be a numeric vector"
msgstr "'weights' muss ein numerischer Vektor sein"

#. R/density.R: stop("'weights' must not be negative")
#: R/density.R:0
msgid "'weights' must not be negative"
msgstr "'weights' dürfen nicht negativ sein"

#. R/plot.lm.R: stop("'which' must be in 1:6")
#: R/plot.lm.R:0
msgid "'which' must be in 1:6"
msgstr "'which' muss in 1:6 liegen"

#. R/TukeyHSD.R: stop("'which' specified no factors")
#: R/TukeyHSD.R:0
msgid "'which' specified no factors"
msgstr "'which' spezifizierte keine Faktoren"

#. R/TukeyHSD.R: warning("'which' specified some non-factors which will be dropped")
#: R/TukeyHSD.R:0
msgid "'which' specified some non-factors which will be dropped"
msgstr "'which' spezifiziert einige Nicht-Faktoren, diese werden nicht beachtet"

#. R/poisson.test.R: stop("'x' and 'T' have incompatible length")
#: R/poisson.test.R:0
msgid "'x' and 'T' have incompatible length"
msgstr "'x' und 'T' haben inkompatible Längen"

#. R/bartlett.test.R: stop("'x' and 'g' must have the same length")
#. R/fligner.test.R: stop("'x' and 'g' must have the same length")
#. R/kruskal.test.R: stop("'x' and 'g' must have the same length")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'x' and 'g' must have the same length"
msgstr "'x' und 'g' müssen dieselbe Länge haben"

#. R/pairwise.R: stop("'x' and 'n' must have the same length")
#. R/prop.test.R: stop("'x' and 'n' must have the same length")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' and 'n' must have the same length"
msgstr "'x' und 'n' müssen gleich lang sein"

#. R/chisq.test.R: stop("'x' and 'p' must have the same number of elements")
#: R/chisq.test.R:0
msgid "'x' and 'p' must have the same number of elements"
msgstr "'x' und 'p' müssen dieselbe Anzahl von Elementen haben"

#. R/weighted.mean.R: stop("'x' and 'w' must have the same length")
#: R/weighted.mean.R:0
msgid "'x' and 'w' must have the same length"
msgstr "'x' und 'w' müssen die selbe Länge haben"

#. R/density.R: stop("'x' and 'weights' have unequal length")
#: R/density.R:0
msgid "'x' and 'weights' have unequal length"
msgstr "'x' und 'weights' sind nicht gleich lang"

#. R/chisq.test.R: stop("'x' and 'y' must have at least 2 levels")
#. R/fisher.test.R: stop("'x' and 'y' must have at least 2 levels")
#. R/mantelhaen.test.R: stop("'x' and 'y' must have at least 2 levels")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mantelhaen.test.R:0
msgid "'x' and 'y' must have at least 2 levels"
msgstr "'x' und 'y' müssen mindestens 2 Stufen haben"

#. R/chisq.test.R: stop("'x' and 'y' must have the same length")
#. R/cor.test.R: stop("'x' and 'y' must have the same length")
#. R/fisher.test.R: stop("'x' and 'y' must have the same length")
#. R/mcnemar.test.R: stop("'x' and 'y' must have the same length")
#. R/wilcox.test.R: stop("'x' and 'y' must have the same length")
#: R/chisq.test.R:0 R/cor.test.R:0 R/fisher.test.R:0 R/mcnemar.test.R:0
#: R/wilcox.test.R:0
msgid "'x' and 'y' must have the same length"
msgstr "'x' und 'y' müssen dieselbe Länge haben"

#. R/mcnemar.test.R: stop("'x' and 'y' must have the same number of levels (minimum 2)")
#: R/mcnemar.test.R:0
msgid "'x' and 'y' must have the same number of levels (minimum 2)"
msgstr "'x' und 'y' müssen dieselbe Zahl Faktorstufen haben (>= 2)"

#. R/density.R: stop("'x' contains missing values")
#: R/density.R:0
msgid "'x' contains missing values"
msgstr "'x' enthält fehlende Werte"

#. R/fisher.test.R: gettextf("'x' has been rounded to integer: %s", ax)
#: R/fisher.test.R:0
msgid "'x' has been rounded to integer: %s"
msgstr "'x' wurde gerundet auf ganze Zahl: %s"

#. R/fisher.test.R: stop("'x' has entries too large to be integer")
#: R/fisher.test.R:0
msgid "'x' has entries too large to be integer"
msgstr "'x' enthält Einträge, die zu groß für ein Integer sind"

#. R/cancor.R: stop("'x' has rank 0")
#: R/cancor.R:0
msgid "'x' has rank 0"
msgstr "'x' hat Rang 0"

#. R/kruskal.test.R: warning("'x' is a list, so ignoring argument 'g'")
#: R/kruskal.test.R:0
msgid "'x' is a list, so ignoring argument 'g'"
msgstr "'x' ist eine Liste, also ignoriere Argument 'g'"

#. R/cor.R: stop("'x' is empty")
#: R/cor.R:0
msgid "'x' is empty"
msgstr "'x' ist leer"

#. R/kernel.R: stop("'x' is not a kernel")
#: R/kernel.R:0
msgid "'x' is not a kernel"
msgstr "'x' ist kein Kernel"

#. R/diffinv.R: stop("'x' is not a vector")
#. R/diffinv.R: stop("'x' is not a vector")
#. R/diffinv.R: stop("'x' is not a vector")
#. R/kernel.R: stop("'x' is not a vector")
#: R/diffinv.R:0 R/kernel.R:0
msgid "'x' is not a vector"
msgstr "'x' ist kein Vektor"

#. R/diffinv.R: stop("'x' is not a vector or matrix")
#. R/embed.R: stop("'x' is not a vector or matrix")
#: R/diffinv.R:0 R/embed.R:0
msgid "'x' is not a vector or matrix"
msgstr "'x' ist weder Vektor noch Matrix"

#. R/kernel.R: stop("'x' is shorter than kernel 'k'")
#: R/kernel.R:0
msgid "'x' is shorter than kernel 'k'"
msgstr "'x' ist kürzer als der Kernel 'k'"

#. R/chisq.test.R: stop("'x' must at least have 2 elements")
#: R/chisq.test.R:0
msgid "'x' must at least have 2 elements"
msgstr "'x' muss mindestens 2 Elemente haben"

#. R/splinefun.R: stop("'x' must be *strictly* increasing (non - NA)")
#: R/splinefun.R:0
msgid "'x' must be *strictly* increasing (non - NA)"
msgstr "'x' muss *streng* ansteigend sein (nicht NA)"

#. R/mantelhaen.test.R: stop("'x' must be a 3-dimensional array")
#: R/mantelhaen.test.R:0
msgid "'x' must be a 3-dimensional array"
msgstr "'x' muss ein 3-dimensionales Array sein"

#. R/bartlett.test.R: stop("'x' must be a list with at least 2 elements")
#. R/fligner.test.R: stop("'x' must be a list with at least 2 elements")
#. R/kruskal.test.R: stop("'x' must be a list with at least 2 elements")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'x' must be a list with at least 2 elements"
msgstr "'x' muss eine Liste mit höchstens 2 Elementen sein"

#. R/lm.R: stop("'x' must be a matrix")
#. R/lm.R: stop("'x' must be a matrix")
#: R/lm.R:0
msgid "'x' must be a matrix"
msgstr "'x' muss Matrix sein"

#. R/cov.wt.R: stop("'x' must be a matrix or a data frame")
#: R/cov.wt.R:0
msgid "'x' must be a matrix or a data frame"
msgstr "'x' muss eine Matrix oder ein Dataframe sein"

#. R/dendrogram.R: stop("'x' must be a numeric matrix")
#: R/dendrogram.R:0
msgid "'x' must be a numeric matrix"
msgstr "'x' muss numerische Matrix sein"

#. R/cor.test.R: stop("'x' must be a numeric vector")
#: R/cor.test.R:0
msgid "'x' must be a numeric vector"
msgstr "'x' muss ein numerischer Vektor sein"

#. R/spectrum.R: stop("'x' must be a time series or an ar() fit")
#: R/spectrum.R:0
msgid "'x' must be a time series or an ar() fit"
msgstr "'x' muss entweder eine Zeitreihe oder ein ar() Fit sein"

#. R/ftable.R: stop("'x' must be an \"ftable\" object")
#. R/ftable.R: stop("'x' must be an \"ftable\" object")
#. R/ftable.R: stop("'x' must be an \"ftable\" object")
#: R/ftable.R:0
msgid "'x' must be an \"ftable\" object"
msgstr "'x' muss ein \"ftable\" Objekt sein"

#. R/symnum.R: gettextf("'x' must be between %s and %s", format(minc), format(maxc))
#: R/symnum.R:0
msgid "'x' must be between %s and %s"
msgstr "'x' muss zwischen %s und %s liegen"

#. R/symnum.R: gettext("'x' must be between -1 and 1")
#: R/symnum.R:0
msgid "'x' must be between -1 and 1"
msgstr "'x' muss zwischen -1 und 1 liegen"

#. R/smspline.R: stop("'x' must be between 0 and 1 for periodic smooth")
#: R/smspline.R:0
msgid "'x' must be between 0 and 1 for periodic smooth"
msgstr "'x' muss für eine periodische Glättung zwischen 0 und 1 liegen"

#. R/anova.R: stop("'x' must be coefficient matrix/data frame")
#: R/anova.R:0
msgid "'x' must be coefficient matrix/data frame"
msgstr "'x' muss eine Koeffizientenmatrix oder Dataframe sein"

#. R/poisson.test.R: stop("'x' must be finite, nonnegative, and integer")
#: R/poisson.test.R:0
msgid "'x' must be finite, nonnegative, and integer"
msgstr "'x' muss endlich, nicht-negativ und ganzzahlig sein"

#. R/distn.R: stop("'x' must be non-negative")
#: R/distn.R:0
msgid "'x' must be non-negative"
msgstr "'x' muss nicht-negativ sein"

#. R/binom.test.R: stop("'x' must be nonnegative and integer")
#: R/binom.test.R:0
msgid "'x' must be nonnegative and integer"
msgstr "'x' muss nicht-negativ und ganzzahlig sein"

#. R/StructTS.R: stop("'x' must be numeric")
#. R/acf.R: stop("'x' must be numeric")
#. R/acf.R: stop("'x' must be numeric")
#. R/ar.R: stop("'x' must be numeric")
#. R/ar.R: stop("'x' must be numeric")
#. R/ar.R: stop("'x' must be numeric")
#. R/arima.R: stop("'x' must be numeric")
#. R/arma0.R: stop("'x' must be numeric")
#. R/cor.R: stop("'x' must be numeric")
#. R/wilcox.test.R: stop("'x' must be numeric")
#: R/StructTS.R:0 R/acf.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/cor.R:0
#: R/wilcox.test.R:0
msgid "'x' must be numeric"
msgstr "'x' muss numerisch sein"

#. R/mcnemar.test.R: stop("'x' must be square with at least two rows and columns")
#: R/mcnemar.test.R:0
msgid "'x' must be square with at least two rows and columns"
msgstr "'x' muss quadratisch sein, mindestens 2x2"

#. R/cov.wt.R: stop("'x' must contain finite values only")
#: R/cov.wt.R:0
msgid "'x' must contain finite values only"
msgstr "'x' darf nur endliche Werte enthalten"

#. R/ecdf.R: stop("'x' must have 1 or more non-missing values")
#: R/ecdf.R:0
msgid "'x' must have 1 or more non-missing values"
msgstr "'x' muss mindestens einen nicht-fehlenden Wert enthalten"

#. R/pairwise.R: stop("'x' must have 2 columns")
#. R/prop.test.R: stop("'x' must have 2 columns")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' must have 2 columns"
msgstr "'x' muss 2 Spalten haben"

#. R/dendrogram.R: stop("'x' must have at least 2 rows and 2 columns")
#: R/dendrogram.R:0
msgid "'x' must have at least 2 rows and 2 columns"
msgstr "'x' muss mindestens 2 Zeilen und 2 Spalten haben"

#. R/fisher.test.R: stop("'x' must have at least 2 rows and columns")
#: R/fisher.test.R:0
msgid "'x' must have at least 2 rows and columns"
msgstr "'x' muss mindestens 2 Zeilen und Spalten haben"

#. R/stepfun.R: stop("'x' must have length >= 1")
#: R/stepfun.R:0
msgid "'x' must have length >= 1"
msgstr "'x' muss Länge >= 1 haben"

#. R/mantelhaen.test.R: stop("'x', 'y', and 'z' must have the same length")
#: R/mantelhaen.test.R:0
msgid "'x', 'y', and 'z' must have the same length"
msgstr "'x', 'y' und 'z' müssen gleich lang sein"

#. R/diffinv.R: stop("'xi' does not have the right length")
#: R/diffinv.R:0
msgid "'xi' does not have the right length"
msgstr "'xi' hat nicht die richtige Länge"

#. R/arima.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#. R/arma0.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#: R/arima.R:0 R/arma0.R:0
msgid "'xreg' and 'newxreg' have different numbers of columns"
msgstr "'xreg' und 'newxreg' haben verschiedene Anzahl von Spalten"

#. R/arma0.R: stop("'xreg' is collinear")
#: R/arma0.R:0
msgid "'xreg' is collinear"
msgstr "'xreg' ist kollinear"

#. R/ts.R: stop("'xy.labels' must be logical or character")
#: R/ts.R:0
msgid "'xy.labels' must be logical or character"
msgstr "'xy.labels' müssen boolesch oder Zeichenkette sein"

#. R/cancor.R: stop("'y' has rank 0")
#: R/cancor.R:0
msgid "'y' has rank 0"
msgstr "'y' hat Rang 0"

#. R/t.test.R: stop("'y' is missing for paired test")
#. R/wilcox.test.R: stop("'y' is missing for paired test")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'y' is missing for paired test"
msgstr "'y' für den paarweisen Test fehlt"

#. R/cor.test.R: stop("'y' must be a numeric vector")
#: R/cor.test.R:0
msgid "'y' must be a numeric vector"
msgstr "'y' muss ein numerischer Vektor sein"

#. R/spline.R: stop("'y' must be increasing or decreasing")
#. R/splinefun.R: stop("'y' must be increasing or decreasing")
#: R/spline.R:0 R/splinefun.R:0
msgid "'y' must be increasing or decreasing"
msgstr "'y' muss monoton sein"

#. R/cor.R: stop("'y' must be numeric")
#. R/wilcox.test.R: stop("'y' must be numeric")
#: R/cor.R:0 R/wilcox.test.R:0
msgid "'y' must be numeric"
msgstr "'y' muss numerisch sein"

#. R/ks.test.R: stop("'y' must be numeric or a function or a string naming a valid function")
#: R/ks.test.R:0
msgid "'y' must be numeric or a function or a string naming a valid function"
msgstr "'y' muss entweder numerisch oder eine Funktion oder Name einer zulässigen Funktion sein"

#. R/smspline.R: stop("'y' must be numeric vector")
#: R/smspline.R:0
msgid "'y' must be numeric vector"
msgstr "'y' muss ein numerischer Vektor sein"

#. R/stepfun.R: stop("'y' must be one longer than 'x'")
#: R/stepfun.R:0
msgid "'y' must be one longer than 'x'"
msgstr "'y' muss einen länger sein als 'x'"

#. R/friedman.test.R: stop("'y', 'groups' and 'blocks' must have the same length")
#. R/quade.test.R: stop("'y', 'groups' and 'blocks' must have the same length")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "'y', 'groups' and 'blocks' must have the same length"
msgstr "'y', 'groups' und 'blocks' müssen gleich lang sein"

#. R/quantile.R: stop("(unordered) factors are not allowed")
#: R/quantile.R:0
msgid "(unordered) factors are not allowed"
msgstr "(ungeordnete) Faktoren sind nicht erlaubt"

#. R/lm.R: stop("0 (non-NA) cases")
#. R/lm.R: stop("0 (non-NA) cases")
#: R/lm.R:0
msgid "0 (non-NA) cases"
msgstr "alle Fälle NA"

#. R/glm.R: stop("0s in V(mu)")
#: R/glm.R:0
msgid "0s in V(mu)"
msgstr "0s in V(mu)"

#. R/add.R: stop("AIC is -infinity for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is -infinity for this model, so 'step' cannot proceed"
msgstr "AIC ist -Inf für dieses Modell, deshalb kann 'step' nicht fortfahren"

#. R/add.R: stop("AIC is not defined for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is not defined for this model, so 'step' cannot proceed"
msgstr "AIC ist für dieses Modell nicht definiert, deshalb kann 'step' nicht fortfahren"

#. R/lm.R: warning("ANOVA F-tests on an essentially perfect fit are unreliable")
#: R/lm.R:0
msgid "ANOVA F-tests on an essentially perfect fit are unreliable"
msgstr "ANOVA F-Tests auf einem im Wesentlichen perfekten Fit sind unzuverlässig"

#. R/lm.R: warning("Assuming constant prediction variance even though model fit is weighted\n")
#: R/lm.R:0
msgid "Assuming constant prediction variance even though model fit is weighted"
msgstr "Nehme konstante Vorhersagevarianz an, obwohl gewichtet gefittet wurde"

#. R/constrOptim.R: gettext("Barrier algorithm ran out of iterations and did not converge")
#: R/constrOptim.R:0
msgid "Barrier algorithm ran out of iterations and did not converge"
msgstr "Barrier-Algorithmus konvergierte nicht in maximaler Iterationszahl"

#. R/cor.test.R: warning("Cannot compute exact p-value with ties")
#. R/cor.test.R: warning("Cannot compute exact p-value with ties")
#: R/cor.test.R:0
msgid "Cannot compute exact p-value with ties"
msgstr "Kann exakten p-Wert bei Bindungen nicht berechnen"

#. R/chisq.test.R: warning("Chi-squared approximation may be incorrect")
#. R/prop.test.R: warning("Chi-squared approximation may be incorrect")
#: R/chisq.test.R:0 R/prop.test.R:0
msgid "Chi-squared approximation may be incorrect"
msgstr "Chi-Quadrat-Approximation kann inkorrekt sein"

#. R/dendrogram.R: stop("Colv = \"Rowv\" but nrow(x) != ncol(x)")
#: R/dendrogram.R:0
msgid "Colv = \"Rowv\" but nrow(x) != ncol(x)"
msgstr "Colv = \"Rowv\" aber nrow(x) != ncol(x)"

#. R/hclust.R: gettextf("\n Consider providing an as.hclust.%s() method", oldClass(x)[1L])
#: R/hclust.R:0
msgid "Consider providing an as.hclust.%s() method"
msgstr "Evtl. eine as.hclust.%s()-Methode bereitstellen"

#. R/model.tables.R: message("Design is unbalanced - use se.contrast() for se's")
#: R/model.tables.R:0
msgid "Design is unbalanced - use se.contrast() for se's"
msgstr "Design ist unbalanciert - nutze se.contrast() für die Standardfehler"

#. R/aov.R: warning("Error() model is singular")
#: R/aov.R:0
msgid "Error() model is singular"
msgstr "Error() Modell ist singulär"

#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#: R/add.R:0
msgid "F test assumes 'quasi%s' family"
msgstr "F-Test unterstellt 'quasi%s' Familie"

#. R/add.R: gettextf("F test assumes quasi%s family", fam)
#: R/add.R:0
msgid "F test assumes quasi%s family"
msgstr "F-Test unterstellt quasi%s Familie"

#. R/arima.R: warning("MA part of model is not invertible")
#. R/arma0.R: warning("MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "MA part of model is not invertible"
msgstr "MA Teil des Modells ist nicht invertierbar"

#. R/ar.R: stop("MLE only implemented for univariate series")
#: R/ar.R:0
msgid "MLE only implemented for univariate series"
msgstr "MLE nur für univariate Zeitreihen implementiert"

#. R/smspline.R: stop("NA lev[]; probably smoothing parameter 'spar' way too large!")
#: R/smspline.R:0
msgid "NA lev[]; probably smoothing parameter 'spar' way too large!"
msgstr "NA lev[]; wahrscheinlich ist der Glättungsparameter 'spar' viel zu groß"

#. R/cmdscale.R: stop("NA values not allowed in 'd'")
#: R/cmdscale.R:0
msgid "NA values not allowed in 'd'"
msgstr "NAs sind in 'd' nicht erlaubt"

#. R/friedman.test.R: stop("NA's are not allowed in 'groups' or 'blocks'")
#. R/quade.test.R: stop("NA's are not allowed in 'groups' or 'blocks'")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "NA's are not allowed in 'groups' or 'blocks'"
msgstr "NAs sind in 'groups' oder 'blocks' nicht erlaubt"

#. R/mantelhaen.test.R: stop("NAs are not allowed")
#: R/mantelhaen.test.R:0
msgid "NAs are not allowed"
msgstr "NAs sind nicht erlaubt"

#. R/arima.R: gettextf("NAs in '%s'", "phi")
#. R/arima.R: gettextf("NAs in '%s'", "theta")
#: R/arima.R:0
msgid "NAs in '%s'"
msgstr "NAs in '%s'"

#. R/acf.R: stop("NAs in 'x'")
#. R/ar.R: stop("NAs in 'x'")
#. R/ar.R: stop("NAs in 'x'")
#. R/ar.R: stop("NAs in 'x'")
#. R/ar.R: stop("NAs in 'x'")
#: R/acf.R:0 R/ar.R:0
msgid "NAs in 'x'"
msgstr "NAs in 'x'"

#. R/ar.R: stop("NAs in 'x' must be the same row-wise")
#. R/ar.R: stop("NAs in 'x' must be the same row-wise")
#: R/ar.R:0
msgid "NAs in 'x' must be the same row-wise"
msgstr "NAs in 'x' müssen zeilenweise dieselben sein"

#. R/glm.R: stop("NAs in V(mu)")
#: R/glm.R:0
msgid "NAs in V(mu)"
msgstr "NAs in V(mu)"

#. R/glm.R: stop("NAs in d(mu)/d(eta)")
#: R/glm.R:0
msgid "NAs in d(mu)/d(eta)"
msgstr "NAs in d(mu)/d(eta)"

#. R/arma0.R: warning("NAs present: setting 'delta' to -1")
#: R/arma0.R:0
msgid "NAs present: setting 'delta' to -1"
msgstr "NAs vorhanden: setze 'delta' auf -1"

#. R/power.R: warning("No p1 in [0, p2] can be found to achieve the desired power")
#: R/power.R:0
msgid "No p1 in [0, p2] can be found to achieve the desired power"
msgstr "Es kann kein p1 in [0, p2] gefunden werden, um die gewünschte Power zu erreichen"

#. R/power.R: warning("No p2 in [p1, 1] can be found to achieve the desired power")
#: R/power.R:0
msgid "No p2 in [p1, 1] can be found to achieve the desired power"
msgstr "Es kann kein p2 in [p1, 1] gefunden werden, um die gewünschte Power zu erreichen"

#. R/power.R: warning("No significance level [0, 1] can be found to achieve the desired power")
#: R/power.R:0
msgid "No significance level [0, 1] can be found to achieve the desired power"
msgstr "Es kann kein Signifikanzniveau in [0, 1] gefunden werden, um die gewünschte Power zu erreichen"

#. R/smspline.R: stop("Numeric 'all.knots' must be strictly increasing")
#: R/smspline.R:0
msgid "Numeric 'all.knots' must be strictly increasing"
msgstr "Numerisches 'all.knots' muss streng ansteigend sein"

#. R/constrOptim.R: gettextf("Objective function decreased at outer iteration %d",     i)
#: R/constrOptim.R:0
msgid "Objective function decreased at outer iteration %d"
msgstr "Zielfunktion gefallen bei der äußeren Iteration %d"

#. R/constrOptim.R: gettextf("Objective function increased at outer iteration %d",     i)
#: R/constrOptim.R:0
msgid "Objective function increased at outer iteration %d"
msgstr "Zielfunktion angestiegen bei der äußeren Iteration %d"

#. R/prcomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#: R/prcomp.R:0 R/princomp.R:0
msgid "PCA applies only to numerical variables"
msgstr "PCA kann nur auf numerische Variablen angewendet werden"

#. R/acf.R: gettextf("Page [%d,%d]: i =%s; j =%s", I, J, paste(iind, collapse = ","),     paste(jind, collapse = ","))
#: R/acf.R:0
msgid "Page [%d,%d]: i =%s; j =%s"
msgstr "Seite [%d,%d]: i=%s; j=%s"

#. R/ks.test.R: gettextf("Parameter(s) %s ignored", paste(names(args), collapse = ", "))
#: R/ks.test.R:0
#, fuzzy
msgid "Parameter(s) %s ignored"
msgstr "passe Parameter an"

#. R/glm-profile.R: gettext("\nParameter: ", domain = "R-stats")
#: R/glm-profile.R:0
msgid "Parameter:"
msgstr ""

#. R/kmeans.R: gettextf("Quick-TRANSfer stage steps exceeded maximum (= %d)",     isteps.Qtran)
#: R/kmeans.R:0
msgid "Quick-TRANSfer stage steps exceeded maximum (= %d)"
msgstr "Anzahl Schritte in der Quick-TRANSfer Stufe überschreitet Maximum (= %d)"

#. R/aov.R: message("Refitting model to allow projection")
#: R/aov.R:0
msgid "Refitting model to allow projection"
msgstr "Modellneuanpassung, um Projektion zu ermöglichen"

#. R/confint.R: gettextf("Reprofiling for %s  statistic. Waiting...", test)
#: R/confint.R:0
msgid "Reprofiling for %s  statistic. Waiting..."
msgstr ""

#. R/wilcox.test.R: warning("Requested conf.level not achievable")
#: R/wilcox.test.R:0
msgid "Requested conf.level not achievable"
msgstr "gefordertes conf.level nicht erreichbar"

#. R/model.tables.R: gettextf("SEs for type '%s' are not yet implemented", type)
#. R/model.tables.R: gettextf("SEs for type '%s' are not yet implemented", type)
#: R/model.tables.R:0
msgid "SEs for type '%s' are not yet implemented"
msgstr "SEs für Typ '%s' sind noch nicht implementiert"

#. R/density.R: warning("Selecting bandwidth *not* using 'weights'")
#: R/density.R:0
msgid "Selecting bandwidth *not* using 'weights'"
msgstr ""

#. R/model.tables.R: message("Standard error information not returned as design is unbalanced. \nStandard errors can be obtained through 'se.contrast'.")
#: R/model.tables.R:0
msgid ""
"Standard error information not returned as design is unbalanced. \n"
"Standard errors can be obtained through 'se.contrast'."
msgstr ""
"Information über den Standardfehler nicht zurückgegeben, da das Design unbalanciert ist. \n"
"Standardfehler können über 'se.contrast' berechnet werden"

#. R/hclust.R: message("The \"ward\" method has been renamed to \"ward.D\"; note new \"ward.D2\"")
#: R/hclust.R:0
msgid "The \"ward\" method has been renamed to \"ward.D\"; note new \"ward.D2\""
msgstr "Die \"ward\" Methode wurde in \"ward.D\" umbenannt; beachte das neue \"ward.D2\""

#. R/models.R: sprintf("Unparseable 'response' \"%s\"; use is deprecated.  Use as.name(.) or `..`!",     response)
#: R/models.R:0
msgid "Unparseable 'response' \"%s\"; use is deprecated.  Use as.name(.) or `..`!"
msgstr "Nicht zu parsende 'response' \"%s\"; Nutzung ist veraltet.  Nutze as.name(.) oder `..`!"

#. R/confint.R: message("Waiting for profiling to be done...")
#. R/confint.R: message("Waiting for profiling to be done...")
#: R/confint.R:0
msgid "Waiting for profiling to be done..."
msgstr ""

#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#: R/mlm.R:0
msgid "X does not define a subspace of M"
msgstr "x definiert keinen Unterraum von M"

#. R/integrate.R: stop("a limit is NA or NaN")
#: R/integrate.R:0
msgid "a limit is NA or NaN"
msgstr "eine Grenze ist NA oder NaN"

#. R/oneway.test.R: stop("a two-sided formula is required")
#: R/oneway.test.R:0
msgid "a two-sided formula is required"
msgstr "eine zweiseitige Formel ist nötig"

#. R/shapiro.test.R: stop("all 'x' values are identical")
#: R/shapiro.test.R:0
msgid "all 'x' values are identical"
msgstr "alle 'x' Werte sind gleich"

#. R/zzModels.R: stop("all 'x' values must be non-negative to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "all 'x' values must be non-negative to fit the Weibull growth model"
msgstr "alle 'x' Werte müssen nicht-negativ sein, um ein Weibull-Wachstumsmodell anzupassen"

#. R/identify.hclust.R: gettextf("all elements of 'which' must be between 1 and %d",     k)
#: R/identify.hclust.R:0
msgid "all elements of 'which' must be between 1 and %d"
msgstr "alle Elemente von 'which' müssen zwischen 1 und %d liegen"

#. R/chisq.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/fisher.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/mcnemar.test.R: stop("all entries of 'x' must be nonnegative and finite")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mcnemar.test.R:0
msgid "all entries of 'x' must be nonnegative and finite"
msgstr "alle Einträge von 'x' müssen nicht-negativ und endlich sein"

#. R/fligner.test.R: stop("all groups must contain data")
#. R/kruskal.test.R: stop("all groups must contain data")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all groups must contain data"
msgstr "alle Gruppen müssen Daten enthalten"

#. R/bartlett.test.R: stop("all observations are in the same group")
#. R/fligner.test.R: stop("all observations are in the same group")
#. R/kruskal.test.R: stop("all observations are in the same group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all observations are in the same group"
msgstr "alle Beobachtungen sind in derselben Gruppe"

#. R/StructTS.R: stop("all parameters were fixed")
#. R/arma0.R: stop("all parameters were fixed")
#: R/StructTS.R:0 R/arma0.R:0
msgid "all parameters were fixed"
msgstr "alle Parameter wurden festgelegt"

#. R/na.ts.R: stop("all times contain an NA")
#. R/ts.R: stop("all times contain an NA")
#: R/na.ts.R:0 R/ts.R:0
msgid "all times contain an NA"
msgstr "alle Zeiten enthalten ein NA"

#. R/smspline.R: stop("all weights should be non-negative")
#: R/smspline.R:0
msgid "all weights should be non-negative"
msgstr "alle Gewichte sollten nicht-negativ sein"

#. R/fisher.test.R: stop("alternative must be \"two.sided\", \"less\" or \"greater\"")
#: R/fisher.test.R:0
msgid "alternative must be \"two.sided\", \"less\" or \"greater\""
msgstr "Alternative muss entweder \"two.sided\", \"less\" oder \"greater\" sein"

#. R/hclust.R: stop("ambiguous clustering method", paste("", method))
#: R/hclust.R:0
msgid "ambiguous clustering method"
msgstr "zweideutige Clustering-Methode"

#. R/dist.R: stop("ambiguous distance method")
#: R/dist.R:0
msgid "ambiguous distance method"
msgstr "zweideutige Distanzmethode"

#. R/nls.R: stop("anova is only defined for sequences of \"nls\" objects")
#: R/nls.R:0
msgid "anova is only defined for sequences of \"nls\" objects"
msgstr "anova ist nur für Folgen von \"nls\" Objekten definiert"

#. R/nls.R: warning("argument 'na.action' will be ignored")
#: R/nls.R:0
msgid "argument 'na.action' will be ignored"
msgstr "Argument 'na.action' wird ignoriert"

#. R/selfStart.R: stop("argument 'object' has an impossible length")
#: R/selfStart.R:0
msgid "argument 'object' has an impossible length"
msgstr "Argument 'object' hat unmögliche Länge"

#. R/ks.test.R: stop("argument 'p' must be numeric")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'p' must be numeric"
msgstr "Argument 'x' muss numerisch sein"

#. R/ks.test.R: stop("argument 'q' must be numeric")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'q' must be numeric"
msgstr "Argument 'x' muss numerisch sein"

#. R/filter.R: stop("argument 'sides' must be 1 or 2")
#: R/filter.R:0
msgid "argument 'sides' must be 1 or 2"
msgstr "Argument 'sides' muss 1 oder 2 sein"

#. R/ks.test.R: stop("argument 'sizes' must be a vector of length 2")
#. R/ks.test.R: stop("argument 'sizes' must be a vector of length 2")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'sizes' must be a vector of length 2"
msgstr "'interval' muss ein Vektor der Länge 2 sein"

#. R/nls.R: warning("argument 'subset' will be ignored")
#: R/nls.R:0
msgid "argument 'subset' will be ignored"
msgstr "Argument 'subset' wird ignoriert"

#. R/hclust.R: gettextf("argument 'x' cannot be coerced to class %s", dQuote("hclust"))
#: R/hclust.R:0
msgid "argument 'x' cannot be coerced to class %s"
msgstr "Argument 'x' kann nicht in die Klasse %s gewandelt werden"

#. R/aggregate.R: stop("argument 'x' is  missing -- it has been renamed from 'formula'")
#: R/aggregate.R:0
msgid "argument 'x' is  missing -- it has been renamed from 'formula'"
msgstr ""

#. R/aggregate.R: stop("argument 'x' must be a formula")
#: R/aggregate.R:0
#, fuzzy
msgid "argument 'x' must be a formula"
msgstr "Argument 'x' muss numerisch sein"

#. R/density.R: stop("argument 'x' must be numeric")
#: R/density.R:0
msgid "argument 'x' must be numeric"
msgstr "Argument 'x' muss numerisch sein"

#. R/proj.R: stop("argument does not include a 'qr' component")
#: R/proj.R:0
msgid "argument does not include a 'qr' component"
msgstr "Argument enthält keine 'qr' Komponente"

#. R/proj.R: stop("argument does not include an 'effects' component")
#: R/proj.R:0
msgid "argument does not include an 'effects' component"
msgstr "Argument enthält keine 'effects' Komponente"

#. R/r2dtable.R: stop("arguments 'r' and 'c' must have the same sums")
#: R/r2dtable.R:0
msgid "arguments 'r' and 'c' must have the same sums"
msgstr "Argumente 'r' und 'c' müssen dieselben Summen besitzen"

#. R/aggregate.R: stop("arguments must have same length")
#: R/aggregate.R:0
msgid "arguments must have same length"
msgstr "Argumente müssen dieselbe Länge haben"

#. R/contr.poly.R: stop("arguments must have the same length")
#: R/contr.poly.R:0
msgid "arguments must have the same length"
msgstr "Argumente müssen dieselbe Länge haben"

#. R/lm.R: warning("assuming prediction variance inversely proportional to weights used for fitting\n")
#: R/lm.R:0
msgid "assuming prediction variance inversely proportional to weights used for fitting"
msgstr "nehme die Vorhersagevarianz als umgekehrt proportional zu den beim Fit genutzten Gewichten an"

#. R/chisq.test.R: stop("at least one entry of 'x' must be positive")
#: R/chisq.test.R:0
msgid "at least one entry of 'x' must be positive"
msgstr "mindestens ein Eintrag von 'x' muss positiv sein"

#. R/smooth.R: stop("attempt to smooth NA values")
#: R/smooth.R:0
msgid "attempt to smooth NA values"
msgstr "Versuch NAs zu glätten"

#. R/smooth.R: stop("attempt to smooth non-numeric values")
#: R/smooth.R:0
msgid "attempt to smooth non-numeric values"
msgstr "Versuch nicht-numerische Werte zu glätten"

#. R/add.R: warning("attempting model selection on an essentially perfect fit is nonsense",     call. = FALSE)
#: R/add.R:0
msgid "attempting model selection on an essentially perfect fit is nonsense"
msgstr "Modellselektion auf einem im Wesentlichen perfekten Fit ist Unsinn"

#. R/ts.R: stop("bad value for 'end'")
#: R/ts.R:0
msgid "bad value for 'end'"
msgstr "schlechter Wert für 'end'"

#. R/diffinv.R: stop("bad value for 'lag' or 'differences'")
#. R/ts.R: stop("bad value for 'lag' or 'differences'")
#: R/diffinv.R:0 R/ts.R:0
msgid "bad value for 'lag' or 'differences'"
msgstr "ungültiger Wert für 'lag' oder 'differences'"

#. R/ts.R: stop("bad value for 'start'")
#: R/ts.R:0
msgid "bad value for 'start'"
msgstr "schlechter Wert für 'start'"

#. R/runmed.R: stop("bandwidth 'k' must be >= 1 and odd!")
#: R/runmed.R:0
msgid "bandwidth 'k' must be >= 1 and odd!"
msgstr "Bandbreite 'k' muss >= 1 und ungerade sein"

#. R/contrast.R: stop("baseline group number out of range")
#: R/contrast.R:0
msgid "baseline group number out of range"
msgstr "Basisgruppenanzahl liegt außerhalb des Bereichs"

#. R/biplot.R: stop("biplots are not defined for complex PCA")
#: R/biplot.R:0
msgid "biplots are not defined for complex PCA"
msgstr "Biplots sind für komplexe PCA nicht definiert"

#. R/loess.R: warning("both 'span' and 'enp.target' specified: 'span' will be used")
#: R/loess.R:0
msgid "both 'span' and 'enp.target' specified: 'span' will be used"
msgstr "sowohl 'span' als auch 'enp.target' angegeben: benutze 'span'"

#. R/princomp.R: warning("both 'x' and 'covmat' were supplied: 'x' will be ignored")
#: R/princomp.R:0
msgid "both 'x' and 'covmat' were supplied: 'x' will be ignored"
msgstr "sowohl 'x' als auch 'covmat' sind angegeben: 'x' wird ignoriert"

#. R/cor.R: stop("both 'x' and 'y' must be non-empty")
#: R/cor.R:0
msgid "both 'x' and 'y' must be non-empty"
msgstr "'x' und 'y' dürfen nicht leer sein"

#. R/optim.R: warning("bounds can only be used with method L-BFGS-B (or Brent)")
#: R/optim.R:0
msgid "bounds can only be used with method L-BFGS-B (or Brent)"
msgstr "Grenzen können nur mit der Methode L-BFGS-B (oder Brent) benutzt werden"

#. R/ts.R: stop("burn-in 'n.start' must be as long as 'ar + ma'")
#: R/ts.R:0
msgid "burn-in 'n.start' must be as long as 'ar + ma'"
msgstr "Vorlauf 'n.start' muss so lang sein wie 'ar + ma'"

#. R/lm.R: warning("calling anova.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling anova.lm(<fake-lm-object>) ..."
msgstr "Aufruf von anova.lm(<fake-lm-object>) ..."

#. R/lm.R: warning("calling predict.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling predict.lm(<fake-lm-object>) ..."
msgstr "Aufruf von predict.lm(<fake-lm-object>)..."

#. R/lm.R: warning("calling summary.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling summary.lm(<fake-lm-object>) ..."
msgstr "aufruf von summary.lm(<fake-lm-obejct>)"

#. R/acf.R: warning("can use ci.type=\"ma\" only if first lag is 0")
#: R/acf.R:0
msgid "can use ci.type=\"ma\" only if first lag is 0"
msgstr "kann ci.type=\"ma\" nur benutzen, wenn lag gleich 0 ist"

#. R/nls.R: stop("cannot calculate REML log-likelihood for \"nls\" objects")
#: R/nls.R:0
msgid "cannot calculate REML log-likelihood for \"nls\" objects"
msgstr "kann die REML log-likelihood für \"nls\" Objekte nicht berechnen"

#. R/aggregate.R: gettextf("cannot change frequency from %g to %g", ofrequency,     nfrequency)
#: R/aggregate.R:0
msgid "cannot change frequency from %g to %g"
msgstr "kann die Frequenz nicht von %g nach %g ändern"

#. R/ansari.test.R: warning("cannot compute asymptotic confidence set or estimator")
#: R/ansari.test.R:0
msgid "cannot compute asymptotic confidence set or estimator"
msgstr "kann keinen asymptotischen Konfidenzbereich oder Schätzer berechnen"

#. R/wilcox.test.R: warning("cannot compute confidence interval when all observations are tied",     call. = FALSE)
#: R/wilcox.test.R:0
msgid "cannot compute confidence interval when all observations are tied"
msgstr "kann kein Konfidenzinterval berechnen, wenn alle Beobachtungen gebunden sind"

#. R/wilcox.test.R: warning("cannot compute confidence interval when all observations are zero or tied",     call. = FALSE)
#: R/wilcox.test.R:0
msgid "cannot compute confidence interval when all observations are zero or tied"
msgstr "kann kein Konfidenzinterval berechnen, wenn alle Beobachtungen 0 oder gebunden sind"

#. R/ansari.test.R: warning("cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute confidence set, returning NA"
msgstr "kann keinen Konfidenzbereich berechnen, gebe NA zurück"

#. R/ansari.test.R: warning("cannot compute estimate, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute estimate, returning NA"
msgstr "kann keinen Schätzer berechnen, gebe NA zurück"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with ties")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with ties"
msgstr "kann bei Bindungen das exakte Konfidenzinterval nicht berechnen"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with zeroes"
msgstr "kann das exakte Konfidenzinterval bei Nullen nicht berechnen"

#. R/ansari.test.R: warning("cannot compute exact confidence intervals with ties")
#. R/wilcox.test.R: warning("cannot compute exact confidence intervals with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact confidence intervals with ties"
msgstr "Kann kein exaktes Konfidenzinterval bei Bindungen berechnen"

#. R/ansari.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact p-value with ties"
msgstr "kann bei Bindungen keinen exakten p-Wert Berechnen"

#. R/wilcox.test.R: warning("cannot compute exact p-value with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact p-value with zeroes"
msgstr "kann den exakten p-Wert bei Nullen nicht berechnen"

#. R/chisq.test.R: warning("cannot compute simulated p-value with zero marginals")
#: R/chisq.test.R:0
msgid "cannot compute simulated p-value with zero marginals"
msgstr "kann keinen simulierten p-Wert mit 0 Rändern berechnen"

#. R/models.R: stop("cannot create a formula from a zero-column data frame")
#: R/models.R:0
msgid "cannot create a formula from a zero-column data frame"
msgstr "kann aus einem Dataframe ohne Spalten keine Formel generieren"

#. R/family.R: stop("cannot find valid starting values: please specify some")
#. R/glm.R: stop("cannot find valid starting values: please specify some",     call. = FALSE)
#: R/family.R:0 R/glm.R:0
msgid "cannot find valid starting values: please specify some"
msgstr "kann keine Startwerte finden; bitte welche angeben"

#. R/zzModels.R: stop("cannot fit an asymptotic regression model to these data")
#: R/zzModels.R:0
msgid "cannot fit an asymptotic regression model to these data"
msgstr "kann an diese Daten kein asymptotisches Regressionsmodell anpassen"

#. R/HoltWinters.R: stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
#: R/HoltWinters.R:0
msgid "cannot fit models without level ('alpha' must not be 0 or FALSE)"
msgstr "kann kein Modell ohne Level anpassen ('alpha' darf nicht 0 oder FALSE sein)."

#. R/cor.R: stop("cannot handle 'pairwise.complete.obs'")
#: R/cor.R:0
msgid "cannot handle 'pairwise.complete.obs'"
msgstr "kann 'pairwise.complete.obs' nicht behandeln"

#. R/ts.R: stop("cannot plot more than 10 series as \"multiple\"")
#: R/ts.R:0
msgid "cannot plot more than 10 series as \"multiple\""
msgstr "kann nicht mehr als 10 Reihen als \"multiple\" plotten"

#. R/nls-profile.R: stop("cannot recognize parameter name")
#: R/nls-profile.R:0
msgid "cannot recognize parameter name"
msgstr "kann Parameternamen nicht erkennen"

#. R/prcomp.R: stop("cannot rescale a constant/zero column to unit variance")
#: R/prcomp.R:0
msgid "cannot rescale a constant/zero column to unit variance"
msgstr "kann eine konstante bzw. Null-Spalte nicht auf Varianz 1 skalieren"

#. R/family.R: stop("cannot simulate from non-integer prior.weights")
#: R/family.R:0
msgid "cannot simulate from non-integer prior.weights"
msgstr "kann keine Simulationen mit nicht ganzzahligen prior.weights durchführen"

#. R/princomp.R: stop("cannot use 'cor = TRUE' with a constant variable")
#: R/princomp.R:0
msgid "cannot use 'cor = TRUE' with a constant variable"
msgstr "kann 'cor=TRUE' mit einer konstanten Variablen nicht nutzen"

#. R/t.test.R: stop("cannot use 'paired' in formula method")
#. R/wilcox.test.R: stop("cannot use 'paired' in formula method")
#: R/t.test.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "cannot use 'paired' in formula method"
msgstr "kann mit den gegebenen Daten '...' in der Formel nicht nutzen"

#. R/ftable.R: stop("cannot use dots in formula with given data")
#: R/ftable.R:0
msgid "cannot use dots in formula with given data"
msgstr "kann mit den gegebenen Daten '...' in der Formel nicht nutzen"

#. R/smspline.R: stop("cannot use more inner knots than unique 'x' values")
#: R/smspline.R:0
msgid "cannot use more inner knots than unique 'x' values"
msgstr "Kann nicht mehr innere Knoten brauchen als es verschiedene 'x' Werte gibt"

#. R/kernel.R: stop("coefficients do not add to 1")
#: R/kernel.R:0
msgid "coefficients do not add to 1"
msgstr "Koeffizienten addieren sich nicht zu 1"

#. R/approx.R: warning("collapsing to unique 'x' values")
#: R/approx.R:0
msgid "collapsing to unique 'x' values"
msgstr "Reduktion auf einmalige 'x' Werte"

#. R/dendrogram.R: stop("column dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "column dendrogram ordering gave index of wrong length"
msgstr "spaltenweises Dendrogrammordnen ergab Index falscher Länge"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast (sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast (sum to zero)"
msgstr "Spalten eines 'contrast.obj' muss einen Kontrast definieren (Summe = 0)"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast(sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast(sum to zero)"
msgstr "Spalten von 'contrast.obj' müssen einen Kontrast definieren (Summe = 0)"

#. R/ks.test.R: warning("computation of exact probability failed, returning Monte Carlo approximation")
#: R/ks.test.R:0
msgid "computation of exact probability failed, returning Monte Carlo approximation"
msgstr ""

#. R/contrast.R: stop("contrasts apply only to factors")
#. R/contrast.R: stop("contrasts apply only to factors")
#: R/contrast.R:0
msgid "contrasts apply only to factors"
msgstr "Kontraste arbeiten nur auf Faktoren"

#. R/contrast.R: stop("contrasts can be applied only to factors with 2 or more levels")
#: R/contrast.R:0
msgid "contrasts can be applied only to factors with 2 or more levels"
msgstr "Kontraste können nur auf Faktoren mit 2 oder mehr Stufen angewendet werden"

#. R/models.R: gettextf("contrasts dropped from factor %s", nm)
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s"
msgstr "Kontraste arbeiten nur auf Faktoren"

#. R/models.R: gettextf("contrasts dropped from factor %s due to missing levels",     nm)
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s due to missing levels"
msgstr "Kontraste können nur auf Faktoren mit 2 oder mehr Stufen angewendet werden"

#. R/contr.poly.R: gettextf("contrasts not defined for %d degrees of freedom", n -     1)
#. R/contrast.R: gettextf("contrasts not defined for %d degrees of freedom", n -     1L)
#: R/contr.poly.R:0 R/contrast.R:0
msgid "contrasts not defined for %d degrees of freedom"
msgstr "Kontraste für %d Freiheitsgrade nicht definiert"

#. R/nlm.R: stop("convergence problem in zero finding: ", conditionMessage(val))
#: R/nlm.R:0
msgid "convergence problem in zero finding:"
msgstr "Konvergenzproblem bei der Nullstellensuche:"

#. R/arma0.R: warning("converting non-invertible initial MA values")
#: R/arma0.R:0
msgid "converting non-invertible initial MA values"
msgstr "konvertiere nicht-invertierbare initiale MA Werte"

#. R/princomp.R: stop("covariance matrix is not non-negative definite")
#: R/princomp.R:0
msgid "covariance matrix is not non-negative definite"
msgstr "Kovarianzmatrix ist nicht nicht-negativ definit"

#. R/spectrum.R: stop("coverage probability out of range [0,1)")
#: R/spectrum.R:0
msgid "coverage probability out of range [0,1)"
msgstr "Überdeckungswahrscheinlichkeit liegt nicht in [0, 1)"

#. R/smspline.R: warning("cross-validation with non-unique 'x' values seems doubtful")
#: R/smspline.R:0
msgid "cross-validation with non-unique 'x' values seems doubtful"
msgstr "Kreuzvaldierung mit nicht-eindeutigen 'x' Werten erscheint zweifelhaft"

#. R/t.test.R: stop("data are essentially constant")
#. R/t.test.R: stop("data are essentially constant")
#: R/t.test.R:0
msgid "data are essentially constant"
msgstr "Daten sind praktisch konstant"

#. R/HoltWinters.R: stop("data must be non-zero for multiplicative Holt-Winters")
#: R/HoltWinters.R:0
msgid "data must be non-zero for multiplicative Holt-Winters"
msgstr "Daten müssen für den multiplikativen Holt-Winters ungleich 0 sein"

#. R/dendrogram.R: gettextf("dendrogram entries must be 1,2,..,%d (in any order), to be coercible to \"hclust\"",     n)
#: R/dendrogram.R:0
msgid "dendrogram entries must be 1,2,..,%d (in any order), to be coercible to \"hclust\""
msgstr "Dendogrammeinträge müssen 1,2,..,%d (in beliebiger Reihenfolge) sein, damit sie in \"hclust\" umgewandelt werden können"

#. R/dendrogram.R: stop("dendrogram node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram node with non-positive #{branches}"
msgstr "Dendrogrammknoten mit nicht-positiver #{Verzweigungen}"

#. R/dendrogram.R: stop("dendrogram non-leaf node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram non-leaf node with non-positive #{branches}"
msgstr "Dendrogrammknoten ist kein Blatt, aber nicht-positive #{Verzweigungen}"

#. R/model.tables.R: stop("design is unbalanced so cannot proceed")
#: R/model.tables.R:0
msgid "design is unbalanced so cannot proceed"
msgstr "Design ist unbalanciert, kann deshalb nicht fortfahren"

#. R/smspline.R: stop("df.offset must be numeric and >= 0")
#: R/smspline.R:0
#, fuzzy
msgid "df.offset must be numeric and >= 0"
msgstr "'offset' muss numerisch sein"

#. R/cor.R: warning("diag(V) had non-positive or NA entries; the non-finite result may be dubious")
#: R/cor.R:0
#, fuzzy
msgid "diag(V) had non-positive or NA entries; the non-finite result may be dubious"
msgstr "Einträge 0 oder NA in diag(.): nicht-endliches Ergebniss zweifelhaft"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "f() values at end points not of opposite sign"
#: R/nlm.R:0
msgid "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0"
msgstr "kein Erfolg beim Erweitern der Intervallendpunkte für f(lower) * f(upper) <= 0"

#. R/cancor.R: stop("dimension 0 in 'x' or 'y'")
#: R/cancor.R:0
msgid "dimension 0 in 'x' or 'y'"
msgstr "Dimension 0 in 'x' oder 'y'"

#. R/cmdscale.R: stop("distances must be result of 'dist' or a square matrix")
#: R/cmdscale.R:0
msgid "distances must be result of 'dist' or a square matrix"
msgstr "Distanzen müssen Ergebnisse von 'dist' oder eine quadratische Matrix sein"

#. R/mantelhaen.test.R: stop("each dimension in table must be >= 2")
#: R/mantelhaen.test.R:0
msgid "each dimension in table must be >= 2"
msgstr "jede Dimension in der Tabelle muss >= 2 sein"

#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.list))
#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.obj))
#: R/aov.R:0
msgid "each element of '%s' must be logical"
msgstr "jedes Element von '%s' muss boolesch sein"

#. R/model.tables.R: stop("eff.aovlist: non-orthogonal contrasts would give an incorrect answer")
#: R/model.tables.R:0
msgid "eff.aovlist: non-orthogonal contrasts would give an incorrect answer"
msgstr "eff.aovlist: nicht-orthogonale Kontraste würde eine falsche Antwort geben"

#. R/cmdscale.R: warning("eig=TRUE is disregarded when list.=FALSE")
#: R/cmdscale.R:0
msgid "eig=TRUE is disregarded when list.=FALSE"
msgstr "eig=TRUE wird verworfen, wenn list.=FALSE"

#. R/cutree.R: stop("either 'k' or 'h' must be specified")
#: R/cutree.R:0
msgid "either 'k' or 'h' must be specified"
msgstr "entweder 'k' oder 'h' muss angegeben werden"

#. R/cutree.R: gettextf("elements of 'k' must be between 1 and %d", n)
#: R/cutree.R:0
msgid "elements of 'k' must be between 1 and %d"
msgstr "Elemente von 'k' müssen zwischen 1 und %d sein"

#. R/prop.test.R: stop("elements of 'n' must be positive")
#: R/prop.test.R:0
msgid "elements of 'n' must be positive"
msgstr "Elemente von 'n' müsse positiv sein"

#. R/prop.test.R: stop("elements of 'p' must be in (0,1)")
#: R/prop.test.R:0
msgid "elements of 'p' must be in (0,1)"
msgstr "Elemente von 'p' müssen in (0, 1) liegen"

#. R/prop.test.R: stop("elements of 'x' must be nonnegative")
#: R/prop.test.R:0
msgid "elements of 'x' must be nonnegative"
msgstr "Elemente von 'x' müssen nicht-negativ sein"

#. R/prop.test.R: stop("elements of 'x' must not be greater than those of 'n'")
#: R/prop.test.R:0
msgid "elements of 'x' must not be greater than those of 'n'"
msgstr "Elemente von 'x' dürfen nicht größer sein als die in 'n'"

#. R/kmeans.R: stop("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers",     call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers",     call. = FALSE)
#: R/kmeans.R:0
msgid "empty cluster: try a better set of initial centers"
msgstr "leerer Cluster: versuche bessere Startmittelpunkte"

#. R/ARMAtheory.R: stop("empty model supplied")
#: R/ARMAtheory.R:0
msgid "empty model supplied"
msgstr "leeres Modell angegeben"

#. R/lm.R: warning("essentially perfect fit: summary may be unreliable")
#: R/lm.R:0
msgid "essentially perfect fit: summary may be unreliable"
msgstr "im Wesentlichen ein perfekter Fit: summary kann unzuverlässig sein"

#. R/power.anova.test.R: stop("exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL")
#: R/power.anova.test.R:0
msgid "exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL"
msgstr "genau eine der Variablen 'groups', 'n', 'between.var', 'within.var', 'power' und 'sig.level' muss NULL sein"

#. R/power.R: stop("exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL")
#: R/power.R:0
msgid "exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL"
msgstr "genau ein Wert aus 'n', 'delta', 'sd', 'power', und 'sig.level' muss NULL sein"

#. R/power.R: stop("exactly one of 'n', 'p1', 'p2', 'power', and 'sig.level' must be NULL")
#: R/power.R:0
msgid "exactly one of 'n', 'p1', 'p2', 'power', and 'sig.level' must be NULL"
msgstr "genau eine der Variablen 'n', 'p1', 'p2', 'power', und 'sig.level' muss NULL sein"

#. R/ts.R: warning("extending time series when replacing values", call. = FALSE)
#: R/ts.R:0
msgid "extending time series when replacing values"
msgstr "erweitere Zeitreihe beim Ersetzen der Werte"

#. R/logLik.R: warning("extra arguments discarded")
#: R/logLik.R:0
msgid "extra arguments discarded"
msgstr "zusätzliche Argumente verworfen"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "f() values at end points not of opposite sign"
#: R/nlm.R:0
msgid "f() values at end points not of opposite sign"
msgstr "Werte von f() an den Endpunkten haben gleiches Vorzeichen"

#. R/nlm.R: stop("f.lower = f(lower) is NA")
#: R/nlm.R:0
msgid "f.lower = f(lower) is NA"
msgstr "f.lower = f(lower) ist NA"

#. R/nlm.R: stop("f.upper = f(upper) is NA")
#: R/nlm.R:0
msgid "f.upper = f(upper) is NA"
msgstr "f.upper = f(upper) ist NA"

#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#: R/factanal.R:0
msgid "factor analysis applies only to numerical variables"
msgstr "Faktorenanalyse arbeitet nur auf numerischen Variablen"

#. R/factanal.R: stop("factor analysis requires at least three variables")
#: R/factanal.R:0
msgid "factor analysis requires at least three variables"
msgstr "Faktorenanalyse benötigt zumindest drei Variablen"

#. R/reshape.R: stop("failed to guess time-varying variables from their names")
#: R/reshape.R:0
msgid "failed to guess time-varying variables from their names"
msgstr "konnte die zeit-veränderlichen Variablen nicht aus den Namen erraten"

#. R/lm.R: gettextf("family '%s' not implemented", fam)
#: R/lm.R:0
msgid "family '%s' not implemented"
msgstr "Familie '%s' nicht implementiert"

#. R/loess.R: stop("first argument must be a \"loess\" object")
#: R/loess.R:0
msgid "first argument must be a \"loess\" object"
msgstr "erstes Argument muss ein \"loess\" Objekt sein"

#. R/glm.R: warning("fitting to calculate the null deviance did not converge -- increase 'maxit'?")
#: R/glm.R:0
msgid "fitting to calculate the null deviance did not converge -- increase 'maxit'?"
msgstr "Anpassung um die Null-Abweichung zu berechnen hat nicht konvergiert -- 'maxit' erhöhen?"

#. R/family.R: gettextf("for the '%s' family, y must be a vector of 0 and 1's\nor a 2 column matrix where col 1 is no. successes and col 2 is no. failures",     FAMILY)
#: R/family.R:0
msgid ""
"for the '%s' family, y must be a vector of 0 and 1's\n"
"or a 2 column matrix where col 1 is no. successes and col 2 is no. failures"
msgstr ""
"für die '%s'-Familie muss y entweder ein Vektor aus Nullen und\n"
"Einsen oder eine zweispaltige Matrix mit Erfolgen in der ersten und Misserfolgen in der zweiten Spalte sein"

#. R/nlsFunc.R: gettextf("formula '%s' must be of the form '~expr'", deparse1(object))
#: R/nlsFunc.R:0
msgid "formula '%s' must be of the form '~expr'"
msgstr "Formel '%s' muss von der Form '~expr' sein"

#. R/aggregate.R: stop("formula 'x' must have both left and right hand sides")
#: R/aggregate.R:0
#, fuzzy
msgid "formula 'x' must have both left and right hand sides"
msgstr "'formula' benötigt sowohl eine linke als auch eine rechte Seite"

#. R/friedman.test.R: stop("formula missing")
#: R/friedman.test.R:0
msgid "formula missing"
msgstr "Formel fehlt"

#. R/StructTS.R: stop("frequency must be a positive integer >= 2 for BSM")
#: R/StructTS.R:0
msgid "frequency must be a positive integer >= 2 for BSM"
msgstr "Frequenz muss für BSM eine positive, ganze Zahl >= 2 sein"

#. R/glm.R: warning("glm.fit: algorithm did not converge", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm did not converge"
msgstr "glm.fit: Algorithmus konvergierte nicht"

#. R/glm.R: warning("glm.fit: algorithm stopped at boundary value", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm stopped at boundary value"
msgstr "glm.fit: Algortihmus stoppte am Rand"

#. R/glm.R: warning("glm.fit: fitted probabilities numerically 0 or 1 occurred",     call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted probabilities numerically 0 or 1 occurred"
msgstr "glm.fit: Angepasste Wahrscheinlichkeiten mit numerischem Wert 0 oder 1 aufgetreten"

#. R/glm.R: warning("glm.fit: fitted rates numerically 0 occurred", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted rates numerically 0 occurred"
msgstr "glm.fit: angepasste Raten, die numerisch 0 sind, aufgetreten"

#. R/ansari.test.R: stop("grouping factor must have exactly 2 levels")
#. R/ks.test.R: stop("grouping factor must have exactly 2 levels")
#. R/mood.test.R: stop("grouping factor must have exactly 2 levels")
#. R/t.test.R: stop("grouping factor must have exactly 2 levels")
#. R/var.test.R: stop("grouping factor must have exactly 2 levels")
#. R/wilcox.test.R: stop("grouping factor must have exactly 2 levels")
#: R/ansari.test.R:0 R/ks.test.R:0 R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "grouping factor must have exactly 2 levels"
msgstr "Gruppierender Faktor muss genau zwei Stufen haben"

#. R/plot.lm.R: gettextf("hat values (leverages) are all = %s\n and there are no factor predictors; no plot no. 5",     format(mean(r.hat)))
#: R/plot.lm.R:0
msgid ""
"hat values (leverages) are all = %s\n"
" and there are no factor predictors; no plot no. 5"
msgstr ""
"Schätzwerte sind alle = %s\n"
"und es gibt keine faktoriellen Prädiktoren; keinen Plot Nr. 5"

#. R/fisher.test.R: stop("if 'x' is not a matrix, 'y' must be given")
#. R/mcnemar.test.R: stop("if 'x' is not a matrix, 'y' must be given")
#: R/fisher.test.R:0 R/mcnemar.test.R:0
msgid "if 'x' is not a matrix, 'y' must be given"
msgstr "Wenn 'x' keine Matrix ist, muss 'y' angegeben werden"

#. R/mantelhaen.test.R: stop("if 'x' is not an array, 'y' must be given")
#: R/mantelhaen.test.R:0
msgid "if 'x' is not an array, 'y' must be given"
msgstr "wenn 'x' kein Array ist, muss 'y' angegeben werden"

#. R/mantelhaen.test.R: stop("if 'x' is not an array, 'z' must be given")
#: R/mantelhaen.test.R:0
msgid "if 'x' is not an array, 'z' must be given"
msgstr "wenn 'x' kein Array ist, muss 'z' angegeben werden"

#. R/arima.R: stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
#, fuzzy
msgid "if not a list, 'seasonal' must be a non-negative numeric vector of length 3"
msgstr "'seasonal$order' muss ein nicht-negativer numerischer Vektor der Länge 3 sein"

#. R/family.R: warning("ignoring prior weights")
#: R/family.R:0
msgid "ignoring prior weights"
msgstr "ignoriere vorherige Gewichte"

#. R/lm.R: stop("incompatible dimensions")
#. R/lm.R: stop("incompatible dimensions")
#: R/lm.R:0
msgid "incompatible dimensions"
msgstr "inkompatible Dimensionen"

#. R/ts.R: stop("inconsistent specification of 'ar' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ar' order"
msgstr "inkonsistente Spezifikation der 'ar' Ordnung"

#. R/ts.R: stop("inconsistent specification of 'ma' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ma' order"
msgstr "inkonsistente Spezifikation der 'ma' Ordnung"

#. R/diffinv.R: stop("incorrect dimensions for 'xi'")
#: R/diffinv.R:0
msgid "incorrect dimensions for 'xi'"
msgstr "falsche Dimensionen für 'xi'"

#. R/binom.test.R: stop("incorrect length of 'x'")
#: R/binom.test.R:0
msgid "incorrect length of 'x'"
msgstr "unzulässige Länge von 'x'"

#. R/ftable.R: stop("incorrect specification for 'col.vars'")
#. R/ftable.R: stop("incorrect specification for 'col.vars'")
#: R/ftable.R:0
msgid "incorrect specification for 'col.vars'"
msgstr "falsche Spezifikation für 'col.vars'"

#. R/friedman.test.R: stop("incorrect specification for 'formula'")
#. R/quade.test.R: stop("incorrect specification for 'formula'")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "incorrect specification for 'formula'"
msgstr "falsche Spezifikation für 'formula'"

#. R/ftable.R: stop("incorrect specification for 'row.vars'")
#. R/ftable.R: stop("incorrect specification for 'row.vars'")
#: R/ftable.R:0
msgid "incorrect specification for 'row.vars'"
msgstr "falsche Spezifikation für 'row.vars'"

#. R/ftable.R: stop("incorrect variable names in lhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in lhs of formula"
msgstr "falsche Variablennamen auf der linken Seite der Formel"

#. R/ftable.R: stop("incorrect variable names in rhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in rhs of formula"
msgstr "falsche Variablennamen auf der rechten Seite der Formel"

#. R/bandwidths.R: gettextf("increasing bw.SJ() search interval (%d) to [%.4g,%.4g]",     itry, lower, upper)
#: R/bandwidths.R:0
msgid "increasing bw.SJ() search interval (%d) to [%.4g,%.4g]"
msgstr "vergrößere bw.SJ() Suchintervall (%d) auf [%.4g,%.4g]"

#. R/kmeans.R: stop("initial centers are not distinct")
#: R/kmeans.R:0
msgid "initial centers are not distinct"
msgstr "Startzentren sind nicht verschieden"

#. R/constrOptim.R: stop("initial value is not in the interior of the feasible region")
#: R/constrOptim.R:0
msgid "initial value is not in the interior of the feasible region"
msgstr "Startwert nicht im Inneren der zulässigen Region"

#. R/glm.R: stop("inner loop 1; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 1; cannot correct step size"
msgstr "innere Schleife 1; kann Schrittweite nicht korrigieren"

#. R/glm.R: stop("inner loop 2; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 2; cannot correct step size"
msgstr "innere Schleife 2; kann Schrittweite nicht korrigieren"

#. R/ftable.R: stop("interactions are not allowed")
#. R/xtabs.R: stop("interactions are not allowed")
#: R/ftable.R:0 R/xtabs.R:0
msgid "interactions are not allowed"
msgstr "Wechselwirkungen sind nicht erlaubt"

#. R/nls.R: stop("invalid  'attr(rhs, \"gradient\")'")
#: R/nls.R:0
msgid "invalid  'attr(rhs, \"gradient\")'"
msgstr "unzulässiges 'attr(rhs, \"gradient\")'"

#. R/arima.R: stop("invalid 'SSinit'")
#: R/arima.R:0
msgid "invalid 'SSinit'"
msgstr "unzulässiges 'SSinit'"

#. R/symnum.R: stop("invalid 'abbr.colnames'")
#: R/symnum.R:0
msgid "invalid 'abbr.colnames'"
msgstr "unzulässige 'abbr.colnames'"

#. R/loess.R: stop("invalid 'control' argument")
#: R/loess.R:0
msgid "invalid 'control' argument"
msgstr "unzulässiges 'control' Argument"

#. R/smspline.R: stop("invalid 'control.spar'")
#: R/smspline.R:0
msgid "invalid 'control.spar'"
msgstr "unzulässiges 'control.spar'"

#. R/models.R: stop("invalid 'data' argument")
#: R/models.R:0
msgid "invalid 'data' argument"
msgstr "unzulässiges 'data' Argument"

#. R/smooth.R: stop("invalid 'endrule' argument")
#: R/smooth.R:0
msgid "invalid 'endrule' argument"
msgstr "unzulässiges 'endrule' Argument"

#. R/nlm.R: stop("invalid 'extendInt'; please report")
#: R/nlm.R:0
msgid "invalid 'extendInt'; please report"
msgstr "unzulässiges 'extendInt'; bitte melden!"

#. R/smspline.R: stop("invalid 'keep.stuff'")
#: R/smspline.R:0
msgid "invalid 'keep.stuff'"
msgstr "unzulässiges 'keep.stuff'"

#. R/lm.R: stop("invalid 'lm' object:  no 'terms' component")
#: R/lm.R:0
msgid "invalid 'lm' object:  no 'terms' component"
msgstr "unzulässiges 'lm' Objekt: keine 'terms' Komponente"

#. R/glm.R: stop("invalid 'method' argument")
#: R/glm.R:0
msgid "invalid 'method' argument"
msgstr "unzulässiges 'method' Argument"

#. R/bandwidths.R: stop("invalid 'nb'")
#. R/bandwidths.R: stop("invalid 'nb'")
#. R/bandwidths.R: stop("invalid 'nb'")
#: R/bandwidths.R:0
msgid "invalid 'nb'"
msgstr "unzulässiges 'nb'"

#. R/cutree.R: stop("invalid 'tree' ('merge' component)")
#: R/cutree.R:0
msgid "invalid 'tree' ('merge' component)"
msgstr "unzulässiger 'tree' ('merge' Komponente)"

#. R/cor.R: stop("invalid 'use' argument")
#. R/cor.R: stop("invalid 'use' argument")
#. R/cor.R: stop("invalid 'use' argument")
#: R/cor.R:0
msgid "invalid 'use' argument"
msgstr "unzulässiges 'use' Argument"

#. R/bandwidths.R: stop("invalid 'x'")
#. R/bandwidths.R: stop("invalid 'x'")
#. R/bandwidths.R: stop("invalid 'x'")
#. R/chisq.test.R: stop("invalid 'x'")
#. R/loess.R: stop("invalid 'x'")
#: R/bandwidths.R:0 R/chisq.test.R:0 R/loess.R:0
msgid "invalid 'x'"
msgstr "unzulässiges 'x'"

#. R/loess.R: stop("invalid 'y'")
#: R/loess.R:0
msgid "invalid 'y'"
msgstr "unzulässiges 'y'"

#. R/dendrogram.R: stop("invalid (length 0) node in dendrogram")
#: R/dendrogram.R:0
msgid "invalid (length 0) node in dendrogram"
msgstr "unzulässiger Knoten in Dendrogramm (Länge 0)"

#. R/loess.R: stop("invalid NCOL(X)")
#: R/loess.R:0
msgid "invalid NCOL(X)"
msgstr "unzulässiges NCOL(X)"

#. R/loess.R: stop("invalid NROW(X)")
#: R/loess.R:0
msgid "invalid NROW(X)"
msgstr "unzulässiges NROW(X)"

#. R/r2dtable.R: stop("invalid argument 'c'")
#: R/r2dtable.R:0
msgid "invalid argument 'c'"
msgstr "unzulässiges Argument 'c'"

#. R/loess.R: stop("invalid argument 'cell'")
#: R/loess.R:0
msgid "invalid argument 'cell'"
msgstr "unzulässiges Argument 'cell'"

#. R/loess.R: stop("invalid argument 'degree'")
#: R/loess.R:0
msgid "invalid argument 'degree'"
msgstr "unzulässiges Argument 'degree'"

#. R/family.R: stop("invalid argument 'lambda'")
#: R/family.R:0
msgid "invalid argument 'lambda'"
msgstr "unzulässiges Argument 'lambda'"

#. R/r2dtable.R: stop("invalid argument 'n'")
#: R/r2dtable.R:0
msgid "invalid argument 'n'"
msgstr "unzulässiges Argument 'n'"

#. R/nafns.R: stop("invalid argument 'omit'")
#: R/nafns.R:0
msgid "invalid argument 'omit'"
msgstr "unzulässiges Argument 'omit'"

#. R/r2dtable.R: stop("invalid argument 'r'")
#: R/r2dtable.R:0
msgid "invalid argument 'r'"
msgstr "unzulässiges Argument 'r'"

#. R/loess.R: stop("invalid argument 'span'")
#: R/loess.R:0
msgid "invalid argument 'span'"
msgstr "unzulässiges Argument 'span'"

#. R/nls-profile.R: stop("invalid argument to 'getProfile'")
#: R/nls-profile.R:0
msgid "invalid argument to 'getProfile'"
msgstr "unzulässiges Argument für 'getProfile'"

#. R/ks.test.R: stop("invalid arguments")
#: R/ks.test.R:0
#, fuzzy
msgid "invalid arguments"
msgstr "unzulässiges Argument 'n'"

#. R/hclust.R: stop("invalid clustering method", paste("", method))
#: R/hclust.R:0
msgid "invalid clustering method"
msgstr "unzulässige Clustring-Methode"

#. R/hclust.R: stop("invalid dissimilarities")
#: R/hclust.R:0
msgid "invalid dissimilarities"
msgstr "unzulässige Unähnlichkeiten"

#. R/dist.R: stop("invalid distance method")
#: R/dist.R:0
msgid "invalid distance method"
msgstr "unzulässige Distanzmethode"

#. R/glm.R: stop("invalid fitted means in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid fitted means in empty model"
msgstr "unzulässige gefittete Mittelwerte in leerem Modell"

#. R/cor.test.R: stop("invalid formula")
#. R/models.R: stop("invalid formula")
#: R/cor.test.R:0 R/models.R:0
msgid "invalid formula"
msgstr "unzulässige Formel"

#. R/models.R: gettextf("invalid formula %s", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s"
msgstr "unzulässige Formel %s"

#. R/models.R: gettextf("invalid formula %s: assignment is deprecated", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s: assignment is deprecated"
msgstr "unzulässige Formel %s: Zuweisung ist veraltet"

#. R/models.R: gettextf("invalid formula %s: extraneous call to `%s` is deprecated",     deparse2(x), as.character(c.))
#: R/models.R:0
msgid "invalid formula %s: extraneous call to `%s` is deprecated"
msgstr "unzulässige Formel %s: Zusätzlicher Aufruf von `%s` ist veraltet"

#. R/models.R: gettextf("invalid formula %s: not a call", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s: not a call"
msgstr "unzulässige Formel %s: ist kein Aufruf"

#. R/deriv.R: stop("invalid formula in deriv")
#. R/deriv.R: stop("invalid formula in deriv")
#: R/deriv.R:0
msgid "invalid formula in deriv"
msgstr "unzulässige Formel in deriv"

#. R/models.R: gettextf("invalid formula: %s", deparse2(x))
#: R/models.R:0
msgid "invalid formula: %s"
msgstr "unzulässige Formel: %s"

#. R/approx.R: stop("invalid interpolation method")
#. R/approx.R: stop("invalid interpolation method")
#. R/spline.R: stop("invalid interpolation method")
#: R/approx.R:0 R/spline.R:0
msgid "invalid interpolation method"
msgstr "unzulässige Interpolationsmethode"

#. R/hclust.R: stop("invalid length of members")
#: R/hclust.R:0
msgid "invalid length of members"
msgstr "unzulässige Anzahl von Teilnehmern"

#. R/HoltWinters.R: stop("invalid length(x)")
#. R/approx.R: stop("invalid length(x)")
#. R/approx.R: stop("invalid length(x)")
#. R/bandwidths.R: stop("invalid length(x)")
#. R/bandwidths.R: stop("invalid length(x)")
#. R/bandwidths.R: stop("invalid length(x)")
#. R/stl.R: stop("invalid length(x)")
#: R/HoltWinters.R:0 R/approx.R:0 R/bandwidths.R:0 R/stl.R:0
msgid "invalid length(x)"
msgstr "unzulässige length(x)"

#. R/glm.R: stop("invalid linear predictor values in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid linear predictor values in empty model"
msgstr "unzulässige Werte des linearen Prediktors in leerem Modell"

#. R/lm.influence.R: stop("invalid model QR matrix")
#: R/lm.influence.R:0
msgid "invalid model QR matrix"
msgstr "ungültige Modell QR Matrix"

#. R/kmeans.R: stop("invalid ncol(x)")
#: R/kmeans.R:0
msgid "invalid ncol(x)"
msgstr "unzulässige ncol(x)"

#. R/kmeans.R: stop("invalid nrow(x)")
#: R/kmeans.R:0
msgid "invalid nrow(x)"
msgstr "unzulässige nrow(x)"

#. R/smspline.R: stop("invalid number of points")
#: R/smspline.R:0
msgid "invalid number of points"
msgstr "unzulässige Anzahl von Punkten"

#. R/integrate.R: stop("invalid parameter values")
#: R/integrate.R:0
msgid "invalid parameter values"
msgstr "unzulässige Parameterwerte"

#. R/models.R: stop("invalid response type")
#: R/models.R:0
msgid "invalid response type"
msgstr "unzulässiger Zielgrößentyp"

#. R/cmdscale.R: gettextf("invalid value of %s", "'n'")
#. R/density.R: gettextf("invalid value of %s", "length(x)")
#. R/diffinv.R: gettextf("invalid value of %s", "length(x)")
#. R/filter.R: gettextf("invalid value of %s", "NROW(x)")
#. R/filter.R: gettextf("invalid value of %s", "length(filter)")
#. R/kmeans.R: gettextf("invalid value of %s", "'k'")
#. R/runmed.R: gettextf("invalid value of %s", "length(x)")
#. R/runmed.R: gettextf("invalid value of %s", "'k'")
#. R/spline.R: gettextf("invalid value of %s", "length(x)")
#. R/splinefun.R: gettextf("invalid value of %s", "length(x)")
#: R/cmdscale.R:0 R/density.R:0 R/diffinv.R:0 R/filter.R:0 R/kmeans.R:0
#: R/runmed.R:0 R/spline.R:0 R/splinefun.R:0
msgid "invalid value of %s"
msgstr "unzulässige Wert für %s"

#. R/loess.R: gettext("iterTrace = %d is not obeyed since iterations = %d")
#: R/loess.R:0
msgid "iterTrace = %d is not obeyed since iterations = %d"
msgstr "iterTrace = %d nicht befolgt, da iterations = %d"

#. R/identify.hclust.R: gettextf("k must be between 2 and %d", length(tree$height))
#: R/identify.hclust.R:0
msgid "k must be between 2 and %d"
msgstr "k muss zwischen 2 und %d liegen"

#. R/fft.R: stop("length mismatch in convolution")
#: R/fft.R:0
msgid "length mismatch in convolution"
msgstr "Längen in Faltung passen nicht"

#. R/cov.wt.R: stop("length of 'center' must equal the number of columns in 'x'")
#: R/cov.wt.R:0
msgid "length of 'center' must equal the number of columns in 'x'"
msgstr "Länge von 'center' muss der Spaltenzahl von 'x' entsprechen"

#. R/filter.R: stop("length of 'init' must equal length of 'filter'")
#: R/filter.R:0
msgid "length of 'init' must equal length of 'filter'"
msgstr "Länge von 'init' muss der Länge von 'filter' entsprechen"

#. R/spectrum.R: stop("length of 'p' must be 1 or equal the number of columns of 'x'")
#: R/spectrum.R:0
msgid "length of 'p' must be 1 or equal the number of columns of 'x'"
msgstr "Länge von 'p' muss entweder 1 oder die Anzahl der Spalten von 'x' sein"

#. R/glm.R: gettextf("length of 'start' should equal %d and correspond to initial coefs for %s",     nvars, paste(deparse(xnames), collapse = ", "))
#: R/glm.R:0
msgid "length of 'start' should equal %d and correspond to initial coefs for %s"
msgstr "Länge von 'start' sollte %d sein und mit den initialen Koeffizienten für %s korrespondieren"

#. R/reshape.R: stop("length of 'v.names' does not evenly divide length of 'varying'")
#: R/reshape.R:0
msgid "length of 'v.names' does not evenly divide length of 'varying'"
msgstr "Länge von 'v.names' teilt nicht die Länge von 'varying'"

#. R/reshape.R: stop("length of 'varying' must be the product of length of 'v.names' and length of 'times'")
#: R/reshape.R:0
msgid "length of 'varying' must be the product of length of 'v.names' and length of 'times'"
msgstr "Länge von 'varying' muss Produkt der Längen von 'v.names' und 'times' sein"

#. R/cov.wt.R: stop("length of 'wt' must equal the number of rows in 'x'")
#: R/cov.wt.R:0
msgid "length of 'wt' must equal the number of rows in 'x'"
msgstr "Länge von 'wt' muss der Zeilenzahl in 'x' entsprechen"

#. R/addmargins.R: gettextf("length of FUN, %d,\n does not match the length of the margins, %d",     length(FUN), n.sid)
#: R/addmargins.R:0
msgid ""
"length of FUN, %d,\n"
" does not match the length of the margins, %d"
msgstr ""
"Länge von FUN, %d,\n"
" entspricht nicht der Länge der Ränder, %d"

#. R/biplot.R: stop("length of choices must be 2")
#. R/biplot.R: stop("length of choices must be 2")
#: R/biplot.R:0
msgid "length of choices must be 2"
msgstr "Länge der Auswahl muss 2 sein"

#. R/smspline.R: stop("lengths of 'x' and 'w' must match")
#: R/smspline.R:0
msgid "lengths of 'x' and 'w' must match"
msgstr "Längen von 'x' und 'w' müssen übereinstimmen"

#. R/arima.R: stop("lengths of 'x' and 'xreg' do not match")
#. R/arma0.R: stop("lengths of 'x' and 'xreg' do not match")
#: R/arima.R:0 R/arma0.R:0
msgid "lengths of 'x' and 'xreg' do not match"
msgstr "Längen von 'x' und 'xreg' stimmen nicht überein"

#. R/nls-profile.R: warning("levels truncated to positive values only")
#: R/nls-profile.R:0
msgid "levels truncated to positive values only"
msgstr "Stufen auf ausschließlich positive Werte reduziert"

#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#: R/family.R:0
msgid "link \"%s\" not available for %s family; available links are %s"
msgstr "Link \"%s\" für die %s-Familie nicht verfügbar: verfügbar sind %s"

#. R/lm.R: stop("lm object does not have a proper 'qr' component.\n Rank zero or should not have used lm(.., qr=FALSE).")
#: R/lm.R:0
msgid ""
"lm object does not have a proper 'qr' component.\n"
" Rank zero or should not have used lm(.., qr=FALSE)."
msgstr ""
"lm Objekt hat keine gültige 'qr' Komponente.\n"
"Rang Null oder nicht lm(.., qr=FALSE) nutzen."

#. R/nlminb.R: stop("logical 'hessian' argument not allowed.  See documentation.")
#: R/nlminb.R:0
msgid "logical 'hessian' argument not allowed.  See documentation."
msgstr "Boolesches 'hessian' Argument nicht erlaubt. Siehe Dokumentation."

#. R/nlm.R: stop("lower < upper  is not fulfilled")
#: R/nlm.R:0
msgid "lower < upper  is not fulfilled"
msgstr "lower < upper nicht erfüllt"

#. R/lm.R: message("lower-rank qr: determining non-estimable cases")
#: R/lm.R:0
msgid "lower-rank qr: determining non-estimable cases"
msgstr ""

#. R/glm.R: stop("maximum number of iterations must be > 0")
#: R/glm.R:0
msgid "maximum number of iterations must be > 0"
msgstr "maximale Zahl der Iterationen muss > 0 sein"

#. R/optim.R: stop("method = \"Brent\" is only available for one-dimensional optimization")
#: R/optim.R:0
msgid "method = \"Brent\" is only available for one-dimensional optimization"
msgstr "method = \"Brent\" ist nur für unidimensionale Optimierung verfügbar"

#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#: R/lm.R:0
msgid "method = '%s' is not supported. Using 'qr'"
msgstr "Methode = '%s' ist nicht unterstützt. Benutze 'qr'"

#. R/optim.R: warning("method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'")
#: R/optim.R:0
msgid "method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'"
msgstr "Methode L-BFGS-B benutzt 'factr' (and 'pgtol') anstelle von 'reltol' und 'abstol'"

#. R/dendrogram.R: warning("midcache() of non-binary dendrograms only partly implemented")
#: R/dendrogram.R:0
msgid "midcache() of non-binary dendrograms only partly implemented"
msgstr "midcache() von nicht-binären Dendrogrammen nur zum Teil implementiert"

#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#: R/bandwidths.R:0
msgid "minimum occurred at one end of the range"
msgstr "Minimum trat am Rand des Bereichs auf"

#. R/ppr.R: stop("mismatched 'x' and 'weights'")
#: R/ppr.R:0
#, fuzzy
msgid "mismatched 'x' and 'weights'"
msgstr "'x' und 'y' passen nicht"

#. R/ppr.R: stop("mismatched 'x' and 'y'")
#: R/ppr.R:0
msgid "mismatched 'x' and 'y'"
msgstr "'x' und 'y' passen nicht"

#. R/lsfit.R: warning("missing observations deleted")
#: R/lsfit.R:0
msgid "missing observations deleted"
msgstr "fehlende Beobachtungen gelöscht"

#. R/smspline.R: stop("missing or infinite values in inputs are not allowed")
#: R/smspline.R:0
msgid "missing or infinite values in inputs are not allowed"
msgstr "fehlende oder unendliche Werte sind als Eingaben nicht zugelassen"

#. R/lm.R: stop("missing or negative weights not allowed")
#. R/nls.R: stop("missing or negative weights not allowed")
#: R/lm.R:0 R/nls.R:0
msgid "missing or negative weights not allowed"
msgstr "fehlende oder negative Gewichte nicht erlaubt"

#. R/quantile.R: stop("missing values and NaN's not allowed if 'na.rm' is FALSE")
#: R/quantile.R:0
msgid "missing values and NaN's not allowed if 'na.rm' is FALSE"
msgstr "fehlende Werte und NaNs sind nicht erlaubt, wenn 'na.rm' = FALSE"

#. R/contr.poly.R: stop("missing values are not allowed in 'poly'")
#: R/contr.poly.R:0
msgid "missing values are not allowed in 'poly'"
msgstr "fehlende Werte in 'poly' nicht zugelassen"

#. R/filter.R: stop("missing values in 'filter'")
#: R/filter.R:0
msgid "missing values in 'filter'"
msgstr "fehlende Werte in 'filter'"

#. R/nafns.R: stop("missing values in object")
#: R/nafns.R:0
msgid "missing values in object"
msgstr "fehlende Werte im Objekt"

#. R/isoreg.R: stop("missing values not allowed")
#: R/isoreg.R:0
msgid "missing values not allowed"
msgstr "fehlende Werte nicht zugelassen"

#. R/models.R: stop("model frame and formula mismatch in model.matrix()")
#: R/models.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr "Modellframe und Formel passen in model.matrix() nicht zusammen"

#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#: R/AIC.R:0
msgid "models are not all fitted to the same number of observations"
msgstr "Modelle sind nicht alle mit der gleichen Datensatzgröße angepasst worden"

#. R/glm.R: stop("models were not all fitted to the same size of dataset")
#. R/lm.R: stop("models were not all fitted to the same size of dataset")
#. R/mlm.R: stop("models were not all fitted to the same size of dataset")
#: R/glm.R:0 R/lm.R:0 R/mlm.R:0
msgid "models were not all fitted to the same size of dataset"
msgstr "Modelle sind nicht alle mit der gleichen Datensatzgröße angepasst worden"

#. R/glm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/lm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/loess.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/mlm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/nls.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0 R/nls.R:0
msgid "models with response %s removed because response differs from model 1"
msgstr "Modelle mit Antwortvariable %s entfernt, da diese sich von Modell 1 unterscheidet"

#. R/kmeans.R: stop("more cluster centers than data points")
#: R/kmeans.R:0
msgid "more cluster centers than data points"
msgstr "mehr Clusterzentren als Datenpunkte"

#. R/kmeans.R: stop("more cluster centers than distinct data points.")
#: R/kmeans.R:0
msgid "more cluster centers than distinct data points."
msgstr "mehr Clusterzentren als verschiedene Datenpunkte"

#. R/dummy.coef.R: stop("multivariate case with missing coefficients is not yet implemented")
#. R/dummy.coef.R: stop("multivariate case with missing coefficients is not yet implemented")
#: R/dummy.coef.R:0
msgid "multivariate case with missing coefficients is not yet implemented"
msgstr "der multivariate Fall mit fehlenden Koeffizienten ist noch nicht implementiert"

#. R/symnum.R: stop("must have 2 'symbols' for logical 'x' argument")
#: R/symnum.R:0
msgid "must have 2 'symbols' for logical 'x' argument"
msgstr "benötige 2 'symbols' für boolesches 'x' Argument"

#. R/zzModels.R: stop("must have at least 4 observations to fit an 'SSfol' model")
#: R/zzModels.R:0
msgid "must have at least 4 observations to fit an 'SSfol' model"
msgstr "mindestens 4 Beobachtungen nötig, um ein 'SSfol' Modell anzupassen"

#. R/zzModels.R: stop("must have length of response = length of second argument to 'SSfol'")
#: R/zzModels.R:0
msgid "must have length of response = length of second argument to 'SSfol'"
msgstr "es muss Länge der Zielgröße = Länge des zweiten Argumentes für 'SSfol' gelten"

#. R/hclust.R: stop("must have n >= 2 objects to cluster")
#: R/hclust.R:0
msgid "must have n >= 2 objects to cluster"
msgstr "n >= 2 Objekte nötig, um zu clustern"

#. R/kmeans.R: stop("must have same number of columns in 'x' and 'centers'")
#: R/kmeans.R:0
msgid "must have same number of columns in 'x' and 'centers'"
msgstr "'x' und 'centers' müssen dieselbe Zahl von Spalten haben"

#. R/smspline.R: stop("must not specify both 'spar' and 'lambda'")
#: R/smspline.R:0
msgid "must not specify both 'spar' and 'lambda'"
msgstr "es dürfen nicht sowohl 'spar' als auch 'lambda' angegeben werden"

#. R/spectrum.R: stop("must specify 'spans' or a valid kernel")
#: R/spectrum.R:0
msgid "must specify 'spans' or a valid kernel"
msgstr "entweder 'spans' oder ein gültiger Kernel muss angegeben werden"

#. R/xtabs.R: stop("must supply 'formula' or 'data'")
#: R/xtabs.R:0
#, fuzzy
msgid "must supply 'formula' or 'data'"
msgstr "entweder 'formula' oder 'data' müssen angegeben werden"

#. R/contr.poly.R: stop("must supply one or more vectors")
#: R/contr.poly.R:0
msgid "must supply one or more vectors"
msgstr "einer oder mehrere Vektoren müssen angegeben werden"

#. R/model.tables.R: stop("na.action must be a function")
#: R/model.tables.R:0
msgid "na.action must be a function"
msgstr "na.action muss eine Funktion sein"

#. R/fisher.test.R: stop("names(hybridPars) should be NULL or be identical to the default's")
#: R/fisher.test.R:0
msgid "names(hybridPars) should be NULL or be identical to the default's"
msgstr "names(hybridPars) sollte NULL sein oder identisch zu denen des Standards"

#. R/fisher.test.R: stop("need 2 or more non-zero column marginals")
#: R/fisher.test.R:0
msgid "need 2 or more non-zero column marginals"
msgstr "benötige 2 oder mehr Spaltenränder"

#. R/fisher.test.R: stop("need 2 or more non-zero row marginals")
#: R/fisher.test.R:0
msgid "need 2 or more non-zero row marginals"
msgstr "benötige 2 oder mehr Zeilenränder"

#. R/family.R: stop("need CRAN package 'SuppDists' for simulation from the 'inverse.gaussian' family")
#: R/family.R:0
msgid "need CRAN package 'SuppDists' for simulation from the 'inverse.gaussian' family"
msgstr ""
"benötige CRAN Paket 'SuppDists' für die Simulation aus der Verteilungsfamilie\n"
"'inverse.gaussian'"

#. R/update.R: stop("need an object with call component")
#: R/update.R:0
msgid "need an object with call component"
msgstr "benötige ein Objekt mit einer call Komponente"

#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#: R/bandwidths.R:0
msgid "need at least 2 data points"
msgstr "benötige zumindest 2 Datenpunkte"

#. R/HoltWinters.R: stop("need at least 2 periods to compute seasonal start values")
#: R/HoltWinters.R:0
msgid "need at least 2 periods to compute seasonal start values"
msgstr "benötige zumindest 2 Perioden, um saisonale Startwerte zu berechnen"

#. R/density.R: stop("need at least 2 points to select a bandwidth automatically")
#: R/density.R:0
msgid "need at least 2 points to select a bandwidth automatically"
msgstr "benötige zumindest 2 Punkte, um die Bandbreite automatisch zu wählen"

#. R/smspline.R: stop("need at least four unique 'x' values")
#: R/smspline.R:0
msgid "need at least four unique 'x' values"
msgstr "benötige zumindest vier verschiedene 'x' Werte"

#. R/approx.R: stop("need at least two non-NA values to interpolate")
#. R/approx.R: stop("need at least two non-NA values to interpolate")
#: R/approx.R:0
msgid "need at least two non-NA values to interpolate"
msgstr "benötige mindestens zwei nicht-NA Werte zur Interpolation"

#. R/hclust.R: stop("need dendrograms where all leaves have labels")
#: R/hclust.R:0
msgid "need dendrograms where all leaves have labels"
msgstr "benötige Dendrogramme, in denen alle Blätter Label haben"

#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#: R/manova.R:0
msgid "need multiple responses"
msgstr "benötige multiple Antworten"

#. R/median.R: stop("need numeric data")
#: R/median.R:0
msgid "need numeric data"
msgstr "benötige numerische Daten"

#. R/smspline.R: stop("need result of smooth.spline(keep.data = TRUE)")
#. R/smspline.R: stop("need result of smooth.spline(keep.data = TRUE)")
#. R/smspline.R: stop("need result of smooth.spline(keep.data = TRUE)")
#: R/smspline.R:0
msgid "need result of smooth.spline(keep.data = TRUE)"
msgstr "benötige Ergebniss von smooth.spline(keep.data = TRUE)"

#. R/family.R: stop("negative values not allowed for the 'Poisson' family")
#: R/family.R:0
msgid "negative values not allowed for the 'Poisson' family"
msgstr "negative Werte für die 'Poisson'-Familie nicht zugelassen"

#. R/family.R: stop("negative values not allowed for the 'quasiPoisson' family")
#: R/family.R:0
msgid "negative values not allowed for the 'quasiPoisson' family"
msgstr "negative Werte sind für die 'quasiPoisson'-Familie nicht zulässig"

#. R/glm.R: stop("negative weights not allowed")
#. R/lsfit.R: stop("negative weights not allowed")
#: R/glm.R:0 R/lsfit.R:0
msgid "negative weights not allowed"
msgstr "negative Gewichte nicht erlaubt"

#. R/factanal.R: stop("neither 'x' nor 'covmat' supplied")
#: R/factanal.R:0
msgid "neither 'x' nor 'covmat' supplied"
msgstr "weder 'x' noch 'covmat' angegeben"

#. R/logLik.R: stop("no \"nobs\" attribute is available")
#: R/logLik.R:0
msgid "no \"nobs\" attribute is available"
msgstr "kein \"nobs\" Attribut verfügbar"

#. R/add.R: stop("no 'add1' method implemented for \"mlm\" models")
#: R/add.R:0
msgid "no 'add1' method implemented for \"mlm\" models"
msgstr "keine 'add1' Methode für \"mlm\" Modelle implementiert"

#. R/stepfun.R: stop("no 'as.stepfun' method available for 'x'")
#: R/stepfun.R:0
msgid "no 'as.stepfun' method available for 'x'"
msgstr "keine 'as.stepfun' Methode für 'x' verfügbar"

#. R/add.R: stop("no 'drop1' method for \"mlm\" models")
#: R/add.R:0
msgid "no 'drop1' method for \"mlm\" models"
msgstr "keine 'drop1' Methode für \"mlm\" Modelle"

#. R/selfStart.R: gettextf("no 'getInitial' method found for \"%s\" objects", data.class(object))
#: R/selfStart.R:0
msgid "no 'getInitial' method found for \"%s\" objects"
msgstr "keine 'getInitial' Methode für \"%s\" Objekte gefunden"

#. R/logLik.R: warning("no 'nobs' method is available")
#. R/logLik.R: stop("no 'nobs' method is available")
#: R/logLik.R:0
msgid "no 'nobs' method is available"
msgstr "keine 'nobs' Methode verfügbar"

#. R/reshape.R: stop("no 'reshapeWide' attribute, must specify 'varying'")
#: R/reshape.R:0
msgid "no 'reshapeWide' attribute, must specify 'varying'"
msgstr "kein 'reshapeWide' Attribut, 'varying' muss angegeben werden"

#. R/aov.R: stop("no degrees of freedom for residuals")
#: R/aov.R:0
msgid "no degrees of freedom for residuals"
msgstr "kein Freiheitsgrad für die Residuen"

#. R/TukeyHSD.R: stop("no factors in the fitted model")
#: R/TukeyHSD.R:0
msgid "no factors in the fitted model"
msgstr "keine Faktoren im angepassten Modell"

#. R/smspline.R: stop("no finite observations")
#: R/smspline.R:0
msgid "no finite observations"
msgstr "keine endlichen Beobachtungen"

#. R/loess.R: stop("no models to compare")
#: R/loess.R:0
msgid "no models to compare"
msgstr "keine Modelle zum Vergleich"

#. R/glm.R: gettextf("no observations informative at iteration %d", iter)
#: R/glm.R:0
msgid "no observations informative at iteration %d"
msgstr "keine informativen Beobachtungen bei Iteration %d"

#. R/nls.R: stop("no parameters to fit")
#: R/nls.R:0
msgid "no parameters to fit"
msgstr "keine Parameter für den Fit"

#. R/ts.R: stop("no replacement values supplied")
#: R/ts.R:0
msgid "no replacement values supplied"
msgstr "keine Ersatzwerte angegeben"

#. R/aggregate.R: stop("no rows to aggregate")
#: R/aggregate.R:0
msgid "no rows to aggregate"
msgstr "keine Zeile für die Aggregation"

#. R/prcomp.R: stop("no scores are available: refit with 'retx=TRUE'")
#: R/prcomp.R:0
msgid "no scores are available: refit with 'retx=TRUE'"
msgstr "keine Scores verfügbar: neu anpassen mit 'retx=TRUE'"

#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#: R/nlm.R:0
msgid "no sign change found in %d iterations"
msgstr "keine Vorzeichenwechsel nach %d Iterationen gefunden"

#. R/bandwidths.R: stop("no solution in the specified range of bandwidths")
#: R/bandwidths.R:0
msgid "no solution in the specified range of bandwidths"
msgstr "keine Lösung im angegebenen Bandbreitenbereich"

#. R/nls.R: stop("no starting values specified")
#: R/nls.R:0
msgid "no starting values specified"
msgstr "keine Startwerte angegeben"

#. R/factanal.R: stop("no starting values supplied")
#: R/factanal.R:0
msgid "no starting values supplied"
msgstr "keine Startwerte angegeben"

#. R/models.R: stop("no terms component nor attribute")
#: R/models.R:0
msgid "no terms component nor attribute"
msgstr "weder terms Komponente noch Attribut"

#. R/add.R: stop("no terms in scope")
#. R/add.R: stop("no terms in scope")
#: R/add.R:0
msgid "no terms in scope"
msgstr "keine Terme im Scope"

#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#: R/add.R:0
msgid "no terms in scope for adding to object"
msgstr "keine Terme im Scope, die zum Objekt hinzugefügt werden können"

#. R/ts.R: stop("no time series supplied")
#: R/ts.R:0
msgid "no time series supplied"
msgstr "keine Zeitreihe angegeben"

#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#: R/glm.R:0
msgid "no valid set of coefficients has been found: please supply starting values"
msgstr "keine zulässigen Koeffizienten gefunden: bitte Startwerte angeben"

#. R/lm.influence.R: stop("non-NA residual length does not match cases used in fitting")
#: R/lm.influence.R:0
msgid "non-NA residual length does not match cases used in fitting"
msgstr "Länge der nicht-NA Residuen passt nicht zur Anzahl Fälle im Fit"

#. R/model.tables.R: gettextf("non-factors ignored: %s", paste(names(nn), collapse = ", "))
#: R/model.tables.R:0
msgid "non-factors ignored: %s"
msgstr "nicht-Faktoren ignoriert: %s"

#. R/density.R: stop("non-finite 'bw'")
#: R/density.R:0
msgid "non-finite 'bw'"
msgstr "nicht-endliches 'bw'"

#. R/density.R: stop("non-finite 'from'")
#: R/density.R:0
msgid "non-finite 'from'"
msgstr "nicht-endliches 'from'"

#. R/density.R: stop("non-finite 'to'")
#: R/density.R:0
msgid "non-finite 'to'"
msgstr "nicht-endliches 'to'"

#. R/glm.R: gettextf("non-finite coefficients at iteration %d", iter)
#: R/glm.R:0
msgid "non-finite coefficients at iteration %d"
msgstr "nicht-endliche Koeffizienten bei Iteration %d"

#. R/family.R: gettextf("non-integer #successes in a %s glm!", FAMILY)
#: R/family.R:0
msgid "non-integer #successes in a %s glm!"
msgstr "Nicht-ganzzahlige #Erfolge in einem %s-GLM"

#. R/family.R: gettextf("non-integer counts in a %s glm!", FAMILY)
#: R/family.R:0
msgid "non-integer counts in a %s glm!"
msgstr "nicht-ganzzahlige Anzahlen in einem %s-GLM"

#. R/ts.R: warning("non-intersecting series")
#: R/ts.R:0
msgid "non-intersecting series"
msgstr "schnittfreie Zeitreihen"

#. R/dendrogram.R: stop("non-leaf subtree of length 0")
#: R/dendrogram.R:0
msgid "non-leaf subtree of length 0"
msgstr "Teilbaum ist kein Blatt, aber Länge 0"

#. R/models.R: warning("non-list contrasts argument ignored")
#: R/models.R:0
msgid "non-list contrasts argument ignored"
msgstr "nicht-Listen Kontrastargument ignoriert"

#. R/family.R: stop("non-positive values not allowed for the 'Gamma' family")
#: R/family.R:0
msgid "non-positive values not allowed for the 'Gamma' family"
msgstr "nicht-positive Werte sind für die 'Gamma'-Familie nicht zulässig"

#. R/dist.R: warning("non-square matrix")
#: R/dist.R:0
msgid "non-square matrix"
msgstr "keine quadratische Matrix"

#. R/arima.R: stop("non-stationary AR part")
#. R/arma0.R: stop("non-stationary AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary AR part"
msgstr "nicht-stationärer AR Teil"

#. R/arima.R: stop("non-stationary AR part from CSS")
#: R/arima.R:0
msgid "non-stationary AR part from CSS"
msgstr "nicht stationärer AR Teil aus CSS"

#. R/arima.R: stop("non-stationary seasonal AR part")
#. R/arma0.R: stop("non-stationary seasonal AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary seasonal AR part"
msgstr "nicht-stationärer saisonaler AR Teil"

#. R/arima.R: stop("non-stationary seasonal AR part from CSS")
#: R/arima.R:0
msgid "non-stationary seasonal AR part from CSS"
msgstr "nicht-stationärer saisonaler AR Teil aus CSS"

#. R/ts.R: stop("non-time series not of the correct length")
#: R/ts.R:0
msgid "non-time series not of the correct length"
msgstr "nicht-Zeitreihe hat falsche Länge"

#. R/smspline.R: stop("not a valid \"smooth.spline\" object")
#: R/smspline.R:0
msgid "not a valid \"smooth.spline\" object"
msgstr "kein zulässiges \"smooth.spline\" Objekt"

#. R/stepfun.R: stop("not a valid step function")
#: R/stepfun.R:0
msgid "not a valid step function"
msgstr "keine zulässige Treppenfunktion"

#. R/ts.R: stop("not all series have the same frequency")
#: R/ts.R:0
msgid "not all series have the same frequency"
msgstr "nicht alle Zeitreihen haben gleiche Frequenz"

#. R/ts.R: stop("not all series have the same phase")
#: R/ts.R:0
msgid "not all series have the same phase"
msgstr "nicht alle Zeitreihen haben gleiche Phase"

#. R/friedman.test.R: stop("not an unreplicated complete block design")
#. R/quade.test.R: stop("not an unreplicated complete block design")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "not an unreplicated complete block design"
msgstr "kein vollständiges Blockdesign ohne Wiederholungen"

#. R/ks.test.R: stop("not enough 'x' data")
#. R/ks.test.R: stop("not enough 'x' data")
#. R/ks.test.R: stop("not enough 'x' data")
#: R/ks.test.R:0
msgid "not enough 'x' data"
msgstr "zu wenig 'x' Daten"

#. R/ansari.test.R: stop("not enough 'x' observations")
#. R/t.test.R: stop("not enough 'x' observations")
#. R/t.test.R: stop("not enough 'x' observations")
#. R/var.test.R: stop("not enough 'x' observations")
#: R/ansari.test.R:0 R/t.test.R:0 R/var.test.R:0
msgid "not enough 'x' observations"
msgstr "nicht genug 'x' Beobachtungen"

#. R/ks.test.R: stop("not enough 'y' data")
#. R/ks.test.R: stop("not enough 'y' data")
#. R/ks.test.R: stop("not enough 'y' data")
#: R/ks.test.R:0
msgid "not enough 'y' data"
msgstr "zu wenig 'y' Daten"

#. R/ansari.test.R: stop("not enough 'y' observations")
#. R/t.test.R: stop("not enough 'y' observations")
#. R/var.test.R: stop("not enough 'y' observations")
#. R/wilcox.test.R: stop("not enough 'y' observations")
#: R/ansari.test.R:0 R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0
msgid "not enough 'y' observations"
msgstr "nicht genug 'y' Beobachtungen"

#. R/wilcox.test.R: stop("not enough (non-missing) 'x' observations")
#: R/wilcox.test.R:0
msgid "not enough (non-missing) 'x' observations"
msgstr "nicht genug (nicht-fehlende) 'x' Beobachtungen"

#. R/poisson.test.R: stop("not enough data")
#. R/prop.test.R: stop("not enough data")
#: R/poisson.test.R:0 R/prop.test.R:0
msgid "not enough data"
msgstr "nicht genug Daten"

#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#: R/contrast.R:0
msgid "not enough degrees of freedom to define contrasts"
msgstr "zu wenig Freiheitsgrade, um Kontraste zu definieren"

#. R/cor.test.R: stop("not enough finite observations")
#. R/cor.test.R: stop("not enough finite observations")
#: R/cor.test.R:0
msgid "not enough finite observations"
msgstr "zu wenig endliche Beobachtungen"

#. R/oneway.test.R: stop("not enough groups")
#: R/oneway.test.R:0
msgid "not enough groups"
msgstr "nicht genügend Gruppen"

#. R/fligner.test.R: stop("not enough observations")
#. R/kruskal.test.R: stop("not enough observations")
#. R/mood.test.R: stop("not enough observations")
#. R/oneway.test.R: stop("not enough observations")
#. R/t.test.R: stop("not enough observations")
#: R/fligner.test.R:0 R/kruskal.test.R:0 R/mood.test.R:0 R/oneway.test.R:0
#: R/t.test.R:0
msgid "not enough observations"
msgstr "nicht genug Beobachtungen"

#. R/plot.lm.R: gettextf("not plotting observations with leverage one:\n  %s",     paste(which(isInf), collapse = ", "))
#: R/plot.lm.R:0
msgid ""
"not plotting observations with leverage one:\n"
"  %s"
msgstr ""
"kein Plot der Beobachtungen mit Leverage 1:\n"
"  %s"

#. R/smspline.R: warning("not using invalid df; must have 1 < df <= n := #{unique x} = ",     nx)
#: R/smspline.R:0
msgid "not using invalid df; must have 1 < df <= n := #{unique x} ="
msgstr "unzulässige df nicht benutzt; es muss gelten 1 < df <= n := #{verschiedene x} ="

#. R/ftable.R: stop("nothing to tabulate")
#: R/ftable.R:0
msgid "nothing to tabulate"
msgstr "nichts zu tabellieren"

#. R/symnum.R: stop("number of 'cutpoints' must be one less than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one less than number of symbols"
msgstr "Anzahl der 'cutpoints' muss eins kleiner sein als die Anzahl der Symbole"

#. R/symnum.R: stop("number of 'cutpoints' must be one more than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one more than number of symbols"
msgstr "Anzahl der 'cutpoints' muss eins kleiner sein als die Anzahl der Symbole"

#. R/kmeans.R: stop("number of cluster centres must lie between 1 and nrow(x)",     call. = FALSE)
#: R/kmeans.R:0
msgid "number of cluster centres must lie between 1 and nrow(x)"
msgstr "Anzahl der Clusterzentren muss zwischen 1 und nrow(x) liegen"

#. R/ts.R: stop("number of differences must be a positive integer")
#: R/ts.R:0
msgid "number of differences must be a positive integer"
msgstr "Anzahl der Differenzen muss eine positive ganze Zahl sein"

#. R/power.anova.test.R: stop("number of groups must be at least 2")
#: R/power.anova.test.R:0
msgid "number of groups must be at least 2"
msgstr "Anzahl der Gruppen muss mindestens 2 sein"

#. R/smspline.R: stop("number of observations in 'x' and 'y' must match.")
#: R/smspline.R:0
msgid "number of observations in 'x' and 'y' must match."
msgstr "Anzahl der Beobachtungen in 'x' und 'y' muss übereinstimmen"

#. R/power.anova.test.R: stop("number of observations in each group must be at least 2")
#: R/power.anova.test.R:0
msgid "number of observations in each group must be at least 2"
msgstr "Anzahl der Beobachtungen in jeder Gruppe muss mindestens zwei sein"

#. R/glm.R: gettextf("number of offsets is %d should equal %d (number of observations)",     length(offset), NROW(Y))
#: R/glm.R:0
msgid "number of offsets is %d should equal %d (number of observations)"
msgstr "Anzahl der Offsets %d sollte der Anzahl %d der Beobachtungen entsprechen"

#. R/lm.R: gettextf("number of offsets is %d, should equal %d (number of observations)",     NROW(offset), ny)
#: R/lm.R:0
msgid "number of offsets is %d, should equal %d (number of observations)"
msgstr "Anzahl der Offsets in %d sollte gleich %d (Anzahl Beobachtungen) sein"

#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#: R/add.R:0
msgid "number of rows in use has changed: remove missing values?"
msgstr "Anzahl der benutzten Zeilen hat sich geändert: entferne fehlende Werte?"

#. R/ar.R: stop("number of series in 'object' and 'newdata' do not match")
#: R/ar.R:0
msgid "number of series in 'object' and 'newdata' do not match"
msgstr "Anzahl von Reihen in 'object' und 'newdata' passen nicht"

#. R/ts.R: stop("number of values supplied is not a sub-multiple of the number of values to be replaced")
#: R/ts.R:0
msgid "number of values supplied is not a sub-multiple of the number of values to be replaced"
msgstr "Anzahl der angegebenen Werte ist kein Sub-Vielfaches der Zahl der Werte, die ersetzt werden sollen"

#. R/lsfit.R: gettextf("number of weights = %d should equal %d (number of responses)",     nwts, nry)
#: R/lsfit.R:0
msgid "number of weights = %d should equal %d (number of responses)"
msgstr "Zahl der Gewichte %d sollte der Zahl der Zielgrößen %d entsprechen"

#. R/smspline.R: stop("number of weights must match number of observations.")
#: R/smspline.R:0
msgid "number of weights must match number of observations."
msgstr "Anzahl der Gewichte muss mit der Zahl der Beobachtungen übereinstimmen"

#. R/smspline.R: stop("numeric 'all.knots' must cover [0,1] (= the transformed data-range)")
#: R/smspline.R:0
msgid "numeric 'all.knots' must cover [0,1] (= the transformed data-range)"
msgstr "numerische 'all.knots' müssen [0,1] überdecken (= transformierter Datenbereich)"

#. R/contrast.R: stop("numeric contrasts or contrast name expected")
#: R/contrast.R:0
msgid "numeric contrasts or contrast name expected"
msgstr "numerische Kontraste oder ein Kontrastname erwartet"

#. R/ksmooth.R: stop("numeric y must be supplied.\nFor density estimation use density()")
#: R/ksmooth.R:0
msgid ""
"numeric y must be supplied.\n"
"For density estimation use density()"
msgstr ""
"numerisches y muss angegeben werden.\n"
"Zur Dichteschätzung bitte density() nutzen"

#. R/biplot.R: gettextf("object '%s' has no scores", deparse1(substitute(x)))
#. R/biplot.R: gettextf("object '%s' has no scores", deparse1(substitute(x)))
#: R/biplot.R:0
msgid "object '%s' has no scores"
msgstr "Objekt '%s' hat keine Scores"

#. R/manova.R: gettextf("object must be of class %s or %s", dQuote("manova"),     dQuote("maov"))
#: R/manova.R:0
msgid "object must be of class %s or %s"
msgstr "Objekt muss aus Klasse %s oder %s sein"

#. R/C.R: stop("object not interpretable as a factor")
#: R/C.R:0
msgid "object not interpretable as a factor"
msgstr "Objekt kann nicht als Faktor interpretiert  werden"

#. R/lsfit.R: warning("observations with 0 weight not used in calculating standard deviation")
#: R/lsfit.R:0
msgid "observations with 0 weight not used in calculating standard deviation"
msgstr "Beobachtungen mit Gewicht 0 nicht in Berechnung der Standardabweichung einbezogen"

#. R/lsfit.R: warning("observations with 0 weights not used")
#: R/lsfit.R:0
msgid "observations with 0 weights not used"
msgstr "Beobachtungen mit Gewicht 0 nicht benutzt"

#. R/glm.R: warning("observations with zero weight not used for calculating dispersion")
#: R/glm.R:0
msgid "observations with zero weight not used for calculating dispersion"
msgstr "Beobachtungen mit Gewicht 0 werden bei der Berechnung der Dispersion einbezogen"

#. R/optim.R: warning("one-dimensional optimization by Nelder-Mead is unreliable:\nuse \"Brent\" or optimize() directly")
#: R/optim.R:0
msgid ""
"one-dimensional optimization by Nelder-Mead is unreliable:\n"
"use \"Brent\" or optimize() directly"
msgstr ""
"eindimensionale Optimierung mit Nelder-Mead ist unzuverlässig:\n"
"nutze direkt \"Brent\" oder optimize()"

#. R/cmdscale.R: gettextf("only %d of the first %d eigenvalues are > 0", k1, k)
#: R/cmdscale.R:0
msgid "only %d of the first %d eigenvalues are > 0"
msgstr "nur %d der ersten %d Eigenwerte sind > 0"

#. R/loess.R: stop("only 1-4 predictors are allowed")
#: R/loess.R:0
msgid "only 1-4 predictors are allowed"
msgstr "nur 1-4 Prediktoren erlaubt"

#. R/StructTS.R: stop("only implemented for univariate time series")
#. R/arima.R: stop("only implemented for univariate time series")
#. R/arma0.R: stop("only implemented for univariate time series")
#. R/cpgram.R: stop("only implemented for univariate time series")
#: R/StructTS.R:0 R/arima.R:0 R/arma0.R:0 R/cpgram.R:0
msgid "only implemented for univariate time series"
msgstr "nur für univariate Zeitreihen implementiert"

#. R/ts.R: stop("only replacement of elements is allowed")
#: R/ts.R:0
msgid "only replacement of elements is allowed"
msgstr "nur Elemente dürfen ersetzt werden"

#. R/stl.R: stop("only univariate series are allowed")
#: R/stl.R:0
msgid "only univariate series are allowed"
msgstr "nur univariate Zeitreihen erlaubt"

#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#: R/HoltWinters.R:0
msgid "optimization difficulties: %s"
msgstr "Schwierigkeiten bei Optimierung: %s"

#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#: R/HoltWinters.R:0
msgid "optimization failure"
msgstr "Optimierung fehlgeschlagen"

#. R/anova.R: warning("option \"show.coef.Pvalues\" is invalid: assuming TRUE")
#: R/anova.R:0
msgid "option \"show.coef.Pvalues\" is invalid: assuming TRUE"
msgstr "option \"show.coef.Pvalues\" ist unzulässig: nehme TRUE an"

#. R/anova.R: warning("option \"show.signif.stars\" is invalid: assuming TRUE")
#: R/anova.R:0
msgid "option \"show.signif.stars\" is invalid: assuming TRUE"
msgstr "Option \"show.signif.stars\" ist unzulässig: nehme TRUE an"

#. R/contr.poly.R: gettextf("orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom",     n - 1)
#: R/contr.poly.R:0
msgid "orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom"
msgstr "orthognonale Polynome können für %d Freiheitsgrade nicht genau genug dargestellt werden"

#. R/ks.test.R: warning("p-value will be approximate in the presence of ties")
#: R/ks.test.R:0
msgid "p-value will be approximate in the presence of ties"
msgstr "im Falle von Bindungen sind die p-Werte approximativ"

#. R/nls.R: gettextf("parameters without starting value in 'data': %s", paste(nnn,     collapse = ", "))
#: R/nls.R:0
msgid "parameters without starting value in 'data': %s"
msgstr "Parameter ohne Startwert in 'data': %s"

#. R/smspline.R: stop("penalty must be numeric and > 0")
#: R/smspline.R:0
#, fuzzy
msgid "penalty must be numeric and > 0"
msgstr "'y' muss numerisch sein"

#. R/pairwise.R: stop("pooling of SD is incompatible with paired tests")
#: R/pairwise.R:0
msgid "pooling of SD is incompatible with paired tests"
msgstr "Poolen der SD passt nicht mit paarweisen Tests zusammen"

#. R/family.R: stop("positive values only are allowed for the 'inverse.gaussian' family")
#: R/family.R:0
msgid "positive values only are allowed for the 'inverse.gaussian' family"
msgstr "nur positive Werte sind für die 'inverse.gaussian'-Familie zulässig"

#. R/StructTS.R: gettextf("possible convergence problem: 'optim' gave code = %d and message %s",     res$convergence, sQuote(res$message))
#: R/StructTS.R:0
msgid "possible convergence problem: 'optim' gave code = %d and message %s"
msgstr "evtl. Konvergenzproblem: 'optim' lieferte Kode = %d und Nachricht %s"

#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d",     res$convergence)
#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d",     res$convergence)
#. R/arma0.R: gettextf("possible convergence problem: optim gave code = %d",     code)
#: R/arima.R:0 R/arma0.R:0
msgid "possible convergence problem: optim gave code = %d"
msgstr "evtl. Konvergenzproblem: optim lieferte Kode = %d"

#. R/lm.R: gettext("prediction from rank-deficient fit")
#: R/lm.R:0
#, fuzzy
msgid "prediction from rank-deficient fit"
msgstr "Vorhersage durch Fit ohne vollen Rang mag täuschen"

#. R/lm.R: warning("predictions on current data refer to _future_ responses\n")
#: R/lm.R:0
msgid "predictions on current data refer to _future_ responses"
msgstr "Vorhersagen auf aktuellen Daten beziehen sich auf zukünftige Daten"

#. R/loess.R: stop("predictors must all be numeric")
#: R/loess.R:0
msgid "predictors must all be numeric"
msgstr "Prädiktoren müssen alle numerisch sein"

#. R/distn.R: stop("probabilities must be finite, non-negative and not all 0")
#: R/distn.R:0
msgid "probabilities must be finite, non-negative and not all 0"
msgstr "Wahrscheinlichkeiten müssen endlich, nicht-negativ und nicht alle 0 sein"

#. R/chisq.test.R: stop("probabilities must be non-negative.")
#: R/chisq.test.R:0
msgid "probabilities must be non-negative."
msgstr "Wahrscheinlichkeiten müssen nicht-negativ sein"

#. R/chisq.test.R: stop("probabilities must sum to 1.")
#: R/chisq.test.R:0
msgid "probabilities must sum to 1."
msgstr "Wahrscheinlichkeiten müssen sich zu 1 addieren"

#. R/glm-profile.R: stop("profiling has found a better solution, so original fit had not converged")
#: R/glm-profile.R:0
msgid "profiling has found a better solution, so original fit had not converged"
msgstr ""

#. R/optim.R: warning("read the documentation for 'trace' more carefully")
#: R/optim.R:0
msgid "read the documentation for 'trace' more carefully"
msgstr "bitte die Dokumentation zu 'trace' genauer lesen"

#. R/relevel.R: gettextf("ref = %d must be in 1L:%d", ref, nlev)
#: R/relevel.R:0
msgid "ref = %d must be in 1L:%d"
msgstr "ref = %d muss in 1L:%d liegen"

#. R/wilcox.test.R: warning("requested conf.level not achievable")
#. R/wilcox.test.R: warning("requested conf.level not achievable")
#. R/wilcox.test.R: warning("requested conf.level not achievable")
#. R/wilcox.test.R: warning("requested conf.level not achievable")
#: R/wilcox.test.R:0
msgid "requested conf.level not achievable"
msgstr "gefordertes conf.level nicht erreichbar"

#. R/factanal.R: stop("requested scores without an 'x' matrix")
#: R/factanal.R:0
msgid "requested scores without an 'x' matrix"
msgstr "verlangte scores ohne eine 'x' Matrix"

#. R/lm.R: warning("residual degrees of freedom in object suggest this is not an \"lm\" fit")
#: R/lm.R:0
msgid "residual degrees of freedom in object suggest this is not an \"lm\" fit"
msgstr "Freiheitsgrade der Residuen legt nahe, dass es sich nicht um einen \"lm\" Fit handelt"

#. R/manova.R: gettextf("residuals have rank %d < %d", rss.qr$rank, ncol(resid))
#: R/manova.R:0
msgid "residuals have rank %d < %d"
msgstr "Residuen haben Rang %d < %d"

#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#: R/mlm.R:0
msgid "residuals have rank %s < %s"
msgstr "Residuen haben Rang %s < %s"

#. R/factanal.R: stop("response not allowed in formula")
#. R/prcomp.R: stop("response not allowed in formula")
#. R/princomp.R: stop("response not allowed in formula")
#: R/factanal.R:0 R/prcomp.R:0 R/princomp.R:0
msgid "response not allowed in formula"
msgstr "Antwort in Formel nicht zulässig"

#. R/selfStart.R: stop("right-hand side of formula is not a call")
#: R/selfStart.R:0
#, fuzzy
msgid "right-hand side of formula is not a call"
msgstr "unzulässige Formel %s: ist kein Aufruf"

#. R/dendrogram.R: stop("row dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "row dendrogram ordering gave index of wrong length"
msgstr "zeilenweises Dendrogrammordnen ergab Index falscher Länge"

#. R/mantelhaen.test.R: stop("sample size in each stratum must be > 1")
#: R/mantelhaen.test.R:0
msgid "sample size in each stratum must be > 1"
msgstr "Stichprobengröße in jeder Schicht muss > 1 sein"

#. R/shapiro.test.R: stop("sample size must be between 3 and 5000")
#: R/shapiro.test.R:0
msgid "sample size must be between 3 and 5000"
msgstr "Stichprobengröße muss zwischen 3 und 5000 liegen"

#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "samples differ in location: cannot compute confidence set, returning NA"
msgstr "Stichproben unterscheiden sich in der Lage: kann keinen Konfidenzbereich angeben, gebe NA zurück"

#. R/ts.R: stop("scatter plots only for univariate time series")
#: R/ts.R:0
msgid "scatter plots only for univariate time series"
msgstr "Scatterplots nur für univariate Zeitreihen"

#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#: R/add.R:0
msgid "scope is not a subset of term labels"
msgstr "Scope ist keine Teilmenge der Labels des Terms"

#. R/arima.R: warning("seasonal MA part of model is not invertible")
#. R/arma0.R: warning("seasonal MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "seasonal MA part of model is not invertible"
msgstr "saisonaler MA Teil des Modells ist nicht invertierbar"

#. R/ts.R: warning("series is corrupt, with no 'tsp' attribute")
#. R/ts.R: stop("series is corrupt, with no 'tsp' attribute")
#: R/ts.R:0
msgid "series is corrupt, with no 'tsp' attribute"
msgstr "Zeitreihe ist beschädigt, kein 'tsp' Attribut"

#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d",     NROW(x), nn)
#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d",     NROW(x), nn)
#: R/ts.R:0
msgid "series is corrupt: length %d with 'tsp' implying %d"
msgstr "Zeitreihe ist beschädigt: Länge %d bei 'tsp' das %d impliziert"

#. R/stl.R: stop("series is not periodic or has less than two periods")
#: R/stl.R:0
msgid "series is not periodic or has less than two periods"
msgstr "Zeitreihe ist nicht periodisch oder umfasst weniger als zwei Perioden"

#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#: R/nls.R:0
msgid "setVarying : 'vary' length must match length of parameters"
msgstr "setVarying : Länge von 'vary' muss Länge der Parameter entsprechen"

#. R/models.R: gettextf("setting '%s' in terms.formula() is deprecated", "abb")
#. R/models.R: gettextf("setting '%s' in terms.formula() is deprecated", "neg.out")
#: R/models.R:0
msgid "setting '%s' in terms.formula() is deprecated"
msgstr ""

#. R/smspline.R: warning(wtxt, "\nsetting df = 1  __use with care!__")
#: R/smspline.R:0
msgid "setting df = 1  __use with care!__"
msgstr "setzte df = 1 ;  Vorsicht!"

#. R/lm.R: stop("simulate() is not yet implemented for multivariate lm()")
#: R/lm.R:0
msgid "simulate() is not yet implemented for multivariate lm()"
msgstr "simulate() ist noch nicht für multivariates lm() implementiert"

#. R/contrast.R: stop("singular contrast matrix")
#: R/contrast.R:0
msgid "singular contrast matrix"
msgstr "singläre Kontrastmatrix"

#. R/glm.R: stop("singular fit encountered")
#. R/lm.R: stop("singular fit encountered")
#. R/lm.R: stop("singular fit encountered")
#: R/glm.R:0 R/lm.R:0
msgid "singular fit encountered"
msgstr "singlärer Fit aufgetreten"

#. R/nls.R: stop("singular gradient matrix at initial parameter estimates")
#: R/nls.R:0
msgid "singular gradient matrix at initial parameter estimates"
msgstr "singuläre Gradientenmatrix bei der ersten Parameterschätzung"

#. R/ts-tests.R: stop("singularities in regression")
#: R/ts-tests.R:0
msgid "singularities in regression"
msgstr "Singularitäten in der Regression"

#. R/distn.R: stop("size != sum(x), i.e. one is wrong")
#: R/distn.R:0
msgid "size != sum(x), i.e. one is wrong"
msgstr "size != sum(x), ein Wert ist falsch"

#. R/hclust.R: stop("size cannot be NA nor exceed 65536")
#: R/hclust.R:0
msgid "size cannot be NA nor exceed 65536"
msgstr "size kann weder NA noch größer als 65536 sein"

#. R/arima.R: warning("some AR parameters were fixed: setting transform.pars = FALSE")
#: R/arima.R:0
msgid "some AR parameters were fixed: setting transform.pars = FALSE"
msgstr "einige AR Parameter wurden festgelegt: setze transform.pars = FALSE"

#. R/arma0.R: warning("some ARMA parameters were fixed: setting transform.pars = FALSE")
#: R/arma0.R:0
msgid "some ARMA parameters were fixed: setting transform.pars = FALSE"
msgstr "einige ARMA Parameter wurden festgelegt: setze transform.pars = FALSE"

#. R/reshape.R: gettextf("some constant variables (%s) are really varying", paste(names(rval)[!really.constant],     collapse = ","))
#: R/reshape.R:0
msgid "some constant variables (%s) are really varying"
msgstr "einige konstante Variablen (%s) ändern sich doch"

#. R/kruskal.test.R: warning("some elements of 'x' are not numeric and will be coerced to numeric")
#: R/kruskal.test.R:0
msgid "some elements of 'x' are not numeric and will be coerced to numeric"
msgstr "einige Elemente von 'x' sind nicht numerisch und werden nach numerisch gewandelt"

#. R/dummy.coef.R: warning("some terms will have NAs due to the limits of the method")
#: R/dummy.coef.R:0
msgid "some terms will have NAs due to the limits of the method"
msgstr "einige Ausdrücke werden aufgrund der eingeschränkten Methode NAs enthalten"

#. R/smspline.R: stop("some weights should be positive")
#: R/smspline.R:0
msgid "some weights should be positive"
msgstr "einige Gewichte sollten positiv sein"

#. R/loess.R: stop("specified parametric for all predictors")
#: R/loess.R:0
msgid "specified parametric for all predictors"
msgstr "alle Prädiktoren als parametrisch spezifiziert"

#. R/loess.R: stop("specified the square of a factor predictor to be dropped when degree = 1")
#: R/loess.R:0
msgid "specified the square of a factor predictor to be dropped when degree = 1"
msgstr "das Quadrat eines Faktors als Prädiktor als zu vernachlässigen angenommen, wenn Grad = 1"

#. R/loess.R: stop("specified the square of a predictor to be dropped with only one numeric predictor")
#: R/loess.R:0
msgid "specified the square of a predictor to be dropped with only one numeric predictor"
msgstr "das Quadrat eines Prädiktors als zu vernachlässigen angenommen, wenn nur ein numerischer Prädiktor angegeben"

#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#: R/distn.R:0
msgid "specify 'rate' or 'scale' but not both"
msgstr "bitte 'rate' oder 'scale' aber nicht beides angeben"

#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'k' and 'h'"
msgstr "es muss entweder nur 'k' oder nur 'h' angegeben werden"

#. R/identify.hclust.R: stop("specify exactly one of 'which' and 'x'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'which' and 'x'"
msgstr "es muss enweder nur 'which' oder nur 'x' angegeben werden"

#. R/splinefun.R: warning("spline: first and last y values differ - using y[1L] for both")
#: R/splinefun.R:0
msgid "spline: first and last y values differ - using y[1L] for both"
msgstr "spline: erster und letzter y Wert unterscheiden sich - benutze y[1L] für beide"

#. R/spline.R: warning("spline: first and last y values differ - using y[1] for both")
#: R/spline.R:0
msgid "spline: first and last y values differ - using y[1] for both"
msgstr "spline: erster und letzter y Wert unterscheiden sich - benutze y[1] für beide"

#. R/glm.R: warning("step size truncated due to divergence", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated due to divergence"
msgstr "Schrittweite abgeschnitten wegen Divergenz"

#. R/glm.R: warning("step size truncated: out of bounds", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated: out of bounds"
msgstr "Schrittweite abgeschnitten: Überlauf"

#. R/stepfun.R: stop("stepfun: 'x' must be ordered increasingly")
#: R/stepfun.R:0
msgid "stepfun: 'x' must be ordered increasingly"
msgstr "stepfun: 'x' muss aufsteigend angeordnet sein"

#. R/density.R: warning("sum(weights) != 1  -- will not get true density")
#: R/density.R:0
msgid "sum(weights) != 1  -- will not get true density"
msgstr "sum(weights) != 1 -- werde nicht die wahre Dichte erhalten"

#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#: R/cor.R:0
msgid "supply both 'x' and 'y' or a matrix-like 'x'"
msgstr "'x' und 'y' oder ein matrixähnliches 'x' müssen angegeben werden"

#. R/prop.test.R: stop("table 'x' should have 2 entries")
#: R/prop.test.R:0
msgid "table 'x' should have 2 entries"
msgstr "Tabelle 'x' sollte 2 Einträge haben"

#. R/cutree.R: stop("the 'height' component of 'tree' is not sorted (increasingly)")
#: R/cutree.R:0
msgid "the 'height' component of 'tree' is not sorted (increasingly)"
msgstr "die Komponente 'height' von 'tree' ist nicht (aufsteigend) sortiert"

#. R/lm.R: stop("the 'se.fit' argument is not yet implemented for \"mlm\" objects")
#: R/lm.R:0
msgid "the 'se.fit' argument is not yet implemented for \"mlm\" objects"
msgstr "das 'se.fit' Argument ist für \"mlm\" Objekte noch nicht implementiert"

#. R/aov.R: stop("the 'split' argument must be a list")
#: R/aov.R:0
msgid "the 'split' argument must be a list"
msgstr "das 'split' Argument muss eine Liste sein"

#. R/poisson.test.R: stop("the case k > 2 is unimplemented")
#: R/poisson.test.R:0
msgid "the case k > 2 is unimplemented"
msgstr "Fall k > 2 ist nicht implementiert"

#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#: R/aov.R:0
msgid "the contrast defined is empty (has no TRUE elements)"
msgstr "der definierte Kontrast ist leer (kein Element ist TRUE)"

#. R/StructTS.R: stop("the first value of the time series must not be missing")
#: R/StructTS.R:0
msgid "the first value of the time series must not be missing"
msgstr "der erste Wert der Zeitreihe darf nicht fehlen"

#. R/glm.R: gettext("the following arguments to 'anova.glm' are invalid and dropped: ",     domain = "R-stats")
#: R/glm.R:0
msgid "the following arguments to 'anova.glm' are invalid and dropped:"
msgstr "die folgenden Argumente für 'anova.glm' sind unzulässig und werden verworfen"

#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#: R/StructTS.R:0
msgid "the series is entirely NA"
msgstr "Zeitreihe besteht ausschließlich aus NA"

#. R/reshape.R: warning("there are records with missing times, which will be dropped.")
#: R/reshape.R:0
msgid "there are records with missing times, which will be dropped."
msgstr "es gibt Datensätze mit fehlenden Zeiten; diese werden ignoriert"

#. R/bartlett.test.R: stop("there must be at least 2 observations in each group")
#: R/bartlett.test.R:0
msgid "there must be at least 2 observations in each group"
msgstr "es müssen zumindest 2 Beobachtungen in jeder Gruppe sein"

#. R/model.tables.R: stop("this fit does not inherit from \"lm\"")
#: R/model.tables.R:0
msgid "this fit does not inherit from \"lm\""
msgstr "dieser Fit erbt nicht von \"lm\""

#. R/ks.test.R: warning("ties should not be present for the one-sample Kolmogorov-Smirnov test")
#: R/ks.test.R:0
#, fuzzy
msgid "ties should not be present for the one-sample Kolmogorov-Smirnov test"
msgstr "für den Komogorov-Smirnov-Test sollten keine Bindungen vorhanden sein"

#. R/ts.R: stop("time series contains internal NAs")
#: R/ts.R:0
msgid "time series contains internal NAs"
msgstr "Zeitreihe enthält innere NAs"

#. R/HoltWinters.R: stop("time series has no or less than 2 periods")
#: R/HoltWinters.R:0
msgid "time series has no or less than 2 periods"
msgstr "Zeitreihe hat keine oder weniger als 2 Perioden"

#. R/ts.R: stop("times to be replaced do not match")
#: R/ts.R:0
msgid "times to be replaced do not match"
msgstr "die Zeiten, die ersetzt werden sollen, passen nicht"

#. R/lm.influence.R: stop("too few cases i with h_ii > 0), n < k")
#: R/lm.influence.R:0
msgid "too few cases i with h_ii > 0), n < k"
msgstr "zu wenig Fälle i mit h_ii > 0), n < k"

#. R/zzModels.R: stop("too few distinct input values to fit a Michaelis-Menten model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a Michaelis-Menten model"
msgstr "zu wenig verschiedene Eingabewerte, um ein Michaelis-Menten-Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit a biexponential")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a biexponential"
msgstr "zu wenig verschiedene Eingabevariablen, um ein biexponentielles Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit a four-parameter logistic")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a four-parameter logistic"
msgstr "zu wenig verschiedene Werte, um ein vierparametriges logistisches Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit a logistic model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a logistic model"
msgstr "zu wenig verschiedene Eingabewerte, um ein logistisches Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit an asymptotic regression model"
msgstr "zu wenig verschiedene Eingabewerte, um asymtotisches Regressionsmodell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOff' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOff' model"
msgstr "zu wenige verschiedene Eingabewerte um ein 'asympOff' Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOrig' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOrig' model"
msgstr "zu wenige verschiedene Eingabewerte, um ein 'asympOrig' Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit the Gompertz model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Gompertz model"
msgstr "zu wenig verschiedene Eingabewerte, um ein Gompertz-Modell anzupassen"

#. R/zzModels.R: stop("too few distinct input values to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Weibull growth model"
msgstr "zu wenig verschiedene Eingabewerte, um ein Weibull-Wachstumsmodell anzupassen"

#. R/pairwise.R: stop("too few groups")
#: R/pairwise.R:0
msgid "too few groups"
msgstr "zu wenig Gruppen"

#. R/arima.R: stop("too few non-missing observations")
#: R/arima.R:0
msgid "too few non-missing observations"
msgstr "zu wenige nicht-fehlende Werte"

#. R/zzModels.R: stop("too few observations to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few observations to fit an asymptotic regression model"
msgstr "zu wenig Beobachtungen, um asymptotisches Regressionsmodell anzupassen"

#. R/ts.R: stop("too many replacement values supplied")
#: R/ts.R:0
msgid "too many replacement values supplied"
msgstr "zu viele Ersatzwerte angegeben"

#. R/arma0.R: warning("transformed ARMA parameters were fixed")
#: R/arma0.R:0
msgid "transformed ARMA parameters were fixed"
msgstr "tranformierte ARMA Parameter wurden festgelegt"

#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#: R/model.tables.R:0
msgid "type '%s' is not implemented yet"
msgstr "Typ '%s' noch nicht implementiert"

#. R/smspline.R: stop("type = \"partial\" is not yet implemented")
#: R/smspline.R:0
msgid "type = \"partial\" is not yet implemented"
msgstr "type = \"partial' ist noch nicht implementiert"

#. R/cancor.R: stop("unequal number of rows in 'cancor'")
#: R/cancor.R:0
msgid "unequal number of rows in 'cancor'"
msgstr "ungleiche Anzahl von Zeilen in 'cancor'"

#. R/acf.R: stop("univariate time series only")
#: R/acf.R:0
msgid "univariate time series only"
msgstr "nur univariate Zeitreihen"

#. R/density.R: stop("unknown bandwidth rule")
#: R/density.R:0
msgid "unknown bandwidth rule"
msgstr "unbekannte Bandbreitenregel"

#. R/kernel.R: stop("unknown named kernel")
#: R/kernel.R:0
msgid "unknown named kernel"
msgstr "unbekannter, benannter Kernel"

#. R/optim.R: gettext("unknown names in control: ", domain = "R-stats")
#: R/optim.R:0
msgid "unknown names in control:"
msgstr "unbekannte Namen in control:"

#. R/stl.R: stop("unknown string value for s.window")
#: R/stl.R:0
msgid "unknown string value for s.window"
msgstr "unbekannter Zeichenkettenwert für s.window"

#. R/nls.R: warning("upper and lower bounds ignored unless algorithm = \"port\"")
#: R/nls.R:0
msgid "upper and lower bounds ignored unless algorithm = \"port\""
msgstr "Obere oder untere Grenzen ignoriert, wenn nicht algorithm= \"port\""

#. R/plot.lm.R: stop("use only with \"lm\" objects")
#: R/plot.lm.R:0
msgid "use only with \"lm\" objects"
msgstr "nur mit \"lm\" Objekten benutzen"

#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate",     fname)
#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate",     fam)
#: R/glm.R:0
msgid "using F test with a '%s' family is inappropriate"
msgstr "F-Test bei einer '%s' Familie nicht angemessen"

#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#: R/glm.R:0
msgid "using F test with a fixed dispersion is inappropriate"
msgstr "F-Test bei fester Dispersion unangemessen"

#. R/models.R: warning("using type = \"numeric\" with a factor response will be ignored")
#: R/models.R:0
msgid "using type = \"numeric\" with a factor response will be ignored"
msgstr "Benutzung von type=\"numeric\" wird für eine faktorielle Zielgröße ignoriert"

#. R/family.R: message("using weights as inverse variances")
#: R/family.R:0
msgid "using weights as inverse variances"
msgstr "nutze Gewichte als inverse Varianzen"

#. R/family.R: message("using weights as shape parameters")
#: R/family.R:0
msgid "using weights as shape parameters"
msgstr "nutze Gewichte als Gestaltparameter"

#. R/glm.R: stop("value of 'epsilon' must be > 0")
#: R/glm.R:0
msgid "value of 'epsilon' must be > 0"
msgstr "Wert von 'epsilon' muss > 0 sein"

#. R/models.R: gettextf("variable '%s' is absent, its contrast will be ignored",     nn)
#: R/models.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "Variable '%s' fehlt, ihre Kontraste werden ignoriert"

#. R/models.R: gettextf("variable '%s' is not a factor", nm)
#: R/models.R:0
msgid "variable '%s' is not a factor"
msgstr "Variable '%s' is kein Faktor"

#. R/models.R: gettextf("variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied",     names(old)[wrong], old[wrong], new[wrong])
#: R/models.R:0
msgid "variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied"
msgstr "Variable '%s' wurde mit Typ \"%s\" gefitted, angegeben wurde aber Typ \"%s\""

#. R/models.R: gettextf("variables %s were specified with different types from the fit",     paste(sQuote(names(old)[wrong]), collapse = ", "))
#: R/models.R:0
msgid "variables %s were specified with different types from the fit"
msgstr "die Variablen %s wurden mit anderen Typen als im Fit angegeben"

#. R/aov.R: stop("weights are not supported in a multistratum aov() fit")
#: R/aov.R:0
msgid "weights are not supported in a multistratum aov() fit"
msgstr "Gewichte werden in einer multistratum ANOVA-Anpassung nicht unterstützt"

#. R/cov.wt.R: stop("weights must be non-negative and not all zero")
#: R/cov.wt.R:0
msgid "weights must be non-negative and not all zero"
msgstr "Gewichte müssen nicht-negativ und nicht alle Null sein"

#. R/embed.R: stop("wrong embedding dimension")
#. R/embed.R: stop("wrong embedding dimension")
#: R/embed.R:0
msgid "wrong embedding dimension"
msgstr "falsche Einbettungsdimension"

#. R/anova.R: stop("wrong k / cs.ind")
#: R/anova.R:0
msgid "wrong k / cs.ind"
msgstr "falsches k / cs.ind"

#. R/arima.R: stop("wrong length for 'fixed'")
#. R/arma0.R: stop("wrong length for 'fixed'")
#: R/arima.R:0 R/arma0.R:0
msgid "wrong length for 'fixed'"
msgstr "falsche Länge für 'fixed'"

#. R/ftable.R: stop("wrong method")
#: R/ftable.R:0
msgid "wrong method"
msgstr "falsche Methode"

#. R/ppr.R: stop("wrong number of columns in 'x'")
#: R/ppr.R:0
msgid "wrong number of columns in 'x'"
msgstr "falsche Spaltenanzahl in 'x'"

#. R/contr.poly.R: stop("wrong number of columns in new data: ", deparse1(substitute(...)))
#: R/contr.poly.R:0
msgid "wrong number of columns in new data:"
msgstr "falsche Spaltenanzahl in den neuen Daten:"

#. R/contrast.R: stop("wrong number of contrast matrix rows")
#: R/contrast.R:0
msgid "wrong number of contrast matrix rows"
msgstr "falsche Anzahl von Kontrastmatrixzeilen"

#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#: R/ts-tests.R:0
msgid "x is not a vector or univariate time series"
msgstr "x ist weder Vektor noch univariate Zeitreihe"

#. R/acf.R: stop("x$lag must have at least 1 column")
#: R/acf.R:0
msgid "x$lag must have at least 1 column"
msgstr "x$lag muss mindestens 1 Spalte haben"

#. R/cmdscale.R: warning("x.ret=TRUE is disregarded when list.=FALSE")
#: R/cmdscale.R:0
msgid "x.ret=TRUE is disregarded when list.=FALSE"
msgstr "x.ret=TRUE wird verworfen, wenn list.=FALSE"

#. R/diffinv.R: warning("x[1] != r[1]; using x[1] for diagonal")
#: R/diffinv.R:0
msgid "x[1] != r[1]; using x[1] for diagonal"
msgstr ""

#. R/distn.R: stop("x[] and prob[] must be equal length vectors.")
#: R/distn.R:0
msgid "x[] and prob[] must be equal length vectors."
msgstr "x[] und prob[] müssen gleich lange Vektoren sein"

#. R/plot.lm.R: stop("y is empty or has only NAs")
#. R/qqnorm.R: stop("y is empty or has only NAs")
#: R/plot.lm.R:0 R/qqnorm.R:0
msgid "y is empty or has only NAs"
msgstr "y ist leer oder enthält nur NAs"

#. R/family.R: stop("y values must be 0 <= y <= 1")
#: R/family.R:0
msgid "y values must be 0 <= y <= 1"
msgstr "y Werte müssen in [0, 1] liegen"

#. R/approx.R: stop("zero non-NA points")
#. R/approx.R: stop("zero non-NA points")
#. R/spline.R: stop("zero non-NA points")
#. R/splinefun.R: stop("zero non-NA points")
#: R/approx.R:0 R/spline.R:0 R/splinefun.R:0
msgid "zero non-NA points"
msgstr "keine nicht-NA Punkte"

#. R/ar.R: stop("zero-variance series")
#. R/ar.R: stop("zero-variance series")
#: R/ar.R:0
msgid "zero-variance series"
msgstr "Serie mit Varianz Null"

#. R/factanal.R: ngettext(factors, "%d factor is too many for %d variables", "%d factors are too many for %d variables")
#: R/factanal.R:0
msgid "%d factor is too many for %d variables"
msgid_plural "%d factors are too many for %d variables"
msgstr[0] "%d Faktor ist zu viel für %d Variablen"
msgstr[1] "%d Faktoren sind zu viel für %d Variablen"

#. R/lsfit.R: ngettext(sum(!good), "%d missing value deleted", "%d missing values deleted")
#: R/lsfit.R:0
msgid "%d missing value deleted"
msgid_plural "%d missing values deleted"
msgstr[0] "%d fehlender Wert gelöscht"
msgstr[1] "%d fehlende Werte gelöscht"

#. R/nafns.R: ngettext(n <- length(x), "%d observation deleted due to missingness",     "%d observations deleted due to missingness")
#: R/nafns.R:0
msgid "%d observation deleted due to missingness"
msgid_plural "%d observations deleted due to missingness"
msgstr[0] "%d Beobachtung als fehlend gelöscht"
msgstr[1] "%d Beobachtungen als fehlend gelöscht"

#. R/smspline.R: ngettext(diff, "%d observation with NA, NaN or Inf deleted",     "%d observations with NAs, NaNs and/or Infs deleted")
#: R/smspline.R:0
msgid "%d observation with NA, NaN or Inf deleted"
msgid_plural "%d observations with NAs, NaNs and/or Infs deleted"
msgstr[0] "%d Beobachtung mit NAs, NANs und/oder Infs gelöscht"
msgstr[1] "%d Beobachtungen mit NAs, NANs und/oder Infs gelöscht"

#. R/lsfit.R: ngettext(nrx, "'X' matrix has %d case (row)", "'X' matrix has %d cases (rows)")
#: R/lsfit.R:0
msgid "'X' matrix has %d case (row)"
msgid_plural "'X' matrix has %d cases (rows)"
msgstr[0] "Matrix 'X' hat %d Beobachtung (Zeile)"
msgstr[1] "Matrix 'X' hat %d Beobachtungen (Zeilen)"

#. R/lsfit.R: ngettext(nry, "'Y' has %d case (row)", "'Y' has %d cases (rows)")
#: R/lsfit.R:0
msgid "'Y' has %d case (row)"
msgid_plural "'Y' has %d cases (rows)"
msgstr[0] "'Y' hat %d Beobachtung (Zeile)"
msgstr[1] "'Y' hat %d Beobachtungen (Zeilen)"

#. R/filter.R: ngettext(nser, "'init' must have %d column", "'init' must have 1 or %d columns",     domain = "R-stats")
#: R/filter.R:0
msgid "'init' must have %d column"
msgid_plural "'init' must have 1 or %d columns"
msgstr[0] "'init' muss %d Spalte haben"
msgstr[1] "'init' muss 1 oder %d Spalten haben"

#. R/models.R: ngettext(nr, "'newdata' had %d row", "'newdata' had %d rows")
#: R/models.R:0
msgid "'newdata' had %d row"
msgid_plural "'newdata' had %d rows"
msgstr[0] "'newdata' hat %d Zeile"
msgstr[1] "'newdata' hat %d Zeilen"

#. R/factanal.R: ngettext(p, "'start' must have %d row", "'start' must have %d rows")
#: R/factanal.R:0
msgid "'start' must have %d row"
msgid_plural "'start' must have %d rows"
msgstr[0] "'start' muss %d Zeile haben"
msgstr[1] "'start' muss %d Zeilen haben"

#. R/ts.R: ngettext(n.start, "'start.innov' is too short: need %d point",     "'start.innov' is too short: need %d points")
#: R/ts.R:0
msgid "'start.innov' is too short: need %d point"
msgid_plural "'start.innov' is too short: need %d points"
msgstr[0] "'start.innov' ist zu kurz: benötige %d Punkt"
msgstr[1] "'start.innov' ist zu kurz: benötige %d Punkte"

#. R/glm.R: ngettext(nobs, "X matrix has rank %d, but only %d observation",     "X matrix has rank %d, but only %d observations")
#: R/glm.R:0
msgid "X matrix has rank %d, but only %d observation"
msgid_plural "X matrix has rank %d, but only %d observations"
msgstr[0] "X Matrix hat Rang %d, aber nur %d Beobachtung"
msgstr[1] "X Matrix hat Rang %d, aber nur %d Beobachtungen"

#. R/nlm.R: ngettext(maxiter, "_NOT_ converged in %d iteration", "_NOT_ converged in %d iterations")
#: R/nlm.R:0
msgid "_NOT_ converged in %d iteration"
msgid_plural "_NOT_ converged in %d iterations"
msgstr[0] "keine Konvergenz nach %d Schritt"
msgstr[1] "keine Konvergenz nach %d Schritten"

#. R/lsfit.R: ngettext(ncx, "but %d variable", "but %d variables")
#: R/lsfit.R:0
msgid "but %d variable"
msgid_plural "but %d variables"
msgstr[0] "aber %d Variable"
msgstr[1] "aber %d Variablen"

#. R/models.R: ngettext(nr2, "but variable found had %d row", "but variables found have %d rows")
#: R/models.R:0
msgid "but variable found had %d row"
msgid_plural "but variables found have %d rows"
msgstr[0] ", aber die gefundenen Variable hat %d Zeile"
msgstr[1] ", aber die gefundenen Variablen haben %d Zeilen"

#. R/kmeans.R: ngettext(iter.max, "did not converge in %d iteration", "did not converge in %d iterations")
#: R/kmeans.R:0
msgid "did not converge in %d iteration"
msgid_plural "did not converge in %d iterations"
msgstr[0] "keine Konvergenz nach %d Schritt"
msgstr[1] "keine Konvergenz nach %d Schritten"

#. R/dendrogram.R: ngettext(length(nms), "extra argument %s is not of class \"%s\"",     "extra arguments %s are not of class \"%s\"")
#: R/dendrogram.R:0
#, fuzzy
msgid "extra argument %s is not of class \"%s\""
msgid_plural "extra arguments %s are not of class \"%s\""
msgstr[0] "zusätzliches Argument %s ist nicht aus Klasse \"%s\""
msgstr[1] "zusätzliche Argumente %s sind nicht aus Klasse \"%s\""

#. R/models.R: ngettext(length(m), "factor %s has new level %s", "factor %s has new levels %s")
#: R/models.R:0
msgid "factor %s has new level %s"
msgid_plural "factor %s has new levels %s"
msgstr[0] "Faktor '%s' hat neue Stufe %s"
msgstr[1] "Faktor '%s' hat neue Stufen %s"

#. R/nls.R: ngettext(sum(np == -1), "fitting parameter %s without any variables",     "fitting parameters %s without any variables")
#: R/nls.R:0
msgid "fitting parameter %s without any variables"
msgid_plural "fitting parameters %s without any variables"
msgstr[0] "Anpassung von Parameter %s ohne jede Variable"
msgstr[1] "Anpassung der Parameter %s ohne jede Variable"

#. R/add.R: ngettext(sum(where == 0), "lower scope has term %s not included in model",     "lower scope has terms %s not included in model")
#: R/add.R:0
msgid "lower scope has term %s not included in model"
msgid_plural "lower scope has terms %s not included in model"
msgstr[0] "unterer Scope hat Term %s, nicht im Modell enthalten"
msgstr[1] "unterer Scope hat Terme %s, nicht im Modell enthalten"

#. R/medpolish.R: ngettext(maxiter, "medpolish() did not converge in %d iteration",     "medpolish() did not converge in %d iterations")
#: R/medpolish.R:0
msgid "medpolish() did not converge in %d iteration"
msgid_plural "medpolish() did not converge in %d iterations"
msgstr[0] "medpolish() hat nicht in %d Schritt konvergiert"
msgstr[1] "medpolish() hat nicht in %d Schritten konvergiert"

#. R/lsfit.R: ngettext(nry, "only %d case", "only %d cases")
#: R/lsfit.R:0
msgid "only %d case"
msgid_plural "only %d cases"
msgstr[0] "nur %d Beobachtung"
msgstr[1] "nur %d Beobachtungen"

#. R/selfStart.R: ngettext(sum(msng), "parameter %s does not occur in the model formula",     "parameters %s do not occur in the model formula")
#: R/selfStart.R:0
msgid "parameter %s does not occur in the model formula"
msgid_plural "parameters %s do not occur in the model formula"
msgstr[0] "Parameter %s kommt in der Modellgleichung nicht vor"
msgstr[1] "Parameter %s kommen in der Modellgleichung nicht vor"

#. R/aov.R: ngettext(length(indError), "there are %d Error terms: only 1 is allowed",     "there are %d Error terms: only 1 is allowed")
#: R/aov.R:0
msgid "there are %d Error terms: only 1 is allowed"
msgid_plural "there are %d Error terms: only 1 is allowed"
msgstr[0] "es gibt %d Fehlerterme: nur 1 erlaubt"
msgstr[1] "es gibt %d Fehlertermen: nur 1 erlaubt"

#. R/factanal.R: ngettext(nc, "unable to optimize from this starting value", "unable to optimize from these starting values")
#: R/factanal.R:0
msgid "unable to optimize from this starting value"
msgid_plural "unable to optimize from these starting values"
msgstr[0] "kann von diesem Startwert aus nicht optimieren"
msgstr[1] "kann von diesen Startwerten aus nicht optimieren"

#. R/aov.R: ngettext(na, "unknown name %s in the 'split' list", "unknown names %s in the 'split' list")
#: R/aov.R:0
msgid "unknown name %s in the 'split' list"
msgid_plural "unknown names %s in the 'split' list"
msgstr[0] "unbekannter Name %s in der 'split' Liste"
msgstr[1] "unbekannte Namen %s in der 'split' Liste"

#. R/nlminb.R: ngettext(length(nap), "unrecognized control element named %s ignored",     "unrecognized control elements named %s ignored")
#. R/nls.R: ngettext(length(nap), "unrecognized control element named %s ignored",     "unrecognized control elements named %s ignored")
#: R/nlminb.R:0 R/nls.R:0
msgid "unrecognized control element named %s ignored"
msgid_plural "unrecognized control elements named %s ignored"
msgstr[0] "unbekanntes Kontrollelement namens %s ignoriert"
msgstr[1] "unbekannte Kontrollelemente namens %s ignoriert"

#. R/add.R: ngettext(sum(where == 0), "upper scope has term %s not included in model",     "upper scope has terms %s not included in model")
#: R/add.R:0
msgid "upper scope has term %s not included in model"
msgid_plural "upper scope has terms %s not included in model"
msgstr[0] "unterer Scope hat Term %s, nicht im Modell enthalten"
msgstr[1] "unterer Scope hat Terme %s, nicht im Modell enthalten"

#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit")
#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit")
#: R/add.R:0
msgid "using the %d/%d row from a combined fit"
msgid_plural "using the %d/%d rows from a combined fit"
msgstr[0] "benutze %d/%d Zeile aus einem kombinierten Fit"
msgstr[1] "benutze %d/%d Zeilen aus einem kombinierten Fit"

#~ msgid ","
#~ msgstr ","

#, fuzzy
#~ msgid "ignored"
#~ msgstr "' ignoriert"

#~ msgid "deprecatedWarning"
#~ msgstr "deprecatedWarning"

#~ msgid "reformulate"
#~ msgstr "reformulate"

#~ msgid ".nknots.smspl() is now exported; use it instead of n.knots()"
#~ msgstr ".nknots.smspl() wird jetzt exportiert; bitte statt n.knots() nutzen"

#~ msgid "package 'MASS' must be installed"
#~ msgstr "Paket 'MASS' muss installiert sein"

#~ msgid "link \"%s\" not available for quasipoisson family; available links are %s"
#~ msgstr "Link \"%s\" ist für die Quasipoisson-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid "link \"%s\" not available for gaussian family; available links are %s"
#~ msgstr "Link \"%s\" ist für die Gauss-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid "link \"%s\" not available for binomial family; available links are %s"
#~ msgstr "Link \"%s\"ist für die Binomial-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid "link \"%s\" not available for quasibinomial family; available links are %s"
#~ msgstr "Link \"%s\" für die Quasibinomial-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid ""
#~ "for the 'quasibinomial' family, y must be a vector of 0 and 1's\n"
#~ "or a 2 column matrix where col 1 is no. successes and col 2 is no. failures"
#~ msgstr ""
#~ "für die 'quasibinomial'-Familie muss y entweder ein Vektor aus Nullen und\n"
#~ "Einsen oder eine zweispaltige Matrix mit Erfolgen in der ersten und Misserfolgen in der zweiten Spalte sein"

#~ msgid "link \"%s\" not available for gamma family; available links are %s"
#~ msgstr "Link \"%s\" ist für die Gamma-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid "link \"%s\" not available for inverse.gaussian family; available links are %s"
#~ msgstr "Link \"%s\" ist für die inverse Gauss-Familie nicht verfügbar; verfügbar sind %s"

#~ msgid "all group levels must be finite"
#~ msgstr "alle Gruppenlevel müssen endlich sein"

#~ msgid "iterTrace ="
#~ msgstr "iterTrace ="

#~ msgid "invalid value of length(x)"
#~ msgstr "unzulässiger Wert von length(x)"

#~ msgid "a limit is missing"
#~ msgstr "es fehlt eine Grenze"

#~ msgid "'invalid value of 'k'"
#~ msgstr "unzulässiger Wert von 'k'"

#~ msgid "'times' is wrong length"
#~ msgstr "'times' hat falsche Länge"

#~ msgid "invalid value of 'k'"
#~ msgstr "unzulässiger Wert von 'k'"

#~ msgid "specified both 'df' and 'cv'; will disregard the latter"
#~ msgstr "sowohl 'df' als auch 'cv' angegeben; letzteres wird ignoriert"

#~ msgid "non-matched further arguments are disregarded"
#~ msgstr "übrige Argumente ohne Entsprechung werden verworfen"

#~ msgid "extra argument %s will be disregarded"
#~ msgid_plural "extra arguments %s will be disregarded"
#~ msgstr[0] "zusätzliches Argument %s wird verworfen"
#~ msgstr[1] "zusätzliche Argumente %s werden verworfen"

#~ msgid "'merge' and 'height' do not fit!"
#~ msgstr "'merge' und 'height' passen nicht"

#~ msgid "invalid dendrogram"
#~ msgstr "unzulässiges Dendrogramm"

#~ msgid "'merge' component in dendrogram must be integer"
#~ msgstr "Die 'merge' Komponente in einem Dendrogramm muss ganzzahlig sein"

#~ msgid "probabilities cannot be negative nor all 0"
#~ msgstr "Wahrscheinlichkeiten können weder negativ noch alle gleich 0 sein"

#~ msgid "'init' must have 1 or %d columns"
#~ msgstr "'init' muss 1 oder %d Spalte(n) haben"

#~ msgid "'deriv' must be between 0 and 2"
#~ msgstr "'deriv' muss zwischen 0 und 2 liegen"

#~ msgid "%d response"
#~ msgid_plural "%d responses"
#~ msgstr[0] "%d Antwortvariable"
#~ msgstr[1] "%d Antwortvariablen"

#~ msgid "character variable '%s' changed to a factor"
#~ msgstr "Zeichenketten-Variable '%s' in Faktor konvertiert"

#~ msgid "variable '%s' converted to a factor"
#~ msgstr "Variable '%s' in Faktor konvertiert"

#~ msgid "Burg's algorithm only implemented for univariate series"
#~ msgstr "Burgs Algorhythmus nur für univariate Zeitreihen implementiert"

#~ msgid "sample is too sparse to find TD"
#~ msgstr "Stichprobe ist zu dünn, um TD zu finden"

#~ msgid "sample is too sparse to find alph2"
#~ msgstr "Stichprobe ist zu dünn, um alph2 zu finden"

#~ msgid "Cannot compute exact p-values with ties"
#~ msgstr "Kann exakte p-Werte bei Bindungen nicht berechnen"

#~ msgid "we require a dendrogram"
#~ msgstr "Dendrogramm benötigt"

#~ msgid "NA's are not allowed in groups or blocks"
#~ msgstr "NAs sind in Gruppen und Blöcken nicht erlaubt"

#~ msgid "y, groups and blocks must have the same length"
#~ msgstr "y, Gruppen und blöcke müssen die sekbe Länge haben"

#~ msgid "cannot compute exact p-values with ties"
#~ msgstr "kann bei Bindungen keinen exakten p-Wert berechnen"

#~ msgid "family '"
#~ msgstr "Familie '"

#~ msgid "need multiple response"
#~ msgstr "benötige multiple Antwort"

#~ msgid "internal error"
#~ msgstr "interner Fehler"

#~ msgid "'proj' is not implemented for \"mlm\" fits"
#~ msgstr "'proj' ist für \"mlm\" Fits nicht implementiert"

#~ msgid "upper scope does not include model term(s) %s"
#~ msgstr "oberer Scope enthält den/die Modellterm(e) %s nicht"

#~ msgid "for the binomial family, y must be a vector of 0 and 1's"
#~ msgstr "für eine Binomial-Familie muss y ein Vektor aus Nullen und Einsen sein"

#~ msgid "for the quasibinomial family, y must be a vector of 0 and 1's"
#~ msgstr "für die Quasibinomialfamilie muss y ein Vektor aus Nullen und Einsen sein"

#~ msgid "using F test with a %s family is inappropriate"
#~ msgstr "F-Test für eine %s-Familie nicht angemessen"

#~ msgid "did not converge in"
#~ msgstr "keine Konvergenz nach"

#~ msgid "iterations"
#~ msgstr "Schritten"

#~ msgid "removed because response differs from"
#~ msgstr "enfernt, da die Response sich von"

#~ msgid "model 1"
#~ msgstr "Modell 1"

#~ msgid "residuals have rank"
#~ msgstr "Residuen hanen Rang"

#~ msgid "<"
#~ msgstr "<"

#~ msgid "_NOT_ converged in"
#~ msgstr "_nicht_ konvergiert in"

#~ msgid "use \"Brent\" or optimize() directly"
#~ msgstr "nutze \"Brent\" oder optimize() direkt"

#~ msgid "hat values (leverages) are all ="
#~ msgstr "Dachwerte (Leverages) sind alle ="

#, fuzzy
#~ msgid "invalid length(xout)"
#~ msgstr "unzulässige Anzahl von Teilnehmern"

#~ msgid "contr*(.., sparse=TRUE) needs package \"Matrix\" correctly installed"
#~ msgstr "contr*(..,sparse=TRUE) benötigt das installierte Paket \"Matrix\""

#~ msgid "this should not happen"
#~ msgstr "dies sollte nicht passieren"

#~ msgid "algorithm did not converge"
#~ msgstr "Algorithmus konvergierte nicht"

#~ msgid "incorrect specification of 'table' or 'start'"
#~ msgstr "falsche Spezifikation von 'table' oder 'start'"

#~ msgid "ifault=%d. This should not happen"
#~ msgstr "ifault=%d. Das sollte es nicht geben"

#~ msgid "insufficient observations"
#~ msgstr "nicht genug Beobachtungen"

#~ msgid "'vec' contains NAs"
#~ msgstr "'vec' enthält NAs"

#~ msgid "'vec' must be sorted non-decreasingly"
#~ msgstr "'vec' muss nicht-fallend sortiert sein"

#, fuzzy
#~ msgid "invalid length(vec)"
#~ msgstr "unzulässige Anzahl von Teilnehmern"

#~ msgid "No starting values specified for some parameters."
#~ msgstr "Für einige Parameter keine Startwerte angegeben"

#~ msgid "Initializing"
#~ msgstr "Initialisiere"

#~ msgid "to '1.'."
#~ msgstr "auf '1.'."

#~ msgid "Consider specifying 'start' or using a selfStart model"
#~ msgstr "Bitte evtl. 'start' angeben oder ein selbst startendes Modell nutzen"

#~ msgid "wrong number of predictors"
#~ msgstr "falsche Anzahl Prediktoren"

#, fuzzy
#~ msgid "invalid value oflength(x)"
#~ msgstr "unzulässige Clustring-Methode"

#~ msgid "extra arguments"
#~ msgstr "zusätzliche Argumente"

#~ msgid "are just disregarded."
#~ msgstr "werden einfach ignoriert"

#~ msgid "cannot compute correct p-values with ties"
#~ msgstr "kann bei Bindungen nicht die korrekten p-Werte berechnen"

#~ msgid "'FUN' must always return a scalar"
#~ msgstr "'FUN' muss immer einen Skalar zurückgeben"

#~ msgid "model order:"
#~ msgstr "Modellordnung:"

#~ msgid "singularities in the computation of the projection matrix"
#~ msgstr "singlularitäten in der Berechnung der Projektionsmatrix"

#~ msgid "results are only valid up to model order"
#~ msgstr "Resultate nur valide bis zur Modellordnung"

#~ msgid "invalid 'method': %s"
#~ msgstr "unzulässige 'method': %s"

#~ msgid "'newdata' does not contain the variables needed"
#~ msgstr "'newdata' enhält nicht die benötigten Variablen"
