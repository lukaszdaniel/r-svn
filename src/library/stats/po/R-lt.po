msgid ""
msgstr ""
"Project-Id-Version: stats 4.1.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2025-06-19 20:07\n"
"PO-Revision-Date: 2021-10-15 18:44+0200\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: lt\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.1\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && (n%100<11 || n%100>19) ? 0 : n%10>=2 && n%10<=9 && (n%100<11 || n%100>19) ? 1 : 2);\n"

#. R/xtabs.R: gettextf("%s applies only to two-way tables", "xtabs(*, sparse=TRUE)")
#: R/xtabs.R:0
msgid "%s applies only to two-way tables"
msgstr "%s taikoma tik dvikryptėms lentelėms"

#. R/family.R: gettextf("%s link not recognised", sQuote(link))
#: R/family.R:0
msgid "%s link not recognised"
msgstr "%s saitas nežinomas"

#. R/stl.R: gettextf("%s must be 0 or 1", degname)
#: R/stl.R:0
msgid "%s must be 0 or 1"
msgstr "%s turi būti 0 arba 1"

#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/xtabs.R: gettextf("%s needs package 'Matrix' correctly installed", "xtabs(*, sparse=TRUE)")
#: R/contrast.R:0 R/xtabs.R:0
msgid "%s needs package 'Matrix' correctly installed"
msgstr "%s reikia teisingai įdiegto 'Matrix' paketo"

#. R/lm.R: gettextf("%s: NAs produced for non-estimable cases", msg1)
#: R/lm.R:0
msgid "%s: NAs produced for non-estimable cases"
msgstr ""

#. R/lm.R: gettextf("%s; attr(*, \"non-estim\") has doubtful cases", msg1)
#: R/lm.R:0
msgid "%s; attr(*, \"non-estim\") has doubtful cases"
msgstr ""

#. R/lm.R: gettextf("%s; consider predict(., rankdeficient=\"NA\")", msg1)
#: R/lm.R:0
msgid "%s; consider predict(., rankdeficient=\"NA\")"
msgstr ""

#. R/nlsFunc.R: gettextf("'%s' cannot be of mode '%s'", deparse1(substitute(object)),     mode(object))
#: R/nlsFunc.R:0
msgid "'%s' cannot be of mode '%s'"
msgstr "'%s' negali būti '%s' tipo"

#. R/models.R: gettextf("'%s' must be a character string", "response")
#. R/reshape.R: gettextf("'%s' must be a character string", "sep")
#: R/models.R:0 R/reshape.R:0
#, fuzzy
msgid "'%s' must be a character string"
msgstr "'sep' turi būti simbolių eilutė"

#. R/power.R: gettextf("'%s' must be numeric in [0, 1]", deparse1(substitute(x)))
#: R/power.R:0
#, fuzzy
msgid "'%s' must be numeric in [0, 1]"
msgstr "'sig.level' turi būti skaitinis [0,1]"

#. R/addmargins.R: stop("'A' must be an array or table")
#: R/addmargins.R:0
msgid "'A' must be an array or table"
msgstr "'A' turi būti masyvas arba lentelė"

#. R/dendrogram.R: stop("'ColSideColors' must be a character vector of length ncol(x)")
#: R/dendrogram.R:0
msgid "'ColSideColors' must be a character vector of length ncol(x)"
msgstr "'ColSideColors' turi būti ncol(x) ilgio tekstinis vektorius"

#. R/anova.R: stop("'P.values' is TRUE, but 'has.Pvalue' is not")
#: R/anova.R:0
msgid "'P.values' is TRUE, but 'has.Pvalue' is not"
msgstr "'P.values' yra TRUE, bet 'has.Pvalue' nėra"

#. R/dendrogram.R: stop("'RowSideColors' must be a character vector of length nrow(x)")
#: R/dendrogram.R:0
msgid "'RowSideColors' must be a character vector of length nrow(x)"
msgstr "'RowSideColors' turi būti nrow(x) ilgio tekstinis vektorius"

#. R/poisson.test.R: stop("'T' must be nonnegative")
#: R/poisson.test.R:0
msgid "'T' must be nonnegative"
msgstr "'T' turi būti neneigiamas"

#. R/cor.R: stop("'V' is not a square numeric matrix")
#: R/cor.R:0
msgid "'V' is not a square numeric matrix"
msgstr "'V' nėra kvadratiė skaitinė matrica"

#. R/dendrogram.R: stop("'X' is not a dendrogram")
#: R/dendrogram.R:0
msgid "'X' is not a dendrogram"
msgstr "'X' nėra dendrograma"

#. R/lsfit.R: warning("'X' matrix was collinear")
#: R/lsfit.R:0
msgid "'X' matrix was collinear"
msgstr "'X' matrica buvo kolineari"

#. R/ARMAtheory.R: stop("'acf' must be of length two or more")
#: R/ARMAtheory.R:0
msgid "'acf' must be of length two or more"
msgstr "'acf' ilgis turi būti du ar daugiau"

#. R/smspline.R: warning("'all.knots' is TRUE; 'nknots' specification is disregarded")
#: R/smspline.R:0
msgid "'all.knots' is TRUE; 'nknots' specification is disregarded"
msgstr "'all.knots' yra TRUE; neatsižvelgiama į 'nknots' specifikaciją"

#. R/smspline.R: warning("'all.knots' is vector of knots; 'nknots' specification is disregarded")
#: R/smspline.R:0
msgid "'all.knots' is vector of knots; 'nknots' specification is disregarded"
msgstr "'all.knots' – mazgų vektorius; neatsižvelgiama į 'nknots' specifikaciją"

#. R/HoltWinters.R: stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
#: R/HoltWinters.R:0
msgid "'alpha', 'beta' and 'gamma' must be within the unit interval"
msgstr "'alpha', 'beta' ir 'gamma' turi būti vieneto intervale"

#. R/nls.R: stop("'anova' is only defined for sequences of \"nls\" objects")
#: R/nls.R:0
msgid "'anova' is only defined for sequences of \"nls\" objects"
msgstr "'anova' apibrėžta tik \"nls\" objektų sekoms"

#. R/anova.R: stop("'anova' object must have colnames")
#: R/anova.R:0
msgid "'anova' object must have colnames"
msgstr "'anova' objektas privalo turėti colnames"

#. R/approx.R: stop("'approx' requires n >= 1")
#: R/approx.R:0
msgid "'approx' requires n >= 1"
msgstr "'approx' reikia n >= 1"

#. R/ts.R: stop("'ar' part of model is not stationary")
#: R/ts.R:0
msgid "'ar' part of model is not stationary"
msgstr "'ar' modulio dalis nėra pastovi"

#. R/density.R: stop("'bw' is not positive.")
#: R/density.R:0
msgid "'bw' is not positive."
msgstr "'bw' nėra teigiama."

#. R/aggregate.R: stop("'by' must be a list")
#: R/aggregate.R:0
msgid "'by' must be a list"
msgstr "'by' turi būti sąrašas"

#. R/kmeans.R: stop("'centers' must be a number or a matrix")
#: R/kmeans.R:0
msgid "'centers' must be a number or a matrix"
msgstr "'centers' turi būti skaičius arba matrica"

#. R/filter.R: stop("'circular' must be logical and not NA")
#: R/filter.R:0
msgid "'circular' must be logical and not NA"
msgstr "'circular' turi būti loginė reikšmė arba ne NA"

#. R/kernel.R: stop("'coef' does not have the correct length")
#: R/kernel.R:0
msgid "'coef' does not have the correct length"
msgstr "'coef' ilgis nėra teisingas"

#. R/kernel.R: stop("'coef' must be a vector")
#: R/kernel.R:0
msgid "'coef' must be a vector"
msgstr "'coef' turi būti vektorius"

#. R/aov.R: stop("'coef' must define a contrast, i.e., sum to 0")
#: R/aov.R:0
msgid "'coef' must define a contrast, i.e., sum to 0"
msgstr "'coef' turi apibrėžti priešingybę, t. y. suma į 0"

#. R/aov.R: stop("'coef' must have same length as 'contrast.obj'")
#: R/aov.R:0
msgid "'coef' must have same length as 'contrast.obj'"
msgstr "'coef' turi būti tokio paties ilgio kaip 'contrast.obj'"

#. R/ftable.R: stop("'col.vars' missing or incorrect")
#: R/ftable.R:0
msgid "'col.vars' missing or incorrect"
msgstr "nėra 'col.vars' arba neteisingas"

#. R/qqplot.R: stop("'conf.level' is not a probability")
#: R/qqplot.R:0
msgid "'conf.level' is not a probability"
msgstr ""

#. R/ansari.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/binom.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/cor.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/fisher.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/mantelhaen.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/prop.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/t.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/var.test.R: stop("'conf.level' must be a single number between 0 and 1")
#. R/wilcox.test.R: stop("'conf.level' must be a single number between 0 and 1")
#: R/ansari.test.R:0 R/binom.test.R:0 R/cor.test.R:0 R/fisher.test.R:0
#: R/mantelhaen.test.R:0 R/prop.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "'conf.level' must be a single number between 0 and 1"
msgstr "'conf.level' turi būti vienas skaičius tarp 0 ir 1"

#. R/models.R: stop("'contrasts.arg' argument must be named")
#: R/models.R:0
msgid "'contrasts.arg' argument must be named"
msgstr "'control' argumentas turi būti įvardytas sąrašas"

#. R/nlminb.R: stop("'control' argument must be a named list")
#. R/nls.R: stop("'control' argument must be a named list")
#: R/nlminb.R:0 R/nls.R:0
msgid "'control' argument must be a named list"
msgstr "'control' argumentas turi būti įvardytas sąrašas"

#. R/factanal.R: stop("'covmat' is not a valid covariance list")
#. R/princomp.R: stop("'covmat' is not a valid covariance list")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is not a valid covariance list"
msgstr "'covmat' nėra tinkamas kovariacijos sąrašas"

#. R/factanal.R: stop("'covmat' is of unknown type")
#. R/princomp.R: stop("'covmat' is of unknown type")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is of unknown type"
msgstr "'covmat' tipas nežinomas"

#. R/model.tables.R: stop("'cterms' argument must match terms in model object")
#: R/model.tables.R:0
msgid "'cterms' argument must match terms in model object"
msgstr "'cterms' argumentas turi atitikti terminus modelio objekte"

#. R/symnum.R: gettext("'cutpoints' must be unique in 0 < cuts < 1, but are = ")
#: R/symnum.R:0
msgid "'cutpoints' must be unique in 0 < cuts < 1, but are ="
msgstr "'cutpoints' turi būti unikalus 0 < cuts < 1, bet yra ="

#. R/symnum.R: gettext("'cutpoints' must be unique, but are = ")
#: R/symnum.R:0
msgid "'cutpoints' must be unique, but are ="
msgstr "'cutpoints' turi būti unikalus, bet yra ="

#. R/smspline.R: stop("'cv' must not be NA when 'df' is specified")
#: R/smspline.R:0
msgid "'cv' must not be NA when 'df' is specified"
msgstr "'cv' neturi būti NA, kai nurodyta 'df'"

#. R/models.R: stop("'data' must be a data.frame, environment, or list")
#: R/models.R:0
#, fuzzy
msgid "'data' must be a data.frame, environment, or list"
msgstr "'data' turi būti sąrašas ar aplinka"

#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#: R/models.R:0
msgid "'data' must be a data.frame, not a matrix or an array"
msgstr "'data' turi būti data.frame, ne matrica ar masyvas"

#. R/nls.R: stop("'data' must be a list or an environment")
#: R/nls.R:0
msgid "'data' must be a list or an environment"
msgstr "'data' turi būti sąrašas ar aplinka"

#. R/loess.R: stop("'degree' must be 0, 1 or 2")
#: R/loess.R:0
msgid "'degree' must be 0, 1 or 2"
msgstr "'degree' turi būti 0, 1 arba 2"

#. R/contr.poly.R: stop("'degree' must be at least 1")
#: R/contr.poly.R:0
msgid "'degree' must be at least 1"
msgstr "'degree' turi būti mažiausiai 1"

#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#: R/contr.poly.R:0
msgid "'degree' must be less than number of unique points"
msgstr "'degree' turi būti mažesnis negu unikalių taškų skaičius"

#. R/splinefun.R: stop("'deriv' must be between 0 and 3")
#: R/splinefun.R:0
msgid "'deriv' must be between 0 and 3"
msgstr "'deriv' turi būti tarp 0 ir 3"

#. R/ts.R: stop("'end' must be a whole number of cycles after 'start'")
#: R/ts.R:0
msgid "'end' must be a whole number of cycles after 'start'"
msgstr "'end' turi būti sveikas ciklų skaičius po 'start'"

#. R/ts.R: warning("'end' value not changed")
#: R/ts.R:0
msgid "'end' value not changed"
msgstr "'end' reikšmė nekeičiama"

#. R/glm.R: stop("'family' argument seems not to be a valid family object",     call. = FALSE)
#: R/glm.R:0
msgid "'family' argument seems not to be a valid family object"
msgstr "atrodo, kad 'family' argumentas nėra tinkamos šeimos objektas"

#. R/glm.R: stop("'family' not recognized")
#: R/glm.R:0
msgid "'family' not recognized"
msgstr "'family' nežinomas"

#. R/ftable.R: stop("'file' must be a character string or connection")
#: R/ftable.R:0
msgid "'file' must be a character string or connection"
msgstr "'file' turi būti simbolių eilutė ar ryšys"

#. R/filter.R: stop("'filter' is longer than time series")
#: R/filter.R:0
msgid "'filter' is longer than time series"
msgstr "filter' yra ilgesnis negu laiko eilutė"

#. R/ftable.R: stop("'formula' has '.' in both left and right hand sides")
#: R/ftable.R:0
msgid "'formula' has '.' in both left and right hand sides"
msgstr "'formula' turi '.' kairėje ir dešinėje pusėse"

#. R/ansari.test.R: stop("'formula' missing or incorrect")
#. R/bartlett.test.R: stop("'formula' missing or incorrect")
#. R/fligner.test.R: stop("'formula' missing or incorrect")
#. R/friedman.test.R: stop("'formula' missing or incorrect")
#. R/ftable.R: stop("'formula' missing or incorrect")
#. R/kruskal.test.R: stop("'formula' missing or incorrect")
#. R/ks.test.R: stop("'formula' missing or incorrect")
#. R/mood.test.R: stop("'formula' missing or incorrect")
#. R/oneway.test.R: stop("'formula' missing or incorrect")
#. R/quade.test.R: stop("'formula' missing or incorrect")
#. R/t.test.R: stop("'formula' missing or incorrect")
#. R/var.test.R: stop("'formula' missing or incorrect")
#. R/wilcox.test.R: stop("'formula' missing or incorrect")
#. R/xtabs.R: stop("'formula' missing or incorrect")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/fligner.test.R:0 R/friedman.test.R:0
#: R/ftable.R:0 R/kruskal.test.R:0 R/ks.test.R:0 R/mood.test.R:0
#: R/oneway.test.R:0 R/quade.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0 R/xtabs.R:0
msgid "'formula' missing or incorrect"
msgstr "trūksta 'formula' arba ji neteisinga"

#. R/cor.test.R: stop("'formula' missing or invalid")
#: R/cor.test.R:0
msgid "'formula' missing or invalid"
msgstr "trūksta 'formula' arba ji neteisinga"

#. R/ftable.R: stop("'formula' must have both left and right hand sides")
#: R/ftable.R:0
msgid "'formula' must have both left and right hand sides"
msgstr "'formula' privalo turėti kairę ir dešinę puses"

#. R/bartlett.test.R: stop("'formula' should be of the form response ~ group")
#. R/fligner.test.R: stop("'formula' should be of the form response ~ group")
#. R/kruskal.test.R: stop("'formula' should be of the form response ~ group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'formula' should be of the form response ~ group"
msgstr "'formula' turi būti atsakymo forma ~ grupė"

#. R/ts.R: stop("'frequency' and 'deltat' are both not NULL and are inconsistent")
#: R/ts.R:0
msgid "'frequency' and 'deltat' are both not NULL and are inconsistent"
msgstr "'frequency' ir 'deltat' nėra NULL pateikiami ir nenuoseklūs"

#. R/ts.R: warning("'frequency' not changed")
#: R/ts.R:0
msgid "'frequency' not changed"
msgstr "'frequency' nepasikeitė"

#. R/dendrogram.R: gettextf("'height' must be at least %g, the maximal height of its components",     h.max)
#: R/dendrogram.R:0
msgid "'height' must be at least %g, the maximal height of its components"
msgstr "'height' turi būti mažiausiai %g, jo komponento maksimalus aukštis"

#. R/fisher.test.R: warning("'hybrid' is ignored for a 2 x 2 table")
#: R/fisher.test.R:0
msgid "'hybrid' is ignored for a 2 x 2 table"
msgstr "'hybrid' yra ignoruojamas 2 x 2 lentelei"

#. R/plot.lm.R: gettextf("'id.n' must be in {1,..,%d}", n)
#: R/plot.lm.R:0
msgid "'id.n' must be in {1,..,%d}"
msgstr "'id.n' turi būti {1,..,%d}"

#. R/reshape.R: stop("'idvar' must uniquely identify records")
#: R/reshape.R:0
msgid "'idvar' must uniquely identify records"
msgstr ""

#. R/arima.R: stop("'init' is of the wrong length")
#. R/arma0.R: stop("'init' is of the wrong length")
#: R/arima.R:0 R/arma0.R:0
msgid "'init' is of the wrong length"
msgstr "blogas 'init' ilgis"

#. R/nlm.R: stop("'interval' must be a vector of length 2")
#: R/nlm.R:0
msgid "'interval' must be a vector of length 2"
msgstr "'interval' turi būti 2 ilgio vektorius"

#. R/kmeans.R: stop("'iter.max' must be positive")
#: R/kmeans.R:0
msgid "'iter.max' must be positive"
msgstr "'iter.max' turi būti teigiamas"

#. R/identify.hclust.R: stop("'k' and 'h' must be a scalar")
#: R/identify.hclust.R:0
msgid "'k' and 'h' must be a scalar"
msgstr "'k' ir 'h' turi būti skaliaras"

#. R/runmed.R: gettextf("'k' is bigger than 'n'!  Changing 'k' to %d", k <- as.integer(1 +     2 * ((n - 1)%/%2)))
#: R/runmed.R:0
msgid "'k' is bigger than 'n'!  Changing 'k' to %d"
msgstr "'k' yra didesnis negu 'n'! Keitimas 'k' į %d"

#. R/kernel.R: stop("'k' is not a kernel")
#: R/kernel.R:0
msgid "'k' is not a kernel"
msgstr "'k' nėra branduolys"

#. R/lag.R: warning("'k' is not an integer")
#: R/lag.R:0
msgid "'k' is not an integer"
msgstr "'k' nėra sveikasis skaičius"

#. R/cmdscale.R: stop("'k' must be in {1, 2, ..  n - 1}")
#: R/cmdscale.R:0
msgid "'k' must be in {1, 2, ..  n - 1}"
msgstr "'k' turi būti {1, 2, ..  n - 1}"

#. R/runmed.R: gettextf("'k' must be odd!  Changing 'k' to %d", k <- as.integer(1 +     2 * (k%/%2)))
#: R/runmed.R:0
msgid "'k' must be odd!  Changing 'k' to %d"
msgstr "'k' turi būti nelyginis! Keitimas 'k' į %d"

#. R/runmed.R: stop("'k' must be positive")
#: R/runmed.R:0
msgid "'k' must be positive"
msgstr "'k' turi būti teigiamas"

#. R/kernel.R: stop("'kernapply' is not available for object 'x'")
#: R/kernel.R:0
msgid "'kernapply' is not available for object 'x'"
msgstr "'kernapply' negalimas 'x' objektui"

#. R/acf.R: stop("'lag.max' must be at least 0")
#: R/acf.R:0
msgid "'lag.max' must be at least 0"
msgstr "'lag.max' turi būti mažiausiai 0"

#. R/acf.R: stop("'lag.max' must be at least 1")
#: R/acf.R:0
msgid "'lag.max' must be at least 1"
msgstr "'lag.max' turi būti mažiausiai 1"

#. R/reshape.R: stop("'lengths(varying)' must all match 'length(times)'")
#: R/reshape.R:0
msgid "'lengths(varying)' must all match 'length(times)'"
msgstr "'lengths(varying)' turi atitikti 'length(times)'"

#. R/logLik.R: stop("'logLik.lm' does not support multiple responses")
#: R/logLik.R:0
msgid "'logLik.lm' does not support multiple responses"
msgstr "'logLik.lm' nepalaiko kelių atsakymų"

#. R/mad.R: stop("'low' and 'high' cannot be both TRUE")
#: R/mad.R:0
msgid "'low' and 'high' cannot be both TRUE"
msgstr "abu 'low' ir 'high' negali būti TRUE"

#. R/optim.R: stop("'lower' and 'upper' must be finite values")
#: R/optim.R:0
msgid "'lower' and 'upper' must be finite values"
msgstr "'lower' ir 'upper' turi būti baigtinės reikšmės"

#. R/kernel.R: stop("'m' is less than 1")
#: R/kernel.R:0
msgid "'m' is less than 1"
msgstr "'m' yra mažiau negu 1"

#. R/kernel.R: stop("'m' must be numeric with non-negative integers")
#: R/kernel.R:0
msgid "'m' must be numeric with non-negative integers"
msgstr "'m' turi būti skaitinis su neneigiamais sveikaisiais skaičiais"

#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#: R/termplot.R:0
msgid "'main' must be TRUE, FALSE, NULL or character (vector)."
msgstr "main' turi būti TRUE, FALSE, NULL arba simbolis (vektorius)."

#. R/loglin.R: stop("'margin' must contain names or numbers corresponding to 'table'")
#: R/loglin.R:0
msgid "'margin' must contain names or numbers corresponding to 'table'"
msgstr "'margin' turi turėti vardus ar skaičius atitinkančius 'table'"

#. R/dendrogram.R: stop("'margins' must be a numeric vector of length 2")
#: R/dendrogram.R:0
msgid "'margins' must be a numeric vector of length 2"
msgstr "'margins' turi būti ilgio 2 skaitinis vektorius"

#. R/mlm.R: stop("'mlm' objects with weights are not supported")
#: R/mlm.R:0
msgid "'mlm' objects with weights are not supported"
msgstr "'mlm' objektai su svoriais nėra palaikomi"

#. R/ts.R: stop("'model$order' must be of length 3")
#: R/ts.R:0
msgid "'model$order' must be of length 3"
msgstr "'model$order' ilgis turi būti 3"

#. R/ts.R: stop("'model' must be list")
#: R/ts.R:0
msgid "'model' must be list"
msgstr "'model' turi būti sąrašas"

#. R/model.tables.R: stop("'model.tables' is not implemented for multiple responses")
#: R/model.tables.R:0
msgid "'model.tables' is not implemented for multiple responses"
msgstr "'model.tables' netaikomas keliems atsakymams"

#. R/t.test.R: stop("'mu' must be a single number")
#. R/wilcox.test.R: stop("'mu' must be a single number")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'mu' must be a single number"
msgstr "'mu' turi būti vienas skaičius"

#. R/fisher.test.R: stop("'mult' must be integer >= 2, typically = 30")
#: R/fisher.test.R:0
msgid "'mult' must be integer >= 2, typically = 30"
msgstr "'mult' turi būti sveikasis skaičius >= 2, paprastai = 30"

#. R/binom.test.R: stop("'n' must be a positive integer >= 'x'")
#: R/binom.test.R:0
msgid "'n' must be a positive integer >= 'x'"
msgstr "'n' turi būti teigiamas sveikasis skaičius >= 'x'"

#. R/ts.R: stop("'n' must be strictly positive")
#: R/ts.R:0
msgid "'n' must be strictly positive"
msgstr "'n' turi būti griežtai teigiamas"

#. R/ar.R: stop("'n.ahead' must be at least 1")
#: R/ar.R:0
msgid "'n.ahead' must be at least 1"
msgstr "'n.ahead' turi būti mažiausiai 1"

#. R/fisher.test.R: stop("'names(hybridPars)' should be NULL or be identical to the default's")
#: R/fisher.test.R:0
#, fuzzy
msgid "'names(hybridPars)' should be NULL or be identical to the default's"
msgstr "names(hybridPars) turi būti NULL arba būti identiški numatytiesiems"

#. R/prcomp.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#. R/princomp-add.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have named columns matching one or more of the original columns"
msgstr "'newdata' neturi įvardytų stulpelių, atitinkančių vieną ar daugiau pradinių stulpelių"

#. R/prcomp.R: stop("'newdata' does not have the correct number of columns")
#. R/princomp-add.R: stop("'newdata' does not have the correct number of columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have the correct number of columns"
msgstr "'newdata' neturi teisingo stulpelių skaičiaus"

#. R/prcomp.R: stop("'newdata' must be a matrix or data frame")
#. R/princomp-add.R: stop("'newdata' must be a matrix or data frame")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' must be a matrix or data frame"
msgstr "'newdata' turi būti matrica arba duomenų sistema"

#. R/smspline.R: stop("'nknots' must be at least 1")
#: R/smspline.R:0
msgid "'nknots' must be at least 1"
msgstr "'nknots' turi būti mažiausiai 1"

#. R/smspline.R: stop("'nknots' must be numeric (in {1,..,n})")
#: R/smspline.R:0
msgid "'nknots' must be numeric (in {1,..,n})"
msgstr "'nknots' turi būti skaitinis ({1,..,n})"

#. R/ppr.R: stop("'nterms' is missing with no default")
#: R/ppr.R:0
msgid "'nterms' is missing with no default"
msgstr "'nterms' yra trūkstamas ir nenumatytasis"

#. R/aov.R: stop("'object' does not include an error 'qr' component")
#: R/aov.R:0
msgid "'object' does not include an error 'qr' component"
msgstr "'object' neapima klaidos 'qr' komponento"

#. R/lm.R: stop("'object' has no 'effects' component")
#: R/lm.R:0
msgid "'object' has no 'effects' component"
msgstr "'object' neturi 'effects' komponento"

#. R/models.R: stop("'offset' must be numeric")
#: R/models.R:0
msgid "'offset' must be numeric"
msgstr "'offset' turi būti skaitinis"

#. R/fisher.test.R: stop("'or' must be a single number between 0 and Inf")
#: R/fisher.test.R:0
msgid "'or' must be a single number between 0 and Inf"
msgstr "'or' turi būti vienas skaičius tarp 0 ir INF"

#. R/arima.R: stop("'order' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("'order' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
msgid "'order' must be a non-negative numeric vector of length 3"
msgstr "'order' turi būti neneigiamas skaitinis vektorius, kurio ilgis 3"

#. R/dendrogram.R: stop("'order.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'order.dendrogram' requires a dendrogram"
msgstr "'order.dendrogram' reikalinga dendrograma"

#. R/ar.R: stop("'order.max' must be < 'n.obs'")
#: R/ar.R:0
msgid "'order.max' must be < 'n.obs'"
msgstr "'order.max' turi būti < 'n.obs'"

#. R/ar.R: stop("'order.max' must be < 'n.used'")
#: R/ar.R:0
msgid "'order.max' must be < 'n.used'"
msgstr "'order.max' turi būti < 'n.used'"

#. R/ar.R: stop("'order.max' must be >= 0")
#: R/ar.R:0
msgid "'order.max' must be >= 0"
msgstr "'order.max' turi būti >= 0"

#. R/ar.R: stop("'order.max' must be >= 1")
#: R/ar.R:0
msgid "'order.max' must be >= 1"
msgstr "'order.max' turi būti >= 1"

#. R/binom.test.R: stop("'p' must be a single number between 0 and 1")
#: R/binom.test.R:0
msgid "'p' must be a single number between 0 and 1"
msgstr "'p' turi būti vienas skaičius tarp 0 ir 1"

#. R/spectrum.R: stop("'p' must be between 0 and 0.5")
#: R/spectrum.R:0
msgid "'p' must be between 0 and 0.5"
msgstr "'p' turi būti tarp 0 ir 0.5"

#. R/prop.test.R: stop("'p' must have the same length as 'x' and 'n'")
#: R/prop.test.R:0
msgid "'p' must have the same length as 'x' and 'n'"
msgstr "'p' privalo būti tokio paties ilgio kaip 'x' ir 'n'"

#. R/nls-profile.R: stop("'params' has wrong length")
#: R/nls-profile.R:0
msgid "'params' has wrong length"
msgstr "blogas 'params' ilgis"

#. R/stepfun.R: stop("'plot.stepfun' called with wrong type of argument 'x'")
#: R/stepfun.R:0
msgid "'plot.stepfun' called with wrong type of argument 'x'"
msgstr "'plot.stepfun' iškviestas su blogu 'x' argumento tipu"

#. R/ppr.R: stop("'ppr' applies only to numerical variables")
#: R/ppr.R:0
msgid "'ppr' applies only to numerical variables"
msgstr "'ppr' naudojama tik skaitiniams kintamiesiems"

#. R/princomp.R: stop("'princomp' can only be used with more units than variables")
#: R/princomp.R:0
msgid "'princomp' can only be used with more units than variables"
msgstr "'princomp' gali būti naudojamas su daugiau vienetų negu kintamųjų"

#. R/nlm.R: stop("'print.level' must be in {0,1,2}")
#: R/nlm.R:0
msgid "'print.level' must be in {0,1,2}"
msgstr "'print.level' turi būti {0,1,2}"

#. R/distn.R: stop("'prob' and 'mu' both specified")
#: R/distn.R:0
msgid "'prob' and 'mu' both specified"
msgstr "nurodyti abu 'prob' ir 'mu'"

#. R/quantile.R: stop("'probs' outside [0,1]")
#: R/quantile.R:0
msgid "'probs' outside [0,1]"
msgstr "'probs' už [0,1]"

#. R/proj.R: stop("'proj' is not implemented for multiple responses")
#: R/proj.R:0
msgid "'proj' is not implemented for multiple responses"
msgstr "'proj' netaikoma keliems atsakymams"

#. R/kernel.R: stop("'r' is less than 0")
#: R/kernel.R:0
msgid "'r' is less than 0"
msgstr "'r' yra mažesnis negu 0"

#. R/kernel.R: stop("'r' is less than 1")
#: R/kernel.R:0
msgid "'r' is less than 1"
msgstr "'r' yra mažesnis negu 1"

#. R/poisson.test.R: stop("'r' must be a single positive number")
#: R/poisson.test.R:0
msgid "'r' must be a single positive number"
msgstr "'r' turi būti vienas teigiamas skaičius"

#. R/var.test.R: stop("'ratio' must be a single positive number")
#: R/var.test.R:0
msgid "'ratio' must be a single positive number"
msgstr "'ratio' turi būti vienas teigiamas skaičius"

#. R/relevel.R: stop("'ref' must be an existing level")
#: R/relevel.R:0
msgid "'ref' must be an existing level"
msgstr "'ref' turi būti esamo lygio"

#. R/relevel.R: stop("'ref' must be of length one")
#: R/relevel.R:0
msgid "'ref' must be of length one"
msgstr "'ref' ilgis turi būti 1"

#. R/relevel.R: stop("'relevel' only for (unordered) factors")
#: R/relevel.R:0
msgid "'relevel' only for (unordered) factors"
msgstr "'relevel' tik (nesutvarkytiems) faktoriams"

#. R/relevel.R: stop("'relevel' only for unordered factors")
#: R/relevel.R:0
msgid "'relevel' only for unordered factors"
msgstr "'relevel' tik nesutvarkytiems faktoriams"

#. R/dendrogram.R: stop("'reorder.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'reorder.dendrogram' requires a dendrogram"
msgstr "'reorder.dendrogram' reikia dendrogramos"

#. R/ftable.R: stop("'row.var.names' missing")
#: R/ftable.R:0
msgid "'row.var.names' missing"
msgstr "trūksta 'row.var.names'"

#. R/acf.R: stop("'sampleT' and 'nser' must be integer")
#: R/acf.R:0
msgid "'sampleT' and 'nser' must be integer"
msgstr "'sampleT' ir 'nser' turi būti sveikasis skaičius"

#. R/biplot.R: warning("'scale' is outside [0, 1]")
#: R/biplot.R:0
msgid "'scale' is outside [0, 1]"
msgstr "'scale' už [0, 1]"

#. R/contr.poly.R: stop("'scores' argument is of the wrong length")
#: R/contr.poly.R:0
msgid "'scores' argument is of the wrong length"
msgstr "blogas 'scores' argumento ilgis"

#. R/contr.poly.R: stop("'scores' must all be different numbers")
#: R/contr.poly.R:0
msgid "'scores' must all be different numbers"
msgstr "'scores' turi būti skirtingi skaičiai"

#. R/ar.R: warning("'se.fit' not yet implemented for multivariate models")
#: R/ar.R:0
msgid "'se.fit' not yet implemented for multivariate models"
msgstr "'se.fit' dar neįdiegtas daugiamačiams modeliams"

#. R/arima.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
msgid "'seasonal$order' must be a non-negative numeric vector of length 3"
msgstr "'seasonal$order' turi būti neneigiamas skaitinis vektorius, kurio ilgis 3"

#. R/arima.R: stop("'seasonal' is neither a list with component 'order' nor a numeric vector of length 3")
#. R/arma0.R: stop("'seasonal' is neither a list with component 'order' nor a numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
#, fuzzy
msgid "'seasonal' is neither a list with component 'order' nor a numeric vector of length 3"
msgstr "'seasonal' turi būti sąrašas su komponentu 'order'"

#. R/arima.R: stop("'seasonal' must be a list with component 'order'")
#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#: R/arima.R:0 R/arma0.R:0
msgid "'seasonal' must be a list with component 'order'"
msgstr "'seasonal' turi būti sąrašas su komponentu 'order'"

#. R/smspline.R: stop("'span' must be between 0 and 1.")
#: R/smspline.R:0
msgid "'span' must be between 0 and 1."
msgstr "'span' turi būti tarp 0 ir 1."

#. R/smspline.R: stop("'spar' must be of length 1")
#: R/smspline.R:0
msgid "'spar' must be of length 1"
msgstr "'spar' ilgis turi būti 1"

#. R/spline.R: stop("'spline' requires n >= 1")
#: R/spline.R:0
msgid "'spline' requires n >= 1"
msgstr "'spline' reikia n >= 1"

#. R/ts.R: stop("'start' > 'end'")
#: R/ts.R:0
msgid "'start' > 'end'"
msgstr "'start' > 'end'"

#. R/loglin.R: stop("'start' and 'table' must be same length")
#: R/loglin.R:0
msgid "'start' and 'table' must be same length"
msgstr "'start' ir 'table' turi būti tokio paties ilgio"

#. R/ts.R: stop("'start' cannot be after 'end'")
#: R/ts.R:0
msgid "'start' cannot be after 'end'"
msgstr "'start' negali būti po 'end'"

#. R/ts.R: warning("'start' value not changed")
#: R/ts.R:0
msgid "'start' value not changed"
msgstr "'start' reikšmė nekeičiama"

#. R/models.R: stop("'termlabels' must be a character vector")
#: R/models.R:0
#, fuzzy
msgid "'termlabels' must be a character vector"
msgstr "'termlabels' turi būti tekstinis vektorius, kurio ilgis bent 1"

#. R/models.R: gettextf("'termobj' must be a object of class %s", dQuote("terms"))
#: R/models.R:0
msgid "'termobj' must be a object of class %s"
msgstr "'termobj' turi būti klasės %s objektas"

#. R/approx.R: stop("'ties' is not \"ordered\", a function, or list(<string>, <function>)")
#: R/approx.R:0
msgid "'ties' is not \"ordered\", a function, or list(<string>, <function>)"
msgstr "'ties' nėra sutvarkytas, funkcija ar list(<string>, <function>)"

#. R/smspline.R: stop("'tol' must be strictly positive and finite")
#: R/smspline.R:0
msgid "'tol' must be strictly positive and finite"
msgstr "'tol' turi būti griežtai teigiamas arba baigtinis"

#. R/optim.R: stop("'trace != 0' needs 'REPORT >= 1'")
#: R/optim.R:0
msgid "'trace != 0' needs 'REPORT >= 1'"
msgstr "'trace != 0' reikia 'REPORT >= 1'"

#. R/ts.R: stop("'ts' object must have one or more observations")
#: R/ts.R:0
msgid "'ts' object must have one or more observations"
msgstr "'ts' objektas privalo turėti vieną ar daugiau stebėjimų"

#. R/quantile.R: stop("'type' must be 1 or 3 for ordered factors")
#: R/quantile.R:0
msgid "'type' must be 1 or 3 for ordered factors"
msgstr "'type' turi būti 1 arba 3 sutvarkytiems faktoriams"

#. R/quantile.R: stop("'type' must be an integer in 1..9")
#: R/quantile.R:0
#, fuzzy
msgid "'type' must be an integer in 1..9"
msgstr "'y' turi būti vienetu ilgesnis negu 'x'"

#. R/family.R: gettextf("'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\"",     vtemp)
#: R/family.R:0
msgid "'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\""
msgstr "'variance' \"%s\" yra neteisingas: galimos reikšmės yra \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" ir \"constant\""

#. R/reshape.R: stop("'varying' arguments must be the same length")
#: R/reshape.R:0
msgid "'varying' arguments must be the same length"
msgstr "'varying' argumentai turi būti tokio paties ilgio"

#. R/nls-profile.R: stop("'varying' has wrong length")
#: R/nls-profile.R:0
msgid "'varying' has wrong length"
msgstr "blogas 'varying' ilgis"

#. R/nls-profile.R: stop("'varying' must be in seq_along(pars)")
#: R/nls-profile.R:0
msgid "'varying' must be in seq_along(pars)"
msgstr "'varying' turi būti seq_along(pars)"

#. R/nls-profile.R: stop("'varying' must be logical, integer or character")
#: R/nls-profile.R:0
msgid "'varying' must be logical, integer or character"
msgstr "'varying' turi būti loginė reikšmė, sveikasis skaičius arba ženklas"

#. R/reshape.R: stop("'varying' must be nonempty list or vector")
#: R/reshape.R:0
msgid "'varying' must be nonempty list or vector"
msgstr "'varying' turi būti netuščias sąrašas arba vektorius"

#. R/lm.R: stop("'weights' as formula should be one-sided")
#: R/lm.R:0
msgid "'weights' as formula should be one-sided"
msgstr "'weights' kaip formulė turi būti vienpusė"

#. R/density.R: stop("'weights' must all be finite")
#: R/density.R:0
msgid "'weights' must all be finite"
msgstr "'weights' turi būti baigtinis"

#. R/glm.R: stop("'weights' must be a numeric vector")
#. R/lm.R: stop("'weights' must be a numeric vector")
#: R/glm.R:0 R/lm.R:0
msgid "'weights' must be a numeric vector"
msgstr "'weights' turi būti skaitinis vektorius"

#. R/density.R: stop("'weights' must not be negative")
#: R/density.R:0
msgid "'weights' must not be negative"
msgstr "'weights' turi būti neneigiamas"

#. R/plot.lm.R: stop("'which' must be in 1:6")
#: R/plot.lm.R:0
msgid "'which' must be in 1:6"
msgstr "'which' turi būti 1:6"

#. R/TukeyHSD.R: stop("'which' specified no factors")
#: R/TukeyHSD.R:0
msgid "'which' specified no factors"
msgstr "'which' nurodo ne faktorius"

#. R/TukeyHSD.R: warning("'which' specified some non-factors which will be dropped")
#: R/TukeyHSD.R:0
msgid "'which' specified some non-factors which will be dropped"
msgstr "'which' nurodo kai kuriuos ne faktorius, kurie bus pašalinti"

#. R/poisson.test.R: stop("'x' and 'T' have incompatible length")
#: R/poisson.test.R:0
msgid "'x' and 'T' have incompatible length"
msgstr "'x' ir 'T' ilgiai nesuderinami"

#. R/bartlett.test.R: stop("'x' and 'g' must have the same length")
#. R/fligner.test.R: stop("'x' and 'g' must have the same length")
#. R/kruskal.test.R: stop("'x' and 'g' must have the same length")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'x' and 'g' must have the same length"
msgstr "'x' ir 'g' turi būti tokio paties ilgio"

#. R/pairwise.R: stop("'x' and 'n' must have the same length")
#. R/prop.test.R: stop("'x' and 'n' must have the same length")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' and 'n' must have the same length"
msgstr "'x' ir 'n' turi būti tokio paties ilgio"

#. R/chisq.test.R: stop("'x' and 'p' must have the same number of elements")
#: R/chisq.test.R:0
msgid "'x' and 'p' must have the same number of elements"
msgstr "'x' ir 'p' turi turėti tokį patį elementų skaičių"

#. R/weighted.mean.R: stop("'x' and 'w' must have the same length")
#: R/weighted.mean.R:0
msgid "'x' and 'w' must have the same length"
msgstr "'x' ir 'w' turi būti tokio paties ilgio"

#. R/density.R: stop("'x' and 'weights' have unequal length")
#: R/density.R:0
msgid "'x' and 'weights' have unequal length"
msgstr "'x' ir 'weights' ilgiai nevienodi"

#. R/chisq.test.R: stop("'x' and 'y' must have at least 2 levels")
#. R/fisher.test.R: stop("'x' and 'y' must have at least 2 levels")
#. R/mantelhaen.test.R: stop("'x' and 'y' must have at least 2 levels")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mantelhaen.test.R:0
msgid "'x' and 'y' must have at least 2 levels"
msgstr "'x' ir 'y' turi bent 2 lygius"

#. R/chisq.test.R: stop("'x' and 'y' must have the same length")
#. R/cor.test.R: stop("'x' and 'y' must have the same length")
#. R/fisher.test.R: stop("'x' and 'y' must have the same length")
#. R/mcnemar.test.R: stop("'x' and 'y' must have the same length")
#. R/wilcox.test.R: stop("'x' and 'y' must have the same length")
#: R/chisq.test.R:0 R/cor.test.R:0 R/fisher.test.R:0 R/mcnemar.test.R:0
#: R/wilcox.test.R:0
msgid "'x' and 'y' must have the same length"
msgstr "'x' ir 'y' turi būti tokio paties ilgio"

#. R/mcnemar.test.R: stop("'x' and 'y' must have the same number of levels (minimum 2)")
#: R/mcnemar.test.R:0
msgid "'x' and 'y' must have the same number of levels (minimum 2)"
msgstr "'x' ir 'y' tur turėti tokį patį lygių skaičių (mažiausiai 2)"

#. R/density.R: stop("'x' contains missing values")
#: R/density.R:0
msgid "'x' contains missing values"
msgstr "'x' turi trūkstamų reikšmių"

#. R/fisher.test.R: gettextf("'x' has been rounded to integer: %s", ax)
#: R/fisher.test.R:0
msgid "'x' has been rounded to integer: %s"
msgstr "'x' suapvalintas iki sveikojo skaičiaus: %s"

#. R/fisher.test.R: stop("'x' has entries too large to be integer")
#: R/fisher.test.R:0
msgid "'x' has entries too large to be integer"
msgstr "'x' įrašai per dideli, kad būtų sveikieji skaičiai"

#. R/cancor.R: stop("'x' has rank 0")
#: R/cancor.R:0
msgid "'x' has rank 0"
msgstr "'x' rangas 0"

#. R/kruskal.test.R: warning("'x' is a list, so ignoring argument 'g'")
#: R/kruskal.test.R:0
msgid "'x' is a list, so ignoring argument 'g'"
msgstr "'x' yra sąrašas, todėl argumentas 'g' ignoruojamas"

#. R/cor.R: stop("'x' is empty")
#: R/cor.R:0
msgid "'x' is empty"
msgstr "'x' tuščias"

#. R/kernel.R: stop("'x' is not a kernel")
#: R/kernel.R:0
msgid "'x' is not a kernel"
msgstr "'x' nėra branduolys"

#. R/diffinv.R: stop("'x' is not a vector")
#. R/kernel.R: stop("'x' is not a vector")
#: R/diffinv.R:0 R/kernel.R:0
msgid "'x' is not a vector"
msgstr "'x' nėra vektorius"

#. R/diffinv.R: stop("'x' is not a vector or matrix")
#. R/embed.R: stop("'x' is not a vector or matrix")
#: R/diffinv.R:0 R/embed.R:0
msgid "'x' is not a vector or matrix"
msgstr "'x' nėra vektorius ar matrica"

#. R/kernel.R: stop("'x' is shorter than kernel 'k'")
#: R/kernel.R:0
msgid "'x' is shorter than kernel 'k'"
msgstr "'x' yra trumpesnis negu 'k' branduolys"

#. R/chisq.test.R: stop("'x' must at least have 2 elements")
#: R/chisq.test.R:0
msgid "'x' must at least have 2 elements"
msgstr "'x' privalo turėti bent 2 elementus"

#. R/splinefun.R: stop("'x' must be *strictly* increasing (non - NA)")
#: R/splinefun.R:0
msgid "'x' must be *strictly* increasing (non - NA)"
msgstr "'x' turi būti *griežtai* didėjanti (ne - NA)"

#. R/mantelhaen.test.R: stop("'x' must be a 3-dimensional array")
#: R/mantelhaen.test.R:0
msgid "'x' must be a 3-dimensional array"
msgstr "'x' turi būti 3 matavimo skaičių masyvas"

#. R/bartlett.test.R: stop("'x' must be a list with at least 2 elements")
#. R/fligner.test.R: stop("'x' must be a list with at least 2 elements")
#. R/kruskal.test.R: stop("'x' must be a list with at least 2 elements")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "'x' must be a list with at least 2 elements"
msgstr "'x' turi būti mažiausiai 2 elementų sąrašas"

#. R/lm.R: stop("'x' must be a matrix")
#: R/lm.R:0
msgid "'x' must be a matrix"
msgstr "'x' turi būti matrica"

#. R/cov.wt.R: stop("'x' must be a matrix or a data frame")
#: R/cov.wt.R:0
msgid "'x' must be a matrix or a data frame"
msgstr "'x' turi būti matrica arba duomenų sistema"

#. R/dendrogram.R: stop("'x' must be a numeric matrix")
#: R/dendrogram.R:0
msgid "'x' must be a numeric matrix"
msgstr "'x' turi būti skaitinė matrica"

#. R/cor.test.R: stop("'x' must be a numeric vector")
#: R/cor.test.R:0
msgid "'x' must be a numeric vector"
msgstr "'x' turi būti skaitinis vektorius"

#. R/spectrum.R: stop("'x' must be a time series or an ar() fit")
#: R/spectrum.R:0
msgid "'x' must be a time series or an ar() fit"
msgstr "'x' turi būti laiko eilutė arba ar() pritaikymas"

#. R/ftable.R: stop("'x' must be an \"ftable\" object")
#: R/ftable.R:0
msgid "'x' must be an \"ftable\" object"
msgstr "'x' turi būti \"ftable\" objektas"

#. R/symnum.R: gettextf("'x' must be between %s and %s", format(minc), format(maxc))
#: R/symnum.R:0
msgid "'x' must be between %s and %s"
msgstr "'x' turi būti tarp %s ir %s"

#. R/symnum.R: gettext("'x' must be between -1 and 1")
#: R/symnum.R:0
msgid "'x' must be between -1 and 1"
msgstr "'x' turi būti tarp -1 ir 1"

#. R/smspline.R: stop("'x' must be between 0 and 1 for periodic smooth")
#: R/smspline.R:0
msgid "'x' must be between 0 and 1 for periodic smooth"
msgstr "'x' turi būti tarp 0 ir 1 periodiniam glodumui"

#. R/anova.R: stop("'x' must be coefficient matrix/data frame")
#: R/anova.R:0
msgid "'x' must be coefficient matrix/data frame"
msgstr "'x' turi būti matricos/duomenų sistemos koeficientas"

#. R/poisson.test.R: stop("'x' must be finite, nonnegative, and integer")
#: R/poisson.test.R:0
msgid "'x' must be finite, nonnegative, and integer"
msgstr "'x' turi būti baigtinis, neneigiamas ir sveikasis skaičius"

#. R/distn.R: stop("'x' must be non-negative")
#: R/distn.R:0
msgid "'x' must be non-negative"
msgstr "'x' turi būti neneigiamas"

#. R/binom.test.R: stop("'x' must be nonnegative and integer")
#: R/binom.test.R:0
msgid "'x' must be nonnegative and integer"
msgstr "'x' turi būti neneigiamas ir sveikasis skaičius"

#. R/StructTS.R: stop("'x' must be numeric")
#. R/acf.R: stop("'x' must be numeric")
#. R/ar.R: stop("'x' must be numeric")
#. R/arima.R: stop("'x' must be numeric")
#. R/arma0.R: stop("'x' must be numeric")
#. R/cor.R: stop("'x' must be numeric")
#. R/wilcox.test.R: stop("'x' must be numeric")
#: R/StructTS.R:0 R/acf.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/cor.R:0
#: R/wilcox.test.R:0
msgid "'x' must be numeric"
msgstr "'x' turi būti skaitinis"

#. R/mcnemar.test.R: stop("'x' must be square with at least two rows and columns")
#: R/mcnemar.test.R:0
msgid "'x' must be square with at least two rows and columns"
msgstr "'x' turi būti kvadratas mažiausiai su dviem eilutėmis ir stulpeliais"

#. R/cov.wt.R: stop("'x' must contain finite values only")
#: R/cov.wt.R:0
msgid "'x' must contain finite values only"
msgstr "'x' privalo turėti tik baigtines reikšmes"

#. R/ecdf.R: stop("'x' must have 1 or more non-missing values")
#: R/ecdf.R:0
msgid "'x' must have 1 or more non-missing values"
msgstr "'x' privalo turėti 1 ar daugiau netrūkstamų reikšmių"

#. R/pairwise.R: stop("'x' must have 2 columns")
#. R/prop.test.R: stop("'x' must have 2 columns")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' must have 2 columns"
msgstr "'x' privalo turėti 2 stulpelius"

#. R/dendrogram.R: stop("'x' must have at least 2 rows and 2 columns")
#: R/dendrogram.R:0
msgid "'x' must have at least 2 rows and 2 columns"
msgstr "'x' privalo turėti mažiausiai 2 eilutes ir 2 stulpelius"

#. R/fisher.test.R: stop("'x' must have at least 2 rows and columns")
#: R/fisher.test.R:0
msgid "'x' must have at least 2 rows and columns"
msgstr "'x' privalo turėti mažiausiai 2 eilutes ir stulpelius"

#. R/stepfun.R: stop("'x' must have length >= 1")
#: R/stepfun.R:0
msgid "'x' must have length >= 1"
msgstr "'x' ilgis turi būti >= 1"

#. R/mantelhaen.test.R: stop("'x', 'y', and 'z' must have the same length")
#: R/mantelhaen.test.R:0
msgid "'x', 'y', and 'z' must have the same length"
msgstr "'x', 'y' ir 'z' turi būti to paties ilgio"

#. R/diffinv.R: stop("'xi' does not have the right length")
#: R/diffinv.R:0
msgid "'xi' does not have the right length"
msgstr "'xi' ilgis nėra teisingas"

#. R/arima.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#. R/arma0.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#: R/arima.R:0 R/arma0.R:0
msgid "'xreg' and 'newxreg' have different numbers of columns"
msgstr "'xreg' ir 'newxreg' turi skirtingų stulpelių skaičių"

#. R/arma0.R: stop("'xreg' is collinear")
#: R/arma0.R:0
msgid "'xreg' is collinear"
msgstr "'xreg' yra kolineari"

#. R/ts.R: stop("'xy.labels' must be logical or character")
#: R/ts.R:0
msgid "'xy.labels' must be logical or character"
msgstr "'xy.labels' turi būti loginė reikšmė arba ženklas"

#. R/cancor.R: stop("'y' has rank 0")
#: R/cancor.R:0
msgid "'y' has rank 0"
msgstr "'y' turi rangą 0"

#. R/t.test.R: stop("'y' is missing for paired test")
#. R/wilcox.test.R: stop("'y' is missing for paired test")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'y' is missing for paired test"
msgstr "trūksta 'y' atliekant suporuotą testą"

#. R/cor.test.R: stop("'y' must be a numeric vector")
#: R/cor.test.R:0
msgid "'y' must be a numeric vector"
msgstr "'y' turi būti skaitinis vektorius"

#. R/spline.R: stop("'y' must be increasing or decreasing")
#. R/splinefun.R: stop("'y' must be increasing or decreasing")
#: R/spline.R:0 R/splinefun.R:0
msgid "'y' must be increasing or decreasing"
msgstr "'y' turi būti didėjantis arba mažėjantis"

#. R/cor.R: stop("'y' must be numeric")
#. R/wilcox.test.R: stop("'y' must be numeric")
#: R/cor.R:0 R/wilcox.test.R:0
msgid "'y' must be numeric"
msgstr "'y' turi būti skaitinis"

#. R/ks.test.R: stop("'y' must be numeric or a function or a string naming a valid function")
#: R/ks.test.R:0
msgid "'y' must be numeric or a function or a string naming a valid function"
msgstr "'y' turi būti skaitinė arba funkcija arba eilutė, įvardijanti tinkamą funkciją"

#. R/smspline.R: stop("'y' must be numeric vector")
#: R/smspline.R:0
msgid "'y' must be numeric vector"
msgstr "'y' turi būti skaitinis vektorius"

#. R/stepfun.R: stop("'y' must be one longer than 'x'")
#: R/stepfun.R:0
msgid "'y' must be one longer than 'x'"
msgstr "'y' turi būti vienetu ilgesnis negu 'x'"

#. R/friedman.test.R: stop("'y', 'groups' and 'blocks' must have the same length")
#. R/quade.test.R: stop("'y', 'groups' and 'blocks' must have the same length")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "'y', 'groups' and 'blocks' must have the same length"
msgstr "'y', 'groups' ir 'blocks' turi būti tokio paties ilgio"

#. R/quantile.R: stop("(unordered) factors are not allowed")
#: R/quantile.R:0
#, fuzzy
msgid "(unordered) factors are not allowed"
msgstr "faktoriai negalimi"

#. R/lm.R: stop("0 (non-NA) cases")
#: R/lm.R:0
msgid "0 (non-NA) cases"
msgstr "0 (ne-NA) atvejai"

#. R/glm.R: stop("0s in V(mu)")
#: R/glm.R:0
msgid "0s in V(mu)"
msgstr "0s, esantis V(mu)"

#. R/add.R: stop("AIC is -infinity for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is -infinity for this model, so 'step' cannot proceed"
msgstr "AIC yra šio modelio -infinity, todėl 'step' negali tęstis"

#. R/add.R: stop("AIC is not defined for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is not defined for this model, so 'step' cannot proceed"
msgstr "AIC nėra apibrėžtas šiam modeliui, todėl 'step' negali tęstis"

#. R/lm.R: warning("ANOVA F-tests on an essentially perfect fit are unreliable")
#: R/lm.R:0
msgid "ANOVA F-tests on an essentially perfect fit are unreliable"
msgstr "Iš esmės nepriekaištingi ANOVA F-testai yra nepatikimi"

#. R/lm.R: warning("Assuming constant prediction variance even though model fit is weighted\n")
#: R/lm.R:0
msgid "Assuming constant prediction variance even though model fit is weighted"
msgstr "Darant prielaidą, kad prognozavimo dispersija yra pastovi, net jei modelio tinkamumas yra įvertintas"

#. R/constrOptim.R: gettext("Barrier algorithm ran out of iterations and did not converge")
#: R/constrOptim.R:0
msgid "Barrier algorithm ran out of iterations and did not converge"
msgstr "Barjero algoritme trūko iteracijų ir nekonvergavo"

#. R/cor.test.R: warning("Cannot compute exact p-value with ties")
#: R/cor.test.R:0
msgid "Cannot compute exact p-value with ties"
msgstr "Nepavyko apskaičiuoti tikslios p-reikšmės su ryšiais"

#. R/chisq.test.R: warning("Chi-squared approximation may be incorrect")
#. R/prop.test.R: warning("Chi-squared approximation may be incorrect")
#: R/chisq.test.R:0 R/prop.test.R:0
msgid "Chi-squared approximation may be incorrect"
msgstr "Chi-kvadrato aproksimacija gali būti neteisinga"

#. R/dendrogram.R: stop("Colv = \"Rowv\" but nrow(x) != ncol(x)")
#: R/dendrogram.R:0
msgid "Colv = \"Rowv\" but nrow(x) != ncol(x)"
msgstr "Colv = \"Rowv\", bet nrow(x) != ncol(x)"

#. R/hclust.R: gettextf("\n Consider providing an as.hclust.%s() method", oldClass(x)[1L])
#: R/hclust.R:0
msgid "Consider providing an as.hclust.%s() method"
msgstr "Apsvarstykite galimybę pateikti as.hclust.%s() metodą"

#. R/model.tables.R: message("Design is unbalanced - use se.contrast() for se's")
#: R/model.tables.R:0
msgid "Design is unbalanced - use se.contrast() for se's"
msgstr "Dizainas nesubalansuotas - naudokite se.contrast() dėl se"

#. R/aov.R: warning("Error() model is singular")
#: R/aov.R:0
msgid "Error() model is singular"
msgstr "Error() modelis yra singuliarus"

#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#: R/add.R:0
msgid "F test assumes 'quasi%s' family"
msgstr "F testas įgyja 'quasi%s' šeimą"

#. R/add.R: gettextf("F test assumes quasi%s family", fam)
#: R/add.R:0
msgid "F test assumes quasi%s family"
msgstr "F testas įgyja quasi%s šeimą"

#. R/arima.R: warning("MA part of model is not invertible")
#. R/arma0.R: warning("MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "MA part of model is not invertible"
msgstr "MA (slenkančio vidurkio) modelio dalis nėra invertuojama"

#. R/ar.R: stop("MLE only implemented for univariate series")
#: R/ar.R:0
msgid "MLE only implemented for univariate series"
msgstr "MLE įdiegta tik vienmatėms eilutėms"

#. R/smspline.R: stop("NA lev[]; probably smoothing parameter 'spar' way too large!")
#: R/smspline.R:0
msgid "NA lev[]; probably smoothing parameter 'spar' way too large!"
msgstr "NA lev[]; tikriausiai glodinimo parametras 'spar' yra per didelis!"

#. R/cmdscale.R: stop("NA values not allowed in 'd'")
#: R/cmdscale.R:0
msgid "NA values not allowed in 'd'"
msgstr "NA (nepasiekiamas) negalimas 'd'"

#. R/friedman.test.R: stop("NA's are not allowed in 'groups' or 'blocks'")
#: R/friedman.test.R:0
msgid "NA's are not allowed in 'groups' or 'blocks'"
msgstr "NA negalimos 'groups' arba 'blocks'"

#. R/mantelhaen.test.R: stop("NAs are not allowed")
#: R/mantelhaen.test.R:0
msgid "NAs are not allowed"
msgstr "NA (nepasiekiamas) yra negalimos"

#. R/quade.test.R: stop("NAs are not allowed in 'groups' or 'blocks'")
#: R/quade.test.R:0
#, fuzzy
msgid "NAs are not allowed in 'groups' or 'blocks'"
msgstr "NA negalimos 'groups' arba 'blocks'"

#. R/arima.R: gettextf("NAs in '%s'", "phi")
#. R/arima.R: gettextf("NAs in '%s'", "theta")
#: R/arima.R:0
msgid "NAs in '%s'"
msgstr "NA, esančios '%s'"

#. R/acf.R: stop("NAs in 'x'")
#. R/ar.R: stop("NAs in 'x'")
#: R/acf.R:0 R/ar.R:0
msgid "NAs in 'x'"
msgstr "NA, esančios 'x'"

#. R/ar.R: stop("NAs in 'x' must be the same row-wise")
#: R/ar.R:0
msgid "NAs in 'x' must be the same row-wise"
msgstr "'x' ir 'g' turi būti tokio paties ilgio"

#. R/glm.R: stop("NAs in V(mu)")
#: R/glm.R:0
msgid "NAs in V(mu)"
msgstr "NA, esantis V(mu)"

#. R/glm.R: stop("NAs in d(mu)/d(eta)")
#: R/glm.R:0
msgid "NAs in d(mu)/d(eta)"
msgstr "NA, esantis d(mu)/d(eta)"

#. R/arma0.R: warning("NAs present: setting 'delta' to -1")
#: R/arma0.R:0
msgid "NAs present: setting 'delta' to -1"
msgstr "NA: 'delta' nustatoma į -1"

#. R/power.R: warning("No p1 in [0, p2] can be found to achieve the desired power")
#: R/power.R:0
msgid "No p1 in [0, p2] can be found to achieve the desired power"
msgstr "Nėra p1, esančio [0, p2], kad būtų pasiektas norimas galios lygis"

#. R/power.R: warning("No p2 in [p1, 1] can be found to achieve the desired power")
#: R/power.R:0
msgid "No p2 in [p1, 1] can be found to achieve the desired power"
msgstr "Nėra p2, esančio [p1, 1], kad būtų pasiektas norimas galios lygis"

#. R/power.R: warning("No significance level [0, 1] can be found to achieve the desired power")
#: R/power.R:0
msgid "No significance level [0, 1] can be found to achieve the desired power"
msgstr "Negalima rasti reikšmingo lygio [0, 1], kad būtų pasiektas norimas galios lygis"

#. R/smspline.R: stop("Numeric 'all.knots' must be strictly increasing")
#: R/smspline.R:0
msgid "Numeric 'all.knots' must be strictly increasing"
msgstr "Skaitiniai 'all.knots' turi būti griežtai didėjantys"

#. R/constrOptim.R: gettextf("Objective function decreased at outer iteration %d",     i)
#: R/constrOptim.R:0
msgid "Objective function decreased at outer iteration %d"
msgstr "Tikslo funkcija sumažėjo išorinėje iteracijoje %d"

#. R/constrOptim.R: gettextf("Objective function increased at outer iteration %d",     i)
#: R/constrOptim.R:0
msgid "Objective function increased at outer iteration %d"
msgstr "Tikslo funkcija padidėjo išorinėje iteracijoje %d"

#. R/prcomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#: R/prcomp.R:0 R/princomp.R:0
msgid "PCA applies only to numerical variables"
msgstr "PCA taikoma tik skaitiniams kintamiesiems"

#. R/acf.R: gettextf("Page [%d,%d]: i =%s; j =%s", I, J, paste(iind, collapse = ","),     paste(jind, collapse = ","))
#: R/acf.R:0
msgid "Page [%d,%d]: i =%s; j =%s"
msgstr "Puslapis [%d,%d]: i =%s; j =%s"

#. R/ks.test.R: gettextf("Parameter(s) %s ignored", paste(names(args), collapse = ", "))
#: R/ks.test.R:0
msgid "Parameter(s) %s ignored"
msgstr ""

#. R/glm-profile.R: gettext("\nParameter: ", domain = "R-stats")
#: R/glm-profile.R:0
msgid "Parameter:"
msgstr ""

#. R/kmeans.R: gettextf("Quick-TRANSfer stage steps exceeded maximum (= %d)",     isteps.Qtran)
#: R/kmeans.R:0
msgid "Quick-TRANSfer stage steps exceeded maximum (= %d)"
msgstr "Quick-TRANSfer etapo žingsniai viršijo maksimumą (= %d)"

#. R/aov.R: message("Refitting model to allow projection")
#: R/aov.R:0
msgid "Refitting model to allow projection"
msgstr "Atstatymo modelis, kad leisti projekciją"

#. R/confint.R: gettextf("Reprofiling for %s  statistic. Waiting...", test)
#: R/confint.R:0
msgid "Reprofiling for %s  statistic. Waiting..."
msgstr ""

#. R/model.tables.R: gettextf("SEs for type '%s' are not yet implemented", type)
#: R/model.tables.R:0
msgid "SEs for type '%s' are not yet implemented"
msgstr "SEs tipui '%s' dar nėra įgyvendinamas"

#. R/density.R: warning("Selecting bandwidth *not* using 'weights'")
#: R/density.R:0
msgid "Selecting bandwidth *not* using 'weights'"
msgstr ""

#. R/model.tables.R: message("Standard error information not returned as design is unbalanced. \nStandard errors can be obtained through 'se.contrast'.")
#: R/model.tables.R:0
msgid ""
"Standard error information not returned as design is unbalanced. \n"
"Standard errors can be obtained through 'se.contrast'."
msgstr ""
"Standartinės paklaidos informacija negrąžinama, nes pateiktis nesubalansuota.\n"
"Standartinės paklaidos gali būti gaunamos naudojant 'se.contrast'."

#. R/hclust.R: message("The \"ward\" method has been renamed to \"ward.D\"; note new \"ward.D2\"")
#: R/hclust.R:0
msgid "The \"ward\" method has been renamed to \"ward.D\"; note new \"ward.D2\""
msgstr "Metodas „ward” pervardintas į „ward.D”; įsidėmėkite naują „ward.D2”"

#. R/models.R: sprintf("Unparseable 'response' \"%s\"; use is deprecated.  Use as.name(.) or `..`!",     response)
#: R/models.R:0
msgid "Unparseable 'response' \"%s\"; use is deprecated.  Use as.name(.) or `..`!"
msgstr "Nepalyginamas 'response' \"%s\"; naudojimas prieštarauja.  Naudokite as.name(.) arba '..'!"

#. R/confint.R: message("Waiting for profiling to be done...")
#: R/confint.R:0
msgid "Waiting for profiling to be done..."
msgstr ""

#. R/mlm.R: stop("X does not define a subspace of M")
#: R/mlm.R:0
msgid "X does not define a subspace of M"
msgstr "X neapibrėžia M poerdvio"

#. R/integrate.R: stop("a limit is NA or NaN")
#: R/integrate.R:0
msgid "a limit is NA or NaN"
msgstr "riba yra NA arba NaN"

#. R/oneway.test.R: stop("a two-sided formula is required")
#: R/oneway.test.R:0
msgid "a two-sided formula is required"
msgstr "reikalinga dvipusė formulė"

#. R/shapiro.test.R: stop("all 'x' values are identical")
#: R/shapiro.test.R:0
msgid "all 'x' values are identical"
msgstr "visos 'x' reikšmės yra vienodos"

#. R/zzModels.R: stop("all 'x' values must be non-negative to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "all 'x' values must be non-negative to fit the Weibull growth model"
msgstr "visos 'x' reikšmės yra neneigiamos, kad atitiktų Veibulo augimo modelį"

#. R/identify.hclust.R: gettextf("all elements of 'which' must be between 1 and %d",     k)
#: R/identify.hclust.R:0
msgid "all elements of 'which' must be between 1 and %d"
msgstr "visi 'which' elementai turi būti tarp 1 ir %d"

#. R/chisq.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/fisher.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/mcnemar.test.R: stop("all entries of 'x' must be nonnegative and finite")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mcnemar.test.R:0
msgid "all entries of 'x' must be nonnegative and finite"
msgstr "visi 'x' įrašai turi būti neneigiami ir baigtiniai"

#. R/fligner.test.R: stop("all groups must contain data")
#. R/kruskal.test.R: stop("all groups must contain data")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all groups must contain data"
msgstr "visose grupėse turi būti duomenys"

#. R/bartlett.test.R: stop("all observations are in the same group")
#. R/fligner.test.R: stop("all observations are in the same group")
#. R/kruskal.test.R: stop("all observations are in the same group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all observations are in the same group"
msgstr "visi stebėjimai yra toje pačioje grupėje"

#. R/StructTS.R: stop("all parameters were fixed")
#. R/arma0.R: stop("all parameters were fixed")
#: R/StructTS.R:0 R/arma0.R:0
msgid "all parameters were fixed"
msgstr "visi parametrai nustatyti"

#. R/na.ts.R: stop("all times contain an NA")
#. R/ts.R: stop("all times contain an NA")
#: R/na.ts.R:0 R/ts.R:0
msgid "all times contain an NA"
msgstr "visada yra NA"

#. R/smspline.R: stop("all weights should be non-negative")
#: R/smspline.R:0
msgid "all weights should be non-negative"
msgstr "visi svoriai turi būti neneigiami"

#. R/fisher.test.R: stop("alternative must be \"two.sided\", \"less\" or \"greater\"")
#: R/fisher.test.R:0
msgid "alternative must be \"two.sided\", \"less\" or \"greater\""
msgstr "alternatyva turi būti \"two.sided\", \"less\" arba \"greater\""

#. R/hclust.R: stop("ambiguous clustering method", paste("", method))
#: R/hclust.R:0
msgid "ambiguous clustering method"
msgstr "neaiškus klasterizavimo metodas"

#. R/dist.R: stop("ambiguous distance method")
#: R/dist.R:0
msgid "ambiguous distance method"
msgstr "neaiškus atstumo metodas"

#. R/nls.R: stop("anova is only defined for sequences of \"nls\" objects")
#: R/nls.R:0
msgid "anova is only defined for sequences of \"nls\" objects"
msgstr "anova apibrėžta tik \"nls\" objektų sekoms"

#. R/nls.R: warning("argument 'na.action' will be ignored")
#: R/nls.R:0
msgid "argument 'na.action' will be ignored"
msgstr "argumentas 'na.action' bus ignoruojamas"

#. R/selfStart.R: stop("argument 'object' has an impossible length")
#: R/selfStart.R:0
msgid "argument 'object' has an impossible length"
msgstr "argumento 'object' ilgis neteisingas"

#. R/ks.test.R: stop("argument 'p' must be numeric")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'p' must be numeric"
msgstr "argumentas 'x' turi būti skaitinis"

#. R/ks.test.R: stop("argument 'q' must be numeric")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'q' must be numeric"
msgstr "argumentas 'x' turi būti skaitinis"

#. R/filter.R: stop("argument 'sides' must be 1 or 2")
#: R/filter.R:0
msgid "argument 'sides' must be 1 or 2"
msgstr "argumentas 'sides' turi būti 1 arba 2"

#. R/ks.test.R: stop("argument 'sizes' must be a vector of length 2")
#: R/ks.test.R:0
#, fuzzy
msgid "argument 'sizes' must be a vector of length 2"
msgstr "'interval' turi būti 2 ilgio vektorius"

#. R/nls.R: warning("argument 'subset' will be ignored")
#: R/nls.R:0
msgid "argument 'subset' will be ignored"
msgstr "argumentas 'subset' bus ignoruojamas"

#. R/hclust.R: gettextf("argument 'x' cannot be coerced to class %s", dQuote("hclust"))
#: R/hclust.R:0
msgid "argument 'x' cannot be coerced to class %s"
msgstr "argumentas 'x' negali būti pakeistas į %s klasę"

#. R/aggregate.R: stop("argument 'x' is missing -- it has been renamed from 'formula'")
#: R/aggregate.R:0
#, fuzzy
msgid "argument 'x' is missing -- it has been renamed from 'formula'"
msgstr "argumentas 'x' turi būti skaitinis"

#. R/aggregate.R: stop("argument 'x' must be a formula")
#: R/aggregate.R:0
#, fuzzy
msgid "argument 'x' must be a formula"
msgstr "argumentas 'x' turi būti skaitinis"

#. R/density.R: stop("argument 'x' must be numeric")
#: R/density.R:0
msgid "argument 'x' must be numeric"
msgstr "argumentas 'x' turi būti skaitinis"

#. R/proj.R: stop("argument does not include a 'qr' component")
#: R/proj.R:0
msgid "argument does not include a 'qr' component"
msgstr "argumentas neapima 'qr' komponento"

#. R/proj.R: stop("argument does not include an 'effects' component")
#: R/proj.R:0
msgid "argument does not include an 'effects' component"
msgstr "argumentas neapima 'effects' komponento"

#. R/r2dtable.R: stop("arguments 'r' and 'c' must have the same sums")
#: R/r2dtable.R:0
msgid "arguments 'r' and 'c' must have the same sums"
msgstr "argumentai 'r' ir 'c' privalo turėti vienodas sumas"

#. R/aggregate.R: stop("arguments must have same length")
#: R/aggregate.R:0
msgid "arguments must have same length"
msgstr "argumentai turi būti tokio paties ilgio"

#. R/contr.poly.R: stop("arguments must have the same length")
#: R/contr.poly.R:0
msgid "arguments must have the same length"
msgstr "argumentai turi būti vienodo ilgio"

#. R/lm.R: warning("assuming prediction variance inversely proportional to weights used for fitting\n")
#: R/lm.R:0
msgid "assuming prediction variance inversely proportional to weights used for fitting"
msgstr "darant prielaidą, kad prognozavimo dispersija atvirkščiai proporcinga svoriams, naudojamiems pritaikymui"

#. R/chisq.test.R: stop("at least one entry of 'x' must be positive")
#: R/chisq.test.R:0
msgid "at least one entry of 'x' must be positive"
msgstr "bent vienas 'x' įrašas turi būti teigiamas"

#. R/smooth.R: stop("attempt to smooth NA values")
#: R/smooth.R:0
msgid "attempt to smooth NA values"
msgstr "bandymas glodinti NA reikšmes"

#. R/smooth.R: stop("attempt to smooth non-numeric values")
#: R/smooth.R:0
msgid "attempt to smooth non-numeric values"
msgstr "bandymas glodinti ne skaitines reikšmes"

#. R/add.R: warning("attempting model selection on an essentially perfect fit is nonsense",     call. = FALSE)
#: R/add.R:0
msgid "attempting model selection on an essentially perfect fit is nonsense"
msgstr "bandymas pasirinkti modelį iš esmės yra beprasmiškas"

#. R/ts.R: stop("bad value for 'end'")
#: R/ts.R:0
msgid "bad value for 'end'"
msgstr "neteisinga 'end' reikšmė"

#. R/diffinv.R: stop("bad value for 'lag' or 'differences'")
#. R/ts.R: stop("bad value for 'lag' or 'differences'")
#: R/diffinv.R:0 R/ts.R:0
msgid "bad value for 'lag' or 'differences'"
msgstr "neteisinga 'lag' arba 'differences' reikšmė"

#. R/ts.R: stop("bad value for 'start'")
#: R/ts.R:0
msgid "bad value for 'start'"
msgstr "neteisinga 'start' reikšmė"

#. R/runmed.R: stop("bandwidth 'k' must be >= 1 and odd!")
#: R/runmed.R:0
msgid "bandwidth 'k' must be >= 1 and odd!"
msgstr "pralaidumas 'k' turi būti >= 1 ir nelyginis!"

#. R/contrast.R: stop("baseline group number out of range")
#: R/contrast.R:0
msgid "baseline group number out of range"
msgstr "baseline grupės numeris už diapazono ribų"

#. R/biplot.R: stop("biplots are not defined for complex PCA")
#: R/biplot.R:0
msgid "biplots are not defined for complex PCA"
msgstr "biplots nėra apibrėžti sudėtiniam PCA"

#. R/loess.R: warning("both 'span' and 'enp.target' specified: 'span' will be used")
#: R/loess.R:0
msgid "both 'span' and 'enp.target' specified: 'span' will be used"
msgstr "tiek 'span', tiek 'enp.target' nurodyti: bus naudojama 'span'"

#. R/princomp.R: warning("both 'x' and 'covmat' were supplied: 'x' will be ignored")
#: R/princomp.R:0
msgid "both 'x' and 'covmat' were supplied: 'x' will be ignored"
msgstr "tiek 'x', tiek 'covmat' buvo pateikti: 'x' ignoruojamas"

#. R/cor.R: stop("both 'x' and 'y' must be non-empty")
#: R/cor.R:0
msgid "both 'x' and 'y' must be non-empty"
msgstr "tiek 'x', tiek 'y' turi būti netušti"

#. R/optim.R: warning("bounds can only be used with method L-BFGS-B (or Brent)")
#: R/optim.R:0
msgid "bounds can only be used with method L-BFGS-B (or Brent)"
msgstr "ribos gali būti naudojamos tik su L-BFGS-B (arba Brento) metodu"

#. R/ts.R: stop("burn-in 'n.start' must be as long as 'ar + ma'")
#: R/ts.R:0
msgid "burn-in 'n.start' must be as long as 'ar + ma'"
msgstr "įdirbimas 'n.start' turi būti tol, kol 'ar + ma'"

#. R/lm.R: warning("calling anova.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling anova.lm(<fake-lm-object>) ..."
msgstr "kreiptis anova.lm(<fake-lm-object>) ..."

#. R/lm.R: warning("calling predict.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling predict.lm(<fake-lm-object>) ..."
msgstr "kreiptis predict.lm(<fake-lm-object>) ..."

#. R/lm.R: warning("calling summary.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling summary.lm(<fake-lm-object>) ..."
msgstr "kreiptis summary.lm(<fake-lm-object>) ..."

#. R/acf.R: warning("can use ci.type=\"ma\" only if first lag is 0")
#: R/acf.R:0
msgid "can use ci.type=\"ma\" only if first lag is 0"
msgstr "naudokite ci.type=\"ma\", jei tik pirmas vėlavimas yra 0"

#. R/nls.R: stop("cannot calculate REML log-likelihood for \"nls\" objects")
#: R/nls.R:0
msgid "cannot calculate REML log-likelihood for \"nls\" objects"
msgstr "negalima apskaičiuoti REML log-likelihood \"nls\" objektams"

#. R/aggregate.R: gettextf("cannot change frequency from %g to %g", ofrequency,     nfrequency)
#: R/aggregate.R:0
msgid "cannot change frequency from %g to %g"
msgstr "negalima pakeisti dažnio iš %g į %g"

#. R/ansari.test.R: warning("cannot compute asymptotic confidence set or estimator")
#: R/ansari.test.R:0
msgid "cannot compute asymptotic confidence set or estimator"
msgstr "negali apskaičiuoti asimptotinės pasikliautinosios aibės ar įvertinimo"

#. R/wilcox.test.R: warning("cannot compute confidence interval when all observations are tied",     call. = FALSE)
#: R/wilcox.test.R:0
msgid "cannot compute confidence interval when all observations are tied"
msgstr "negali apskaičiuoti pasitikėjimo intervalo, kai visi stebėjimai yra susieti"

#. R/wilcox.test.R: warning("cannot compute confidence interval when all observations are zero or tied",     call. = FALSE)
#: R/wilcox.test.R:0
msgid "cannot compute confidence interval when all observations are zero or tied"
msgstr "negali apskaičiuoti pasitikėjimo intervalo, kai visi stebėjimai yra nulis arba susieti"

#. R/ansari.test.R: warning("cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute confidence set, returning NA"
msgstr "negali apskaičiuoti pasikliautinosios aibės, grąžina NA"

#. R/ansari.test.R: warning("cannot compute estimate, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute estimate, returning NA"
msgstr "negali apskaičiuoti įverčio, grąžina NA"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with ties")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with ties"
msgstr "negali tiksliai apskaičiuoti pasitikėjimo intervalo su ryšiais"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with zeroes"
msgstr "negali apskaičiuoti tikslaus patikimumo intervalo su nuliais"

#. R/ansari.test.R: warning("cannot compute exact confidence intervals with ties")
#. R/wilcox.test.R: warning("cannot compute exact confidence intervals with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact confidence intervals with ties"
msgstr "negali tiksliai apskaičiuoti pasitikėjimo intervalą su ryšiais"

#. R/ansari.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact p-value with ties"
msgstr "nepavyko apskaičiuoti tikslios p-reikšmės su ryšiais"

#. R/wilcox.test.R: warning("cannot compute exact p-value with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact p-value with zeroes"
msgstr "nepavyko apskaičiuoti tikslios p-reikšmės su nuliais"

#. R/chisq.test.R: warning("cannot compute simulated p-value with zero marginals")
#: R/chisq.test.R:0
msgid "cannot compute simulated p-value with zero marginals"
msgstr "nepavyko apskaičiuoti imituojamos p-reikšmės su nulinėmis ribomis"

#. R/models.R: stop("cannot create a formula from a zero-column data frame")
#: R/models.R:0
msgid "cannot create a formula from a zero-column data frame"
msgstr "nepavyko sukurti formulės iš nulio stulpelių duomenų sistemos"

#. R/family.R: stop("cannot find valid starting values: please specify some")
#. R/glm.R: stop("cannot find valid starting values: please specify some",     call. = FALSE)
#: R/family.R:0 R/glm.R:0
msgid "cannot find valid starting values: please specify some"
msgstr "nepavyko rasti tinkamų pradinių reikšmių: nurodykite kai kurias"

#. R/zzModels.R: stop("cannot fit an asymptotic regression model to these data")
#: R/zzModels.R:0
msgid "cannot fit an asymptotic regression model to these data"
msgstr "šiems duomenims negalima pritaikyti asimptotinio regresijos modelio"

#. R/HoltWinters.R: stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
#: R/HoltWinters.R:0
msgid "cannot fit models without level ('alpha' must not be 0 or FALSE)"
msgstr "negalima pritaikyti modelių be lygio ('alpha' turi būti ne 0 arba FALSE)"

#. R/cor.R: stop("cannot handle 'pairwise.complete.obs'")
#: R/cor.R:0
msgid "cannot handle 'pairwise.complete.obs'"
msgstr "negalima apdoroti 'pairwise.complete.obs'"

#. R/ts.R: stop("cannot plot more than 10 series as \"multiple\"")
#: R/ts.R:0
msgid "cannot plot more than 10 series as \"multiple\""
msgstr "negalima braižyti daugiau negu 10 sekų kaip \"multiple\""

#. R/nls-profile.R: stop("cannot recognize parameter name")
#: R/nls-profile.R:0
msgid "cannot recognize parameter name"
msgstr "nepavyko atpažinti parametro vardo"

#. R/prcomp.R: stop("cannot rescale a constant/zero column to unit variance")
#: R/prcomp.R:0
msgid "cannot rescale a constant/zero column to unit variance"
msgstr "negalima keisti konstantos/nulinio stulpelio į vieneto dispersiją"

#. R/family.R: stop("cannot simulate from non-integer prior.weights")
#: R/family.R:0
msgid "cannot simulate from non-integer prior.weights"
msgstr "nepavyko simuliuoti iš nesveikųjų skaičiaus prior.weights"

#. R/princomp.R: stop("cannot use 'cor = TRUE' with a constant variable")
#: R/princomp.R:0
msgid "cannot use 'cor = TRUE' with a constant variable"
msgstr "negalima naudoti 'cor = TRUE' su pastoviu kintamuoju"

#. R/t.test.R: stop("cannot use 'paired' in formula method")
#. R/wilcox.test.R: stop("cannot use 'paired' in formula method")
#: R/t.test.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "cannot use 'paired' in formula method"
msgstr "formulėje su duotais duomenimis negalima naudoti taškų"

#. R/ftable.R: stop("cannot use dots in formula with given data")
#: R/ftable.R:0
msgid "cannot use dots in formula with given data"
msgstr "formulėje su duotais duomenimis negalima naudoti taškų"

#. R/smspline.R: stop("cannot use more inner knots than unique 'x' values")
#: R/smspline.R:0
msgid "cannot use more inner knots than unique 'x' values"
msgstr "negalima naudoti daugiau vidinių mazgų negu unikalių 'x' reikšmių"

#. R/kernel.R: stop("coefficients do not add to 1")
#: R/kernel.R:0
msgid "coefficients do not add to 1"
msgstr "koeficientai neprideda iki 1"

#. R/approx.R: warning("collapsing to unique 'x' values")
#: R/approx.R:0
msgid "collapsing to unique 'x' values"
msgstr "susiskaidyti į unikalias 'x' reikšmes"

#. R/dendrogram.R: stop("column dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "column dendrogram ordering gave index of wrong length"
msgstr "stulpelių dendrogramų tvarkymas davė neteisingo ilgio indeksą"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast (sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast (sum to zero)"
msgstr "'contrast.obj' stulpelis turi apibrėžti kontrastą (suma lygi nuliui)"

#. R/ks.test.R: warning("computation of exact probability failed, returning Monte Carlo approximation")
#: R/ks.test.R:0
msgid "computation of exact probability failed, returning Monte Carlo approximation"
msgstr ""

#. R/contrast.R: stop("contrasts apply only to factors")
#: R/contrast.R:0
msgid "contrasts apply only to factors"
msgstr "kontrastai taikomi tik faktoriams"

#. R/contrast.R: stop("contrasts can be applied only to factors with 2 or more levels")
#: R/contrast.R:0
msgid "contrasts can be applied only to factors with 2 or more levels"
msgstr "kontrastai gali būti taikomi tik faktoriams su 2 ar daugiau lygių"

#. R/models.R: gettextf("contrasts dropped from factor %s", nm)
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s"
msgstr "kontrastai taikomi tik faktoriams"

#. R/models.R: gettextf("contrasts dropped from factor %s due to missing levels",     nm)
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s due to missing levels"
msgstr "kontrastai gali būti taikomi tik faktoriams su 2 ar daugiau lygių"

#. R/contr.poly.R: gettextf("contrasts not defined for %d degrees of freedom", n -     1)
#. R/contrast.R: gettextf("contrasts not defined for %d degrees of freedom", n -     1L)
#: R/contr.poly.R:0 R/contrast.R:0
msgid "contrasts not defined for %d degrees of freedom"
msgstr "kontrastai nėra apibrėžti %d laisvės laipsniams"

#. R/nlm.R: stop("convergence problem in zero finding: ", conditionMessage(val))
#: R/nlm.R:0
msgid "convergence problem in zero finding:"
msgstr "konvergencijos problema nustatant nulį:"

#. R/arma0.R: warning("converting non-invertible initial MA values")
#: R/arma0.R:0
msgid "converting non-invertible initial MA values"
msgstr "paverčiamos neapgręžiamosiomis pradinėmis MA reikšmėmis"

#. R/princomp.R: stop("covariance matrix is not non-negative definite")
#: R/princomp.R:0
msgid "covariance matrix is not non-negative definite"
msgstr "kovariacijos matrica yra neigiama"

#. R/spectrum.R: stop("coverage probability out of range [0,1)")
#: R/spectrum.R:0
msgid "coverage probability out of range [0,1)"
msgstr "aprėpties tikimybė nepatenka į intervalą [0,1)"

#. R/smspline.R: warning("cross-validation with non-unique 'x' values seems doubtful")
#: R/smspline.R:0
msgid "cross-validation with non-unique 'x' values seems doubtful"
msgstr "kryžminis patvirtinimas naudojant ne unikalias 'x' reikšmes atrodo abejotinas"

#. R/t.test.R: stop("data are essentially constant")
#: R/t.test.R:0
msgid "data are essentially constant"
msgstr "duomenys yra pastovūs"

#. R/HoltWinters.R: stop("data must be non-zero for multiplicative Holt-Winters")
#: R/HoltWinters.R:0
msgid "data must be non-zero for multiplicative Holt-Winters"
msgstr "duomenys neturi būti nuliniai multiplikaciniams Holt-Winter"

#. R/dendrogram.R: gettextf("dendrogram entries must be 1,2,..,%d (in any order), to be coercible to \"hclust\"",     n)
#: R/dendrogram.R:0
msgid "dendrogram entries must be 1,2,..,%d (in any order), to be coercible to \"hclust\""
msgstr "dendrogramos įrašai turi būti 1,2,..,%d (bet kokia tvarka), kad būtų verčiami į \"hclust\""

#. R/dendrogram.R: stop("dendrogram node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram node with non-positive #{branches}"
msgstr "dendrogramos mazgas su ne teigiamu #{branches}"

#. R/dendrogram.R: stop("dendrogram non-leaf node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram non-leaf node with non-positive #{branches}"
msgstr "dendrogramos ne lapo mazgas su ne teigiamu #{branches}"

#. R/model.tables.R: stop("design is unbalanced so cannot proceed")
#: R/model.tables.R:0
msgid "design is unbalanced so cannot proceed"
msgstr "dizainas yra nesubalansuotas, todėl negalima tęsti"

#. R/smspline.R: stop("df.offset must be numeric and >= 0")
#: R/smspline.R:0
#, fuzzy
msgid "df.offset must be numeric and >= 0"
msgstr "'offset' turi būti skaitinis"

#. R/cor.R: warning("diag(V) had non-positive or NA entries; the non-finite result may be dubious")
#: R/cor.R:0
#, fuzzy
msgid "diag(V) had non-positive or NA entries; the non-finite result may be dubious"
msgstr "diag(.) turėjo 0 arba NA įrašus; abejotinas ne baigtinis rezultatas"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "f() values at end points not of opposite sign"
#: R/nlm.R:0
msgid "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0"
msgstr "nepavyko išplėsti intervalo galutinio taško, kuris skirtas f(lower) * f(upper) <= 0"

#. R/cancor.R: stop("dimension 0 in 'x' or 'y'")
#: R/cancor.R:0
msgid "dimension 0 in 'x' or 'y'"
msgstr "'x' arba 'y' matavimo skaičius yra 0"

#. R/hclust.R: stop("dissimilarities of improper length")
#. R/hclust.R: warning("dissimilarities of improper length")
#: R/hclust.R:0
msgid "dissimilarities of improper length"
msgstr ""

#. R/cmdscale.R: stop("distances must be result of 'dist' or a square matrix")
#: R/cmdscale.R:0
msgid "distances must be result of 'dist' or a square matrix"
msgstr "atstumai turi būti 'dist' arba kvadratinės matricos rezultatas"

#. R/mantelhaen.test.R: stop("each dimension in table must be >= 2")
#: R/mantelhaen.test.R:0
msgid "each dimension in table must be >= 2"
msgstr "lentelėje kiekvienas matavimo skaičius turi būti >= 2"

#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.list))
#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.obj))
#: R/aov.R:0
msgid "each element of '%s' must be logical"
msgstr "kiekvienas '%s' elementas turi būti loginis"

#. R/model.tables.R: stop("eff.aovlist: non-orthogonal contrasts would give an incorrect answer")
#: R/model.tables.R:0
msgid "eff.aovlist: non-orthogonal contrasts would give an incorrect answer"
msgstr "eff.aovlist: ne ortogonalūs kontrastai duotų neteisingą atsakymą"

#. R/cmdscale.R: warning("eig=TRUE is disregarded when list.=FALSE")
#: R/cmdscale.R:0
msgid "eig=TRUE is disregarded when list.=FALSE"
msgstr "eig=TRUE nepaisoma, kai list.=FALSE"

#. R/cutree.R: stop("either 'k' or 'h' must be specified")
#: R/cutree.R:0
msgid "either 'k' or 'h' must be specified"
msgstr "turi būti nurodytas 'k' arba 'h'"

#. R/cutree.R: gettextf("elements of 'k' must be between 1 and %d", n)
#: R/cutree.R:0
msgid "elements of 'k' must be between 1 and %d"
msgstr "'k' elementai turi būti tarp 1 ir %d"

#. R/prop.test.R: stop("elements of 'n' must be positive")
#: R/prop.test.R:0
msgid "elements of 'n' must be positive"
msgstr "'n' elementai turi būti teigiamas"

#. R/prop.test.R: stop("elements of 'p' must be in (0,1)")
#: R/prop.test.R:0
msgid "elements of 'p' must be in (0,1)"
msgstr "'p' elementai turi būti intervale (0,1)"

#. R/prop.test.R: stop("elements of 'x' must be nonnegative")
#: R/prop.test.R:0
msgid "elements of 'x' must be nonnegative"
msgstr "'x' elementai turi būti neneigiami"

#. R/prop.test.R: stop("elements of 'x' must not be greater than those of 'n'")
#: R/prop.test.R:0
msgid "elements of 'x' must not be greater than those of 'n'"
msgstr "'x' elementai neturi būti didesnis už 'n'"

#. R/kmeans.R: stop("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers",     call. = FALSE)
#: R/kmeans.R:0
msgid "empty cluster: try a better set of initial centers"
msgstr "tuščias klasteris: išbandykite geresnį pradinių centrų rinkinį"

#. R/ARMAtheory.R: stop("empty model supplied")
#: R/ARMAtheory.R:0
msgid "empty model supplied"
msgstr "pateiktas tuščias modelis"

#. R/lm.R: warning("essentially perfect fit: summary may be unreliable")
#: R/lm.R:0
msgid "essentially perfect fit: summary may be unreliable"
msgstr "iš esmės puikiai tinka: santrauka gali būti nepatikima"

#. R/power.anova.test.R: stop("exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL")
#: R/power.anova.test.R:0
msgid "exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL"
msgstr "būtent vienas iš 'groups', 'n', 'between.var', 'within.var', 'power', 'sig.level' turi būti NULL"

#. R/power.R: stop("exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL")
#: R/power.R:0
msgid "exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL"
msgstr "būtent vienas iš 'n', 'delta', 'sd', 'power', 'sig.level' turi būti NULL"

#. R/power.R: stop("exactly one of 'n', 'p1', 'p2', 'power', and 'sig.level' must be NULL")
#: R/power.R:0
msgid "exactly one of 'n', 'p1', 'p2', 'power', and 'sig.level' must be NULL"
msgstr "būtent vienas iš 'n', 'p1', 'p2', 'power', 'sig.level' turi būti NULL"

#. R/ts.R: warning("extending time series when replacing values", call. = FALSE)
#: R/ts.R:0
msgid "extending time series when replacing values"
msgstr "laiko eilutės išplėtimas kai pakeičiamos reikšmės"

#. R/logLik.R: warning("extra arguments discarded")
#: R/logLik.R:0
msgid "extra arguments discarded"
msgstr "papildomi argumentai atmetami"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "f() values at end points not of opposite sign"
#: R/nlm.R:0
msgid "f() values at end points not of opposite sign"
msgstr "f() reikšmės galiniuose taškuose nėra priešingo ženklo"

#. R/nlm.R: stop("f.lower = f(lower) is NA")
#: R/nlm.R:0
msgid "f.lower = f(lower) is NA"
msgstr "f.lower = f(lower) yra NA"

#. R/nlm.R: stop("f.upper = f(upper) is NA")
#: R/nlm.R:0
msgid "f.upper = f(upper) is NA"
msgstr "f.upper = f(upper) yra NA"

#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#: R/factanal.R:0
msgid "factor analysis applies only to numerical variables"
msgstr "faktorių analizė taikoma tik skaitiniams kintamiesiems"

#. R/factanal.R: stop("factor analysis requires at least three variables")
#: R/factanal.R:0
msgid "factor analysis requires at least three variables"
msgstr "faktorių analizei reikia bent trijų kintamųjų"

#. R/reshape.R: stop("failed to guess time-varying variables from their names")
#: R/reshape.R:0
msgid "failed to guess time-varying variables from their names"
msgstr "nepavyko atspėti pagal laiką skirtingų kintamųjų iš jų pavadinimų"

#. R/lm.R: gettextf("family '%s' not implemented", fam)
#: R/lm.R:0
msgid "family '%s' not implemented"
msgstr "šeima '%s' neįdiegta"

#. R/loess.R: stop("first argument must be a \"loess\" object")
#: R/loess.R:0
msgid "first argument must be a \"loess\" object"
msgstr "pirmas argumentas turi būti \"loess\" objektas"

#. R/glm.R: warning("fitting to calculate the null deviance did not converge -- increase 'maxit'?")
#: R/glm.R:0
msgid "fitting to calculate the null deviance did not converge -- increase 'maxit'?"
msgstr "nulinio nukrypimo apskaičiavimas nekonvergavo - padidinti 'maxit'?"

#. R/family.R: gettextf("for the '%s' family, y must be a vector of 0 and 1's\nor a 2 column matrix where col 1 is no. successes and col 2 is no. failures",     FAMILY)
#: R/family.R:0
msgid ""
"for the '%s' family, y must be a vector of 0 and 1's\n"
"or a 2 column matrix where col 1 is no. successes and col 2 is no. failures"
msgstr ""
"'%s' šeimai y turi būti 0 ir 1 vektorius\n"
"arba 2 stulpelių matrica, kurioje 1 stulpelis yra sėkmių skaičius ir 2 stulpelyje yra nesėkmių skaičius"

#. R/nlsFunc.R: gettextf("formula '%s' must be of the form '~expr'", deparse1(object))
#: R/nlsFunc.R:0
msgid "formula '%s' must be of the form '~expr'"
msgstr "formulės '%s' forma turi būti '~expr'"

#. R/aggregate.R: stop("formula 'x' must have both left and right hand sides")
#: R/aggregate.R:0
#, fuzzy
msgid "formula 'x' must have both left and right hand sides"
msgstr "'formula' privalo turėti kairę ir dešinę puses"

#. R/StructTS.R: stop("frequency must be a positive integer >= 2 for BSM")
#: R/StructTS.R:0
msgid "frequency must be a positive integer >= 2 for BSM"
msgstr "selektyviame Bajeso metode (BSM) dažnis turi būti teigiamas sveikasis skaičius >= 2"

#. R/glm.R: warning("glm.fit: algorithm did not converge", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm did not converge"
msgstr "glm.fit: algoritmas nekonverguoja"

#. R/glm.R: warning("glm.fit: algorithm stopped at boundary value", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm stopped at boundary value"
msgstr "glm.fit: algoritmas sustojo ties ribine reikšme"

#. R/glm.R: warning("glm.fit: fitted probabilities numerically 0 or 1 occurred",     call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted probabilities numerically 0 or 1 occurred"
msgstr "glm.fit: atsirado tikimybės, kurios skaitine prasme yra 0 arba 1"

#. R/glm.R: warning("glm.fit: fitted rates numerically 0 occurred", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted rates numerically 0 occurred"
msgstr "glm.fit: atsirado normos, kurios skaitine prasme yra 0"

#. R/ansari.test.R: stop("grouping factor must have exactly 2 levels")
#. R/ks.test.R: stop("grouping factor must have exactly 2 levels")
#. R/mood.test.R: stop("grouping factor must have exactly 2 levels")
#. R/t.test.R: stop("grouping factor must have exactly 2 levels")
#. R/var.test.R: stop("grouping factor must have exactly 2 levels")
#. R/wilcox.test.R: stop("grouping factor must have exactly 2 levels")
#: R/ansari.test.R:0 R/ks.test.R:0 R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "grouping factor must have exactly 2 levels"
msgstr "grupavimo faktorius turi būti lygiai 2 lygių"

#. R/plot.lm.R: gettextf("hat values (leverages) are all = %s\n and there are no factor predictors; no plot no. 5",     format(mean(r.hat)))
#: R/plot.lm.R:0
msgid ""
"hat values (leverages) are all = %s\n"
" and there are no factor predictors; no plot no. 5"
msgstr ""
"reikšmės (svertai) yra visi = %s\n"
"ir nėra faktoriaus prediktoriaus; jokio brėžinio Nr. 5"

#. R/fisher.test.R: stop("if 'x' is not a matrix, 'y' must be given")
#. R/mcnemar.test.R: stop("if 'x' is not a matrix, 'y' must be given")
#: R/fisher.test.R:0 R/mcnemar.test.R:0
msgid "if 'x' is not a matrix, 'y' must be given"
msgstr "jei 'x' nėra matrica, turi būti pateiktas 'y'"

#. R/mantelhaen.test.R: stop("if 'x' is not an array, 'y' must be given")
#: R/mantelhaen.test.R:0
msgid "if 'x' is not an array, 'y' must be given"
msgstr "jei 'x' nėra masyvas, turi būti pateiktas 'y'"

#. R/mantelhaen.test.R: stop("if 'x' is not an array, 'z' must be given")
#: R/mantelhaen.test.R:0
msgid "if 'x' is not an array, 'z' must be given"
msgstr "jei 'x' nėra masyvas, turi būti pateiktas 'z'"

#. R/arima.R: stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
#. R/arma0.R: stop("if not a list, 'seasonal' must be a non-negative numeric vector of length 3")
#: R/arima.R:0 R/arma0.R:0
#, fuzzy
msgid "if not a list, 'seasonal' must be a non-negative numeric vector of length 3"
msgstr "'seasonal$order' turi būti neneigiamas skaitinis vektorius, kurio ilgis 3"

#. R/family.R: warning("ignoring prior weights")
#: R/family.R:0
msgid "ignoring prior weights"
msgstr "ankstesni svoriai ignoruojami"

#. R/lm.R: stop("incompatible dimensions")
#: R/lm.R:0
msgid "incompatible dimensions"
msgstr "nesuderinami matavimo skaičiai"

#. R/ts.R: stop("inconsistent specification of 'ar' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ar' order"
msgstr "tvarkos 'ar' nesuderinta specifikacija"

#. R/ts.R: stop("inconsistent specification of 'ma' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ma' order"
msgstr "tvarkos 'ma' nesuderinta specifikacija"

#. R/diffinv.R: stop("incorrect dimensions for 'xi'")
#: R/diffinv.R:0
msgid "incorrect dimensions for 'xi'"
msgstr "neteisingi 'xi' matavimo skaičiai"

#. R/binom.test.R: stop("incorrect length of 'x'")
#: R/binom.test.R:0
msgid "incorrect length of 'x'"
msgstr "'x' ilgis neteisingas"

#. R/ftable.R: stop("incorrect specification for 'col.vars'")
#: R/ftable.R:0
msgid "incorrect specification for 'col.vars'"
msgstr "neteisinga 'col.vars' specifikacija"

#. R/ftable.R: stop("incorrect specification for 'row.vars'")
#: R/ftable.R:0
msgid "incorrect specification for 'row.vars'"
msgstr "neteisinga 'row.vars' specifikacija"

#. R/ftable.R: stop("incorrect variable names in lhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in lhs of formula"
msgstr "neteisingi kintamųjų vardai, esantys formulės lhs"

#. R/ftable.R: stop("incorrect variable names in rhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in rhs of formula"
msgstr "neteisingi kintamųjų vardai, esantys formulės rhs"

#. R/bandwidths.R: gettextf("increasing bw.SJ() search interval (%d) to [%.4g,%.4g]",     itry, lower, upper)
#: R/bandwidths.R:0
msgid "increasing bw.SJ() search interval (%d) to [%.4g,%.4g]"
msgstr "padidinant bw.SJ() paieškos intervalą (%d) iki [%.4g,%.4g]"

#. R/kmeans.R: stop("initial centers are not distinct")
#: R/kmeans.R:0
msgid "initial centers are not distinct"
msgstr "pradiniai centrai nėra skirtingi"

#. R/constrOptim.R: stop("initial value is not in the interior of the feasible region")
#: R/constrOptim.R:0
msgid "initial value is not in the interior of the feasible region"
msgstr "pradinė reikšmė nėra matomos srities viduje"

#. R/glm.R: stop("inner loop 1; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 1; cannot correct step size"
msgstr "vidinis ciklas 1; negalima koreguoti žingsnio dydžio"

#. R/glm.R: stop("inner loop 2; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 2; cannot correct step size"
msgstr "vidinis ciklas 2; negalima koreguoti žingsnio dydžio"

#. R/ftable.R: stop("interactions are not allowed")
#. R/xtabs.R: stop("interactions are not allowed")
#: R/ftable.R:0 R/xtabs.R:0
msgid "interactions are not allowed"
msgstr "sąveikos negalimos"

#. R/bandwidths.R: gettextf("invalid '%s' argument", "x")
#. R/bandwidths.R: gettextf("invalid '%s' argument", "nb")
#. R/chisq.test.R: gettextf("invalid '%s' argument", "x")
#. R/loess.R: gettextf("invalid '%s' argument", "x")
#. R/loess.R: gettextf("invalid '%s' argument", "y")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "n")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "r")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "c")
#. R/runmed.R: gettextf("invalid '%s' argument", "k")
#. R/smooth.R: gettextf("invalid '%s' argument", "endrule")
#. R/symnum.R: gettextf("invalid '%s' argument", "abbr.colnames'")
#: R/bandwidths.R:0 R/chisq.test.R:0 R/loess.R:0 R/r2dtable.R:0 R/runmed.R:0
#: R/smooth.R:0 R/symnum.R:0
#, fuzzy
msgid "invalid '%s' argument"
msgstr "neteisingas 'use' argumentas"

#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "nrow(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "ncol(x)")
#. R/runmed.R: gettextf("invalid '%s' value", "length(x)")
#: R/bandwidths.R:0 R/kmeans.R:0 R/runmed.R:0
#, fuzzy
msgid "invalid '%s' value"
msgstr "neteisingas 'use' argumentas"

#. R/arima.R: stop("invalid 'SSinit'")
#: R/arima.R:0
msgid "invalid 'SSinit'"
msgstr "neteisingas 'SSinit'"

#. R/nls.R: stop("invalid 'attr(rhs, \"gradient\")'")
#: R/nls.R:0
msgid "invalid 'attr(rhs, \"gradient\")'"
msgstr ""

#. R/loess.R: stop("invalid 'control' argument")
#: R/loess.R:0
msgid "invalid 'control' argument"
msgstr "neteisingas 'control' argumentas"

#. R/smspline.R: stop("invalid 'control.spar'")
#: R/smspline.R:0
msgid "invalid 'control.spar'"
msgstr "neteisingas 'control.spar'"

#. R/models.R: stop("invalid 'data' argument")
#: R/models.R:0
msgid "invalid 'data' argument"
msgstr "neteisingas 'data' argumentas"

#. R/nlm.R: stop("invalid 'extendInt'; please report")
#: R/nlm.R:0
msgid "invalid 'extendInt'; please report"
msgstr "neteisingas 'extendInt'; praneškite apie tai"

#. R/smspline.R: stop("invalid 'keep.stuff'")
#: R/smspline.R:0
msgid "invalid 'keep.stuff'"
msgstr "neteisingas 'keep.stuff'"

#. R/lm.R: stop("invalid 'lm' object:  no 'terms' component")
#: R/lm.R:0
msgid "invalid 'lm' object:  no 'terms' component"
msgstr "neteisingas 'lm' objektas: nėra 'terms' komponentas"

#. R/glm.R: stop("invalid 'method' argument")
#: R/glm.R:0
msgid "invalid 'method' argument"
msgstr "neteisingas 'method' argumentas"

#. R/cutree.R: stop("invalid 'tree' ('merge' component)")
#: R/cutree.R:0
msgid "invalid 'tree' ('merge' component)"
msgstr "neteisingas 'tree' ('merge' komponentas)"

#. R/cor.R: stop("invalid 'use' argument")
#: R/cor.R:0
msgid "invalid 'use' argument"
msgstr "neteisingas 'use' argumentas"

#. R/dendrogram.R: stop("invalid (length 0) node in dendrogram")
#: R/dendrogram.R:0
msgid "invalid (length 0) node in dendrogram"
msgstr "neteisingas (0 ilgio) mazgas dendrogramoje"

#. R/loess.R: stop("invalid NCOL(X)")
#: R/loess.R:0
msgid "invalid NCOL(X)"
msgstr "neteisingas NCOL(X)"

#. R/loess.R: stop("invalid NROW(X)")
#: R/loess.R:0
msgid "invalid NROW(X)"
msgstr "neteisingas NCOL(X)"

#. R/loess.R: stop("invalid argument 'cell'")
#: R/loess.R:0
msgid "invalid argument 'cell'"
msgstr "neteisingas argumentas 'cell'"

#. R/loess.R: stop("invalid argument 'degree'")
#: R/loess.R:0
msgid "invalid argument 'degree'"
msgstr "neteisingas argumentas 'degree'"

#. R/family.R: stop("invalid argument 'lambda'")
#: R/family.R:0
msgid "invalid argument 'lambda'"
msgstr "neteisingas argumentas 'lambda'"

#. R/nafns.R: stop("invalid argument 'omit'")
#: R/nafns.R:0
msgid "invalid argument 'omit'"
msgstr "neteisingas argumentas 'omit'"

#. R/loess.R: stop("invalid argument 'span'")
#: R/loess.R:0
msgid "invalid argument 'span'"
msgstr "neteisingas argumentas 'span'"

#. R/nls-profile.R: stop("invalid argument to 'getProfile'")
#: R/nls-profile.R:0
msgid "invalid argument to 'getProfile'"
msgstr "neteisingas argumentas 'getProfile'"

#. R/ks.test.R: stop("invalid arguments")
#: R/ks.test.R:0
#, fuzzy
msgid "invalid arguments"
msgstr "neteisingas argumentas 'n'"

#. R/hclust.R: stop("invalid clustering method", paste("", method))
#: R/hclust.R:0
msgid "invalid clustering method"
msgstr "neteisingas klasterizavimo metodas"

#. R/hclust.R: stop("invalid dissimilarities")
#: R/hclust.R:0
msgid "invalid dissimilarities"
msgstr "neteisingi skirtumai"

#. R/dist.R: stop("invalid distance method")
#: R/dist.R:0
msgid "invalid distance method"
msgstr "neteisingas atstumo metodas"

#. R/glm.R: stop("invalid fitted means in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid fitted means in empty model"
msgstr "neteisingai pritaikyti vidurkiai tuščiame modelyje"

#. R/cor.test.R: stop("invalid formula")
#. R/models.R: stop("invalid formula")
#: R/cor.test.R:0 R/models.R:0
msgid "invalid formula"
msgstr "neteisinga formulė"

#. R/models.R: gettextf("invalid formula %s", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s"
msgstr "neleistina formulė %s"

#. R/models.R: gettextf("invalid formula %s: assignment is deprecated", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s: assignment is deprecated"
msgstr "neleistina formulė %s: priskyrimas nebenaudojamas"

#. R/models.R: gettextf("invalid formula %s: extraneous call to '%s' is deprecated",     deparse2(x), as.character(c.))
#: R/models.R:0
#, fuzzy
msgid "invalid formula %s: extraneous call to '%s' is deprecated"
msgstr "neleistina formulė %s: nebenaudojamas pašalinis iškvietimas į '%s'"

#. R/models.R: gettextf("invalid formula %s: not a call", deparse2(x))
#: R/models.R:0
msgid "invalid formula %s: not a call"
msgstr "neleistina formulė %s: ne iškvietimas"

#. R/deriv.R: stop("invalid formula in deriv")
#: R/deriv.R:0
msgid "invalid formula in deriv"
msgstr "neteisinga formulė, esanti deriv"

#. R/models.R: gettextf("invalid formula: %s", deparse2(x))
#: R/models.R:0
msgid "invalid formula: %s"
msgstr "netinkama formulė: %s"

#. R/approx.R: stop("invalid interpolation method")
#. R/spline.R: stop("invalid interpolation method")
#: R/approx.R:0 R/spline.R:0
msgid "invalid interpolation method"
msgstr "neteisingas interpoliavimo metodas"

#. R/hclust.R: stop("invalid length of members")
#: R/hclust.R:0
msgid "invalid length of members"
msgstr "neteisingas narių ilgis"

#. R/HoltWinters.R: stop("invalid length(x)")
#. R/approx.R: stop("invalid length(x)")
#. R/bandwidths.R: stop("invalid length(x)")
#. R/stl.R: stop("invalid length(x)")
#: R/HoltWinters.R:0 R/approx.R:0 R/bandwidths.R:0 R/stl.R:0
msgid "invalid length(x)"
msgstr "neteisingas length(x)"

#. R/glm.R: stop("invalid linear predictor values in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid linear predictor values in empty model"
msgstr "neteisingos tiesinio prediktoriaus reikšmės tuščiame modelyje"

#. R/lm.influence.R: stop("invalid model QR matrix")
#: R/lm.influence.R:0
msgid "invalid model QR matrix"
msgstr "neteisingas QR matricos modelis"

#. R/smspline.R: stop("invalid number of points")
#: R/smspline.R:0
msgid "invalid number of points"
msgstr "netinkamas taškų skaičius"

#. R/integrate.R: stop("invalid parameter values")
#: R/integrate.R:0
msgid "invalid parameter values"
msgstr "netinkamos parametro reikšmės"

#. R/models.R: stop("invalid response type")
#: R/models.R:0
msgid "invalid response type"
msgstr "neteisingas atsakymo tipas"

#. R/cmdscale.R: gettextf("invalid value of %s", "'n'")
#. R/density.R: gettextf("invalid value of %s", "length(x)")
#. R/diffinv.R: gettextf("invalid value of %s", "length(x)")
#. R/filter.R: gettextf("invalid value of %s", "NROW(x)")
#. R/filter.R: gettextf("invalid value of %s", "length(filter)")
#. R/kmeans.R: gettextf("invalid value of %s", "'k'")
#. R/spline.R: gettextf("invalid value of %s", "length(x)")
#. R/splinefun.R: gettextf("invalid value of %s", "length(x)")
#: R/cmdscale.R:0 R/density.R:0 R/diffinv.R:0 R/filter.R:0 R/kmeans.R:0
#: R/spline.R:0 R/splinefun.R:0
msgid "invalid value of %s"
msgstr "neleistina %s reikšmė"

#. R/loess.R: gettext("iterTrace = %d is not obeyed since iterations = %d")
#: R/loess.R:0
msgid "iterTrace = %d is not obeyed since iterations = %d"
msgstr "iterTrace = %d nepaisomas, nes iteracijos = %d"

#. R/identify.hclust.R: gettextf("k must be between 2 and %d", length(tree$height))
#: R/identify.hclust.R:0
msgid "k must be between 2 and %d"
msgstr "k turi būti tarp 2 ir %d"

#. R/fft.R: stop("length mismatch in convolution")
#: R/fft.R:0
msgid "length mismatch in convolution"
msgstr "ilgių nesutapimas sąsūkoje"

#. R/cov.wt.R: stop("length of 'center' must equal the number of columns in 'x'")
#: R/cov.wt.R:0
msgid "length of 'center' must equal the number of columns in 'x'"
msgstr "'center' ilgis turi būti lygus stulpelių 'x' skaičiui"

#. R/filter.R: stop("length of 'init' must equal length of 'filter'")
#: R/filter.R:0
msgid "length of 'init' must equal length of 'filter'"
msgstr "'init' ilgis turi būti lygus 'filter' ilgiui"

#. R/spectrum.R: stop("length of 'p' must be 1 or equal the number of columns of 'x'")
#: R/spectrum.R:0
msgid "length of 'p' must be 1 or equal the number of columns of 'x'"
msgstr "'p' ilgis turi būti 1 arba lygus stulpelių 'x' skaičiui"

#. R/glm.R: gettextf("length of 'start' should equal %d and correspond to initial coefs for %s",     nvars, paste(deparse(xnames), collapse = ", "))
#: R/glm.R:0
msgid "length of 'start' should equal %d and correspond to initial coefs for %s"
msgstr "'start' ilgis turėtų būti lygus %d ir atitikti pradinius %s koeficientus"

#. R/reshape.R: stop("length of 'v.names' does not evenly divide length of 'varying'")
#: R/reshape.R:0
msgid "length of 'v.names' does not evenly divide length of 'varying'"
msgstr "'v.names' ilgis netolygiai dalijasi iš 'varying' ilgio"

#. R/reshape.R: stop("length of 'varying' must be the product of length of 'v.names' and length of 'times'")
#: R/reshape.R:0
msgid "length of 'varying' must be the product of length of 'v.names' and length of 'times'"
msgstr "'varying' ilgis turi būti 'v.names' ir 'times' ilgio sandauga"

#. R/cov.wt.R: stop("length of 'wt' must equal the number of rows in 'x'")
#: R/cov.wt.R:0
msgid "length of 'wt' must equal the number of rows in 'x'"
msgstr "'wt' ilgis turi būti lygus eilučių skaičiui, esančiam 'x'"

#. R/addmargins.R: gettextf("length of FUN, %d,\n does not match the length of the margins, %d",     length(FUN), n.sid)
#: R/addmargins.R:0
msgid ""
"length of FUN, %d,\n"
" does not match the length of the margins, %d"
msgstr ""
"FUN ilgis, %d\n"
"neatitinka paraštės ilgio, %d"

#. R/biplot.R: stop("length of choices must be 2")
#: R/biplot.R:0
msgid "length of choices must be 2"
msgstr "pasirinkimo ilgis turi būti 2"

#. R/smspline.R: stop("lengths of 'x' and 'w' must match")
#: R/smspline.R:0
msgid "lengths of 'x' and 'w' must match"
msgstr "'x' ir 'w' ilgiai turi sutapti"

#. R/arima.R: stop("lengths of 'x' and 'xreg' do not match")
#. R/arma0.R: stop("lengths of 'x' and 'xreg' do not match")
#: R/arima.R:0 R/arma0.R:0
msgid "lengths of 'x' and 'xreg' do not match"
msgstr "nesutampa 'x' ir 'xreg' ilgiai"

#. R/nls-profile.R: warning("levels truncated to positive values only")
#: R/nls-profile.R:0
msgid "levels truncated to positive values only"
msgstr "lygiai sutrumpinti tik iki teigiamų reikšmių"

#. R/family.R: gettextf("link \"%s\" not available for %s family; available links are %s",     linktemp, family, paste(sQuote(okLinks), collapse = ", "))
#: R/family.R:0
msgid "link \"%s\" not available for %s family; available links are %s"
msgstr "nuoroda \"%s\" nėra galima šeimai %s; galimo nuorodos yra %s"

#. R/lm.R: stop("lm object does not have a proper 'qr' component.\n Rank zero or should not have used lm(.., qr=FALSE).")
#: R/lm.R:0
msgid ""
"lm object does not have a proper 'qr' component.\n"
" Rank zero or should not have used lm(.., qr=FALSE)."
msgstr ""
"objektas lm neturi tinkamo 'qr' komponento.\n"
"Nulinis rangas arba neturėtų būti naudojamas lm(.., qr=FALSE)."

#. R/nlminb.R: stop("logical 'hessian' argument not allowed.  See documentation.")
#: R/nlminb.R:0
msgid "logical 'hessian' argument not allowed.  See documentation."
msgstr "loginis 'hessian' parametras negalimas. Skaitykite dokumentaciją."

#. R/nlm.R: stop("lower < upper is not fulfilled")
#: R/nlm.R:0
#, fuzzy
msgid "lower < upper is not fulfilled"
msgstr "apatinis < viršutinis nėra įvykdyti"

#. R/lm.R: message("lower-rank qr: determining non-estimable cases")
#: R/lm.R:0
msgid "lower-rank qr: determining non-estimable cases"
msgstr ""

#. R/glm.R: stop("maximum number of iterations must be > 0")
#: R/glm.R:0
msgid "maximum number of iterations must be > 0"
msgstr "maksimalus iteracijų skaičius turi būti > 0"

#. R/optim.R: stop("method = \"Brent\" is only available for one-dimensional optimization")
#: R/optim.R:0
msgid "method = \"Brent\" is only available for one-dimensional optimization"
msgstr "metodas = \"Brent\" yra prieinamas tik vieno matmens optimizavimui"

#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#: R/lm.R:0
msgid "method = '%s' is not supported. Using 'qr'"
msgstr "metodas = '%s' nepalaikomas. Naudoti 'qr'"

#. R/optim.R: warning("method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'")
#: R/optim.R:0
msgid "method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'"
msgstr "metodas L-BFGS-B naudoja 'factr' (ir 'pgtol') vietoj 'reltol' ir 'abstol'"

#. R/dendrogram.R: warning("midcache() of non-binary dendrograms only partly implemented")
#: R/dendrogram.R:0
msgid "midcache() of non-binary dendrograms only partly implemented"
msgstr "midcache() ne dvejetainių dendrogramų įgyvendinimas tik iš dalies"

#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#: R/bandwidths.R:0
msgid "minimum occurred at one end of the range"
msgstr "mažiausias buvo viename diapazono gale"

#. R/ppr.R: stop("mismatched 'x' and 'weights'")
#: R/ppr.R:0
#, fuzzy
msgid "mismatched 'x' and 'weights'"
msgstr "'x' ir 'y' nesutampa"

#. R/ppr.R: stop("mismatched 'x' and 'y'")
#: R/ppr.R:0
msgid "mismatched 'x' and 'y'"
msgstr "'x' ir 'y' nesutampa"

#. R/lsfit.R: warning("missing observations deleted")
#: R/lsfit.R:0
msgid "missing observations deleted"
msgstr "trūkstami stebėjimai pašalinti"

#. R/smspline.R: stop("missing or infinite values in inputs are not allowed")
#: R/smspline.R:0
msgid "missing or infinite values in inputs are not allowed"
msgstr "trūkstamos arba begalinės reikšmės įvestyse negalimos"

#. R/lm.R: stop("missing or negative weights not allowed")
#. R/nls.R: stop("missing or negative weights not allowed")
#: R/lm.R:0 R/nls.R:0
msgid "missing or negative weights not allowed"
msgstr "trūkstami arba neigiami svoriai negalimi"

#. R/quantile.R: stop("missing values and NaN's not allowed if 'na.rm' is FALSE")
#: R/quantile.R:0
msgid "missing values and NaN's not allowed if 'na.rm' is FALSE"
msgstr "trūkstamos reikšmės arba NaN negalimi, jei 'na.rm' yra FALSE"

#. R/contr.poly.R: stop("missing values are not allowed in 'poly'")
#: R/contr.poly.R:0
msgid "missing values are not allowed in 'poly'"
msgstr "trūkstamos reikšmės negalimos 'poly'"

#. R/filter.R: stop("missing values in 'filter'")
#: R/filter.R:0
msgid "missing values in 'filter'"
msgstr "trūksta reikšmių 'filter'"

#. R/nafns.R: stop("missing values in object")
#: R/nafns.R:0
msgid "missing values in object"
msgstr "objekte nėra reikšmių"

#. R/isoreg.R: stop("missing values not allowed")
#: R/isoreg.R:0
msgid "missing values not allowed"
msgstr "trūkstamos reikšmės negalimos"

#. R/models.R: stop("model frame and formula mismatch in model.matrix()")
#: R/models.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr "modelio sistemos ir formulės neatitikimas model.matrix()"

#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#: R/AIC.R:0
msgid "models are not all fitted to the same number of observations"
msgstr "ne visi modeliai pritaikyti vienodam stebėjimų skaičiui"

#. R/glm.R: stop("models were not all fitted to the same size of dataset")
#. R/lm.R: stop("models were not all fitted to the same size of dataset")
#. R/mlm.R: stop("models were not all fitted to the same size of dataset")
#: R/glm.R:0 R/lm.R:0 R/mlm.R:0
msgid "models were not all fitted to the same size of dataset"
msgstr "ne visi modeliai buvo pritaikyti to paties dydžio duomenų rinkiniui"

#. R/glm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/lm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/loess.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/mlm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/nls.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0 R/nls.R:0
msgid "models with response %s removed because response differs from model 1"
msgstr "modeliai, kurių atsakas %s, pašalintas, nes atsakas skiriasi nuo 1 modelio"

#. R/kmeans.R: stop("more cluster centers than data points")
#: R/kmeans.R:0
msgid "more cluster centers than data points"
msgstr "daugiau klasterio centrų nei duomenų taškų"

#. R/kmeans.R: stop("more cluster centers than distinct data points.")
#: R/kmeans.R:0
msgid "more cluster centers than distinct data points."
msgstr "daugiau klasterio centrų nei atskirų duomenų taškų."

#. R/reshape.R: gettextf("multiple rows match for %s=%s: first taken", timevar,     times[i])
#: R/reshape.R:0
msgid "multiple rows match for %s=%s: first taken"
msgstr ""

#. R/dummy.coef.R: stop("multivariate case with missing coefficients is not yet implemented")
#: R/dummy.coef.R:0
msgid "multivariate case with missing coefficients is not yet implemented"
msgstr "daugiamatis atvejis su trūkstamais koeficientais dar neįgyvendintas"

#. R/symnum.R: stop("must have 2 'symbols' for logical 'x' argument")
#: R/symnum.R:0
msgid "must have 2 'symbols' for logical 'x' argument"
msgstr "turi būti 2 'symbols' loginiam 'x' argumentui"

#. R/zzModels.R: stop("must have at least 4 observations to fit an 'SSfol' model")
#: R/zzModels.R:0
msgid "must have at least 4 observations to fit an 'SSfol' model"
msgstr "turi būti bent 4 stebėjimai, kad atitiktų 'SSfol' modelį"

#. R/zzModels.R: stop("must have length of response = length of second argument to 'SSfol'")
#: R/zzModels.R:0
msgid "must have length of response = length of second argument to 'SSfol'"
msgstr "turi būti atsakymo ilgis = antrojo argumento 'SSfol' ilgis"

#. R/hclust.R: stop("must have n >= 2 objects to cluster")
#: R/hclust.R:0
msgid "must have n >= 2 objects to cluster"
msgstr "turi būti n >= 2 objektų, kuriuos sugrupuoti"

#. R/kmeans.R: stop("must have same number of columns in 'x' and 'centers'")
#: R/kmeans.R:0
msgid "must have same number of columns in 'x' and 'centers'"
msgstr "'x' ir 'centers' turi turėti vienodą stulpelių skaičių"

#. R/smspline.R: stop("must not specify both 'spar' and 'lambda'")
#: R/smspline.R:0
msgid "must not specify both 'spar' and 'lambda'"
msgstr "neturi nurodyti abiejų 'spar' ir 'lambda'"

#. R/spectrum.R: stop("must specify 'spans' or a valid kernel")
#: R/spectrum.R:0
msgid "must specify 'spans' or a valid kernel"
msgstr "turi nurodyti 'spans' arba tinkamą branduolį"

#. R/xtabs.R: stop("must supply 'formula' or 'data'")
#: R/xtabs.R:0
#, fuzzy
msgid "must supply 'formula' or 'data'"
msgstr "turite pateikti arba 'formula', arba 'data'"

#. R/contr.poly.R: stop("must supply one or more vectors")
#: R/contr.poly.R:0
msgid "must supply one or more vectors"
msgstr "turite pateikti vieną ar daugiau vektorių"

#. R/model.tables.R: stop("na.action must be a function")
#: R/model.tables.R:0
msgid "na.action must be a function"
msgstr "na.action turi būti funkcija"

#. R/fisher.test.R: stop("need 2 or more non-zero column marginals")
#: R/fisher.test.R:0
msgid "need 2 or more non-zero column marginals"
msgstr "reikia 2 arba daugiau nenulinių stulpelių ribų"

#. R/fisher.test.R: stop("need 2 or more non-zero row marginals")
#: R/fisher.test.R:0
msgid "need 2 or more non-zero row marginals"
msgstr "reikia 2 arba daugiau nenulinių eilučių ribų"

#. R/family.R: stop("need CRAN package 'SuppDists' for simulation from the 'inverse.gaussian' family")
#: R/family.R:0
msgid "need CRAN package 'SuppDists' for simulation from the 'inverse.gaussian' family"
msgstr "reikalingas CRAN paketas 'SuppDists' simuliacijai iš šeimos 'inverse.gaussian'"

#. R/update.R: stop("need an object with call component")
#: R/update.R:0
msgid "need an object with call component"
msgstr "reikia objekto su iškvietimo komponentu"

#. R/bandwidths.R: stop("need at least 2 data points")
#: R/bandwidths.R:0
msgid "need at least 2 data points"
msgstr "reikia bent 2 duomenų taškų"

#. R/HoltWinters.R: stop("need at least 2 periods to compute seasonal start values")
#: R/HoltWinters.R:0
msgid "need at least 2 periods to compute seasonal start values"
msgstr "norint apskaičiuoti sezono pradžios reikšmes, reikia bent 2 periodų"

#. R/density.R: stop("need at least 2 points to select a bandwidth automatically")
#: R/density.R:0
msgid "need at least 2 points to select a bandwidth automatically"
msgstr "norint automatiškai pasirinkti pralaidumą, reikia bent 2 taškų"

#. R/smspline.R: stop("need at least four unique 'x' values")
#: R/smspline.R:0
msgid "need at least four unique 'x' values"
msgstr "reikia bent keturių unikalių 'x' reikšmių"

#. R/approx.R: stop("need at least two non-NA values to interpolate")
#: R/approx.R:0
msgid "need at least two non-NA values to interpolate"
msgstr "norint interpoliuoti, reikia bent dviejų ne NA reikšmių"

#. R/hclust.R: stop("need dendrograms where all leaves have labels")
#: R/hclust.R:0
msgid "need dendrograms where all leaves have labels"
msgstr "reikia dendrogramų ten, kur visi lapai turi etiketes"

#. R/manova.R: stop("need multiple responses")
#: R/manova.R:0
msgid "need multiple responses"
msgstr "reikia kelių atsakymų"

#. R/median.R: stop("need numeric data")
#: R/median.R:0
msgid "need numeric data"
msgstr "reikia skaitinių duomenų"

#. R/smspline.R: stop("need result of smooth.spline(keep.data = TRUE)")
#: R/smspline.R:0
msgid "need result of smooth.spline(keep.data = TRUE)"
msgstr "reikia smooth.spline(keep.data = TRUE) rezultato"

#. R/family.R: stop("negative values not allowed for the 'Poisson' family")
#: R/family.R:0
msgid "negative values not allowed for the 'Poisson' family"
msgstr "neigiamos reikšmės negalimos 'Poisson' šeimai"

#. R/family.R: stop("negative values not allowed for the 'quasiPoisson' family")
#: R/family.R:0
msgid "negative values not allowed for the 'quasiPoisson' family"
msgstr "neigiamos reikšmės negalimos 'quasiPoisson' šeimai"

#. R/glm.R: stop("negative weights not allowed")
#. R/lsfit.R: stop("negative weights not allowed")
#: R/glm.R:0 R/lsfit.R:0
msgid "negative weights not allowed"
msgstr "neigiami svoriai negalimi"

#. R/factanal.R: stop("neither 'x' nor 'covmat' supplied")
#: R/factanal.R:0
msgid "neither 'x' nor 'covmat' supplied"
msgstr "nepateikti nei 'x', nei 'covmat'"

#. R/logLik.R: stop("no \"nobs\" attribute is available")
#: R/logLik.R:0
msgid "no \"nobs\" attribute is available"
msgstr "nėra prieinamų \"nobs\" atributų"

#. R/add.R: stop("no 'add1' method implemented for \"mlm\" models")
#: R/add.R:0
msgid "no 'add1' method implemented for \"mlm\" models"
msgstr "nėra 'add1' metodo taikomo \"mlm\" modeliams"

#. R/stepfun.R: stop("no 'as.stepfun' method available for 'x'")
#: R/stepfun.R:0
msgid "no 'as.stepfun' method available for 'x'"
msgstr "nėra 'as.stepfun' metodo, skirto 'x'"

#. R/add.R: stop("no 'drop1' method for \"mlm\" models")
#: R/add.R:0
msgid "no 'drop1' method for \"mlm\" models"
msgstr "nėra 'drop1' metodo \"mlm\" modeliams"

#. R/selfStart.R: gettextf("no 'getInitial' method found for \"%s\" objects", data.class(object))
#: R/selfStart.R:0
msgid "no 'getInitial' method found for \"%s\" objects"
msgstr "nėra 'getInitial' metodo surasto \"%s\" objektams"

#. R/logLik.R: warning("no 'nobs' method is available")
#. R/logLik.R: stop("no 'nobs' method is available")
#: R/logLik.R:0
msgid "no 'nobs' method is available"
msgstr "nėra 'nobs' metodo"

#. R/reshape.R: stop("no 'reshapeWide' attribute, must specify 'varying'")
#: R/reshape.R:0
msgid "no 'reshapeWide' attribute, must specify 'varying'"
msgstr "nėra 'reshapeWide' atributo, nurodykite 'varying'"

#. R/aov.R: stop("no degrees of freedom for residuals")
#: R/aov.R:0
msgid "no degrees of freedom for residuals"
msgstr "nėra laisvės laipsnių liekanoms"

#. R/TukeyHSD.R: stop("no factors in the fitted model")
#: R/TukeyHSD.R:0
msgid "no factors in the fitted model"
msgstr "nėra faktorių pritaikytame modelyje"

#. R/smspline.R: stop("no finite observations")
#: R/smspline.R:0
msgid "no finite observations"
msgstr "nėra baigtinių stebėjimų"

#. R/loess.R: stop("no models to compare")
#: R/loess.R:0
msgid "no models to compare"
msgstr "nėra modelių, kuriuos galima lyginti"

#. R/glm.R: gettextf("no observations informative at iteration %d", iter)
#: R/glm.R:0
msgid "no observations informative at iteration %d"
msgstr "nėra informatyvių pastebėjimų iteracijoje %d"

#. R/nls.R: stop("no parameters to fit")
#: R/nls.R:0
msgid "no parameters to fit"
msgstr "nėra tinkamų parametrų"

#. R/ts.R: stop("no replacement values supplied")
#: R/ts.R:0
msgid "no replacement values supplied"
msgstr "nepateikta pakeitimo reikšmių"

#. R/aggregate.R: stop("no rows to aggregate")
#: R/aggregate.R:0
msgid "no rows to aggregate"
msgstr "nėra eilučių, kurias agreguoti"

#. R/prcomp.R: stop("no scores are available: refit with 'retx=TRUE'")
#: R/prcomp.R:0
msgid "no scores are available: refit with 'retx=TRUE'"
msgstr "rezultatų nėra: pakartokite naudodami 'retx=TRUE'"

#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#: R/nlm.R:0
msgid "no sign change found in %d iterations"
msgstr "ženklo pokyčio nerasta %d iteracijose"

#. R/bandwidths.R: stop("no solution in the specified range of bandwidths")
#: R/bandwidths.R:0
msgid "no solution in the specified range of bandwidths"
msgstr "nėra sprendimo nurodytame pralaidumo diapazone"

#. R/nls.R: stop("no starting values specified")
#: R/nls.R:0
msgid "no starting values specified"
msgstr "nėra nurodytų pradinių reikšmių"

#. R/factanal.R: stop("no starting values supplied")
#: R/factanal.R:0
msgid "no starting values supplied"
msgstr "nėra pateiktų pradinių reikšmių"

#. R/models.R: stop("no terms component nor attribute")
#: R/models.R:0
msgid "no terms component nor attribute"
msgstr "nėra termų komponento nei atributo"

#. R/add.R: stop("no terms in scope")
#: R/add.R:0
msgid "no terms in scope"
msgstr "nėra termų taikymo srityje"

#. R/add.R: stop("no terms in scope for adding to object")
#: R/add.R:0
msgid "no terms in scope for adding to object"
msgstr "nėra termų taikymo srityje pridedant prie objekto"

#. R/ts.R: stop("no time series supplied")
#: R/ts.R:0
msgid "no time series supplied"
msgstr "nėra pateikta laiko eilučių"

#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#: R/glm.R:0
msgid "no valid set of coefficients has been found: please supply starting values"
msgstr "nerastas tinkamas koeficientų rinkinys: pateikite pradines reikšmes"

#. R/lm.influence.R: stop("non-NA residual length does not match cases used in fitting")
#: R/lm.influence.R:0
msgid "non-NA residual length does not match cases used in fitting"
msgstr "ne NA liekanos ilgis nesutampa su atvejais, naudojamais taikyme"

#. R/model.tables.R: gettextf("non-factors ignored: %s", paste(names(nn), collapse = ", "))
#: R/model.tables.R:0
msgid "non-factors ignored: %s"
msgstr "ignruoti ne faktoriai: %s"

#. R/density.R: stop("non-finite 'bw'")
#: R/density.R:0
msgid "non-finite 'bw'"
msgstr "nebaigtinis 'bw'"

#. R/density.R: stop("non-finite 'from'")
#: R/density.R:0
msgid "non-finite 'from'"
msgstr "nebaigtinis 'from'"

#. R/density.R: stop("non-finite 'to'")
#: R/density.R:0
msgid "non-finite 'to'"
msgstr "nebaigtinis 'to'"

#. R/glm.R: gettextf("non-finite coefficients at iteration %d", iter)
#: R/glm.R:0
msgid "non-finite coefficients at iteration %d"
msgstr "nebaigtiniai koeficientai iteracijoje %d"

#. R/family.R: gettextf("non-integer #successes in a %s glm!", FAMILY)
#: R/family.R:0
msgid "non-integer #successes in a %s glm!"
msgstr "ne sveikieji #successes, esantys %s glm!"

#. R/family.R: gettextf("non-integer counts in a %s glm!", FAMILY)
#: R/family.R:0
msgid "non-integer counts in a %s glm!"
msgstr "ne sveikieji skaičiai %s glm!"

#. R/ts.R: warning("non-intersecting series")
#: R/ts.R:0
msgid "non-intersecting series"
msgstr "nesikertančios eilutės"

#. R/dendrogram.R: stop("non-leaf subtree of length 0")
#: R/dendrogram.R:0
msgid "non-leaf subtree of length 0"
msgstr "ne lapo pomedis, kurio ilgis 0"

#. R/models.R: warning("non-list contrasts argument ignored")
#: R/models.R:0
msgid "non-list contrasts argument ignored"
msgstr "nepaisoma sąrašo kontrastų argumento"

#. R/family.R: stop("non-positive values not allowed for the 'Gamma' family")
#: R/family.R:0
msgid "non-positive values not allowed for the 'Gamma' family"
msgstr "'Gamma' šeimai leidžiamos ne teigiamos reikšmės"

#. R/dist.R: warning("non-square matrix")
#: R/dist.R:0
msgid "non-square matrix"
msgstr "nekvadratinė matrica"

#. R/arima.R: stop("non-stationary AR part")
#. R/arma0.R: stop("non-stationary AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary AR part"
msgstr "nestacionari AR dalis"

#. R/arima.R: stop("non-stationary AR part from CSS")
#: R/arima.R:0
msgid "non-stationary AR part from CSS"
msgstr "nestacionari AR dalis iš CSS"

#. R/arima.R: stop("non-stationary seasonal AR part")
#. R/arma0.R: stop("non-stationary seasonal AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary seasonal AR part"
msgstr "nestacionari sezoninė AR dalis"

#. R/arima.R: stop("non-stationary seasonal AR part from CSS")
#: R/arima.R:0
msgid "non-stationary seasonal AR part from CSS"
msgstr "nestacionari sezoninė AR dalis iš CSS"

#. R/ts.R: stop("non-time series not of the correct length")
#: R/ts.R:0
msgid "non-time series not of the correct length"
msgstr "nelaiko eilutės yra netinkamo ilgio"

#. R/smspline.R: stop("not a valid \"smooth.spline\" object")
#: R/smspline.R:0
msgid "not a valid \"smooth.spline\" object"
msgstr "negaliojantis objektas \"smooth.spline\""

#. R/stepfun.R: stop("not a valid step function")
#: R/stepfun.R:0
msgid "not a valid step function"
msgstr "netinkama žingsnio funkcija"

#. R/ts.R: stop("not all series have the same frequency")
#: R/ts.R:0
msgid "not all series have the same frequency"
msgstr "ne visos eilutės turi tą patį dažnį"

#. R/ts.R: stop("not all series have the same phase")
#: R/ts.R:0
msgid "not all series have the same phase"
msgstr "ne visos eilutės turi tą patį dažnį"

#. R/friedman.test.R: stop("not an unreplicated complete block design")
#. R/quade.test.R: stop("not an unreplicated complete block design")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "not an unreplicated complete block design"
msgstr "pakartotinai užbaigtas blokų dizainas"

#. R/var.test.R: gettextf("not enough '%s' observations", "x")
#. R/var.test.R: gettextf("not enough '%s' observations", "y")
#: R/var.test.R:0
#, fuzzy
msgid "not enough '%s' observations"
msgstr "nepakanka 'x' stebėjimų"

#. R/ks.test.R: stop("not enough 'x' data")
#: R/ks.test.R:0
msgid "not enough 'x' data"
msgstr "nepakanka 'x' duomenų"

#. R/ansari.test.R: stop("not enough 'x' observations")
#. R/t.test.R: stop("not enough 'x' observations")
#: R/ansari.test.R:0 R/t.test.R:0
msgid "not enough 'x' observations"
msgstr "nepakanka 'x' stebėjimų"

#. R/ks.test.R: stop("not enough 'y' data")
#: R/ks.test.R:0
msgid "not enough 'y' data"
msgstr "nepakanka 'y' duomenų"

#. R/ansari.test.R: stop("not enough 'y' observations")
#. R/t.test.R: stop("not enough 'y' observations")
#. R/wilcox.test.R: stop("not enough 'y' observations")
#: R/ansari.test.R:0 R/t.test.R:0 R/wilcox.test.R:0
msgid "not enough 'y' observations"
msgstr "nepakanka 'y' stebėjimų"

#. R/wilcox.test.R: stop("not enough (non-missing) 'x' observations")
#: R/wilcox.test.R:0
msgid "not enough (non-missing) 'x' observations"
msgstr "nepakanka 'x' stebėjimų"

#. R/poisson.test.R: stop("not enough data")
#. R/prop.test.R: stop("not enough data")
#: R/poisson.test.R:0 R/prop.test.R:0
msgid "not enough data"
msgstr "nepakanka duomenų"

#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#: R/contrast.R:0
msgid "not enough degrees of freedom to define contrasts"
msgstr "nepakanka laisvės laipsnių apibrėžti kontrastus"

#. R/cor.test.R: stop("not enough finite observations")
#: R/cor.test.R:0
msgid "not enough finite observations"
msgstr "nepakanka baigtinių stebėjimų"

#. R/oneway.test.R: stop("not enough groups")
#: R/oneway.test.R:0
msgid "not enough groups"
msgstr "nepakanka grupių"

#. R/fligner.test.R: stop("not enough observations")
#. R/kruskal.test.R: stop("not enough observations")
#. R/mood.test.R: stop("not enough observations")
#. R/oneway.test.R: stop("not enough observations")
#. R/t.test.R: stop("not enough observations")
#: R/fligner.test.R:0 R/kruskal.test.R:0 R/mood.test.R:0 R/oneway.test.R:0
#: R/t.test.R:0
msgid "not enough observations"
msgstr "nepakanka stebėjimų"

#. R/plot.lm.R: gettextf("not plotting observations with leverage one:\n  %s",     paste(which(isInf), collapse = ", "))
#: R/plot.lm.R:0
msgid ""
"not plotting observations with leverage one:\n"
"  %s"
msgstr ""
"nėra brėžinių pastebėjimų naudojant svertą:\n"
"  %s"

#. R/smspline.R: warning("not using invalid df; must have 1 < df <= n := #{unique x} = ",     nx)
#: R/smspline.R:0
msgid "not using invalid df; must have 1 < df <= n := #{unique x} ="
msgstr "nenaudojate negaliojančių df; turite pateikti 1 < df <= n, n = #{unique x} ="

#. R/ftable.R: stop("nothing to tabulate")
#: R/ftable.R:0
msgid "nothing to tabulate"
msgstr "nėra ko išdėstyti lentelių forma"

#. R/symnum.R: stop("number of 'cutpoints' must be one less than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one less than number of symbols"
msgstr "'cutpoints' skaičius turi būti vienu mažesnis, nei simbolių skaičius"

#. R/symnum.R: stop("number of 'cutpoints' must be one more than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one more than number of symbols"
msgstr "'cutpoints' skaičius turi būti vienu didesnis, nei simbolių skaičius"

#. R/kmeans.R: stop("number of cluster centres must lie between 1 and nrow(x)",     call. = FALSE)
#: R/kmeans.R:0
msgid "number of cluster centres must lie between 1 and nrow(x)"
msgstr "klasterio centrų skaičius turi būti tarp 1 ir nrow(x)"

#. R/ts.R: stop("number of differences must be a positive integer")
#: R/ts.R:0
msgid "number of differences must be a positive integer"
msgstr "skirtumų skaičius turi būti teigiamas sveikasis skaičius"

#. R/power.anova.test.R: stop("number of groups must be at least 2")
#: R/power.anova.test.R:0
msgid "number of groups must be at least 2"
msgstr "grupių skaičius turi būti mažiausiai 2"

#. R/smspline.R: stop("number of observations in 'x' and 'y' must match.")
#: R/smspline.R:0
msgid "number of observations in 'x' and 'y' must match."
msgstr "stebėjimų skaičius, esantis 'x' ir 'y' turi sutapti."

#. R/power.anova.test.R: stop("number of observations in each group must be at least 2")
#: R/power.anova.test.R:0
msgid "number of observations in each group must be at least 2"
msgstr "stebėjimų skaičius kiekvienoje grupėje turi būti mažiausiai 2"

#. R/glm.R: gettextf("number of offsets is %d should equal %d (number of observations)",     length(offset), NROW(Y))
#: R/glm.R:0
msgid "number of offsets is %d should equal %d (number of observations)"
msgstr "poslinkių skaičius yra %d ir turėtų būti lygus %d (stebėjimų skaičius)"

#. R/lm.R: gettextf("number of offsets is %d, should equal %d (number of observations)",     NROW(offset), ny)
#: R/lm.R:0
msgid "number of offsets is %d, should equal %d (number of observations)"
msgstr "poslinkių skaičius yra %d ir turėtų būti lygus %d (stebėjimų skaičius)"

#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#: R/add.R:0
msgid "number of rows in use has changed: remove missing values?"
msgstr "pasikeitė naudojamų eilučių skaičius: pašalinkite trūkstamas reikšmes?"

#. R/ar.R: stop("number of series in 'object' and 'newdata' do not match")
#: R/ar.R:0
msgid "number of series in 'object' and 'newdata' do not match"
msgstr "nesutampa skaičius eilučių, esančių 'object' ir 'newdata'"

#. R/ts.R: stop("number of values supplied is not a sub-multiple of the number of values to be replaced")
#: R/ts.R:0
msgid "number of values supplied is not a sub-multiple of the number of values to be replaced"
msgstr "pateiktų reikšmių skaičius nėra dalinis kartotinis tų reikšmių, kurias reikia pakeisti"

#. R/lsfit.R: gettextf("number of weights = %d should equal %d (number of responses)",     nwts, nry)
#: R/lsfit.R:0
msgid "number of weights = %d should equal %d (number of responses)"
msgstr "svorių skaičius =%d turėtų būti lygus %d (atsakymų skaičius)"

#. R/smspline.R: stop("number of weights must match number of observations.")
#: R/smspline.R:0
msgid "number of weights must match number of observations."
msgstr "svorių skaičius turi atitikti stebėjimų skaičių."

#. R/smspline.R: stop("numeric 'all.knots' must cover [0,1] (= the transformed data-range)")
#: R/smspline.R:0
msgid "numeric 'all.knots' must cover [0,1] (= the transformed data-range)"
msgstr "skaitiniai 'all.knots' turi apimti [0,1] (= transformuotą duomenų diapazoną)"

#. R/contrast.R: stop("numeric contrasts or contrast name expected")
#: R/contrast.R:0
msgid "numeric contrasts or contrast name expected"
msgstr "tikėtini skaitiniai kontrastai ar kontrasto pavadinimas"

#. R/ksmooth.R: stop("numeric y must be supplied.\nFor density estimation use density()")
#: R/ksmooth.R:0
msgid ""
"numeric y must be supplied.\n"
"For density estimation use density()"
msgstr ""
"skaitinis y turi būti pateiktas.\n"
"Tankio įvertinimui naudokite density()"

#. R/biplot.R: gettextf("object '%s' has no scores", deparse1(substitute(x)))
#: R/biplot.R:0
msgid "object '%s' has no scores"
msgstr "objektas '%s' neturi rezultatų"

#. R/manova.R: gettextf("object must be of class %s or %s", dQuote("manova"),     dQuote("maov"))
#: R/manova.R:0
msgid "object must be of class %s or %s"
msgstr "objektas turi būti klasės %s arba %s"

#. R/C.R: stop("object not interpretable as a factor")
#: R/C.R:0
msgid "object not interpretable as a factor"
msgstr "objektas nėra intepretuojamas kaip faktorius"

#. R/lsfit.R: warning("observations with 0 weight not used in calculating standard deviation")
#: R/lsfit.R:0
msgid "observations with 0 weight not used in calculating standard deviation"
msgstr "stebėjimai su 0 reikšmėmis yra nenaudojami standartinio nuokrypio skaičiavime"

#. R/lsfit.R: warning("observations with 0 weights not used")
#: R/lsfit.R:0
msgid "observations with 0 weights not used"
msgstr "stebėjimai su 0 reikšmėmis yra nenaudojami"

#. R/glm.R: warning("observations with zero weight not used for calculating dispersion")
#: R/glm.R:0
msgid "observations with zero weight not used for calculating dispersion"
msgstr "stebėjimai su nulinėmis reikšmėmis yra nenaudojami dispersijos skaičiavime"

#. R/optim.R: warning("one-dimensional optimization by Nelder-Mead is unreliable:\nuse \"Brent\" or optimize() directly")
#: R/optim.R:0
msgid ""
"one-dimensional optimization by Nelder-Mead is unreliable:\n"
"use \"Brent\" or optimize() directly"
msgstr ""
"vieno matavimo skaičiaus optimizavimas pagal Nelderio-Mido metodą yra nepatikimas:\n"
"naudokite \"Brent\" arba optimize() tiesiogiai"

#. R/cmdscale.R: gettextf("only %d of the first %d eigenvalues are > 0", k1, k)
#: R/cmdscale.R:0
msgid "only %d of the first %d eigenvalues are > 0"
msgstr "tik %d pirmųjų %d tikrinių reikšmių yra > 0"

#. R/loess.R: stop("only 1-4 predictors are allowed")
#: R/loess.R:0
msgid "only 1-4 predictors are allowed"
msgstr "leidžiami tik 1-4 prediktoriai"

#. R/StructTS.R: stop("only implemented for univariate time series")
#. R/arima.R: stop("only implemented for univariate time series")
#. R/arma0.R: stop("only implemented for univariate time series")
#. R/cpgram.R: stop("only implemented for univariate time series")
#: R/StructTS.R:0 R/arima.R:0 R/arma0.R:0 R/cpgram.R:0
msgid "only implemented for univariate time series"
msgstr "įgyvendinta tik vienmatėms laiko eilutėms"

#. R/ts.R: stop("only replacement of elements is allowed")
#: R/ts.R:0
msgid "only replacement of elements is allowed"
msgstr "leidžiama pakeisti tik elementus"

#. R/stl.R: stop("only univariate series are allowed")
#: R/stl.R:0
msgid "only univariate series are allowed"
msgstr "tik vienmatės eilutės yra leidžiamos"

#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#: R/HoltWinters.R:0
msgid "optimization difficulties: %s"
msgstr "optimizavimo kliūtys: %s"

#. R/HoltWinters.R: stop("optimization failure")
#: R/HoltWinters.R:0
msgid "optimization failure"
msgstr "optimizavimo triktis"

#. R/anova.R: warning("option \"show.coef.Pvalues\" is invalid: assuming TRUE")
#: R/anova.R:0
msgid "option \"show.coef.Pvalues\" is invalid: assuming TRUE"
msgstr "parinktis \"show.coef.Pvalues\" netinkama: darant prielaidą, kad TRUE"

#. R/anova.R: warning("option \"show.signif.stars\" is invalid: assuming TRUE")
#: R/anova.R:0
msgid "option \"show.signif.stars\" is invalid: assuming TRUE"
msgstr "parinktis \"show.signif.stars\" netinkama: darant prielaidą, kad TRUE"

#. R/contr.poly.R: gettextf("orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom",     n - 1)
#: R/contr.poly.R:0
msgid "orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom"
msgstr "stačiakampių polinomų negalima pavaizduoti pakankamai tiksliai laisvės laipsniui %d"

#. R/ks.test.R: warning("p-value will be approximate in the presence of ties")
#: R/ks.test.R:0
msgid "p-value will be approximate in the presence of ties"
msgstr "p-reikšmė bus apytikslė esant ryšiams"

#. R/nls.R: gettextf("parameters without starting value in 'data': %s", paste(nnn,     collapse = ", "))
#: R/nls.R:0
msgid "parameters without starting value in 'data': %s"
msgstr "parametrai be pradinės reikšmės, esantys 'data': %s"

#. R/smspline.R: stop("penalty must be numeric and > 0")
#: R/smspline.R:0
#, fuzzy
msgid "penalty must be numeric and > 0"
msgstr "'y' turi būti skaitinis"

#. R/pairwise.R: stop("pooling of SD is incompatible with paired tests")
#: R/pairwise.R:0
msgid "pooling of SD is incompatible with paired tests"
msgstr "SD kaupimas nesuderinamas su suporuotais testais"

#. R/family.R: stop("positive values only are allowed for the 'inverse.gaussian' family")
#: R/family.R:0
msgid "positive values only are allowed for the 'inverse.gaussian' family"
msgstr "teigiamos reikšmės yra leidžiamos tik 'inverse.gaussian' šeimai"

#. R/StructTS.R: gettextf("possible convergence problem: 'optim' gave code = %d and message %s",     res$convergence, sQuote(res$message))
#: R/StructTS.R:0
msgid "possible convergence problem: 'optim' gave code = %d and message %s"
msgstr "galima konvergencijos problema: 'optim' davė kodą = %d ir pranešimą %s"

#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d",     res$convergence)
#. R/arma0.R: gettextf("possible convergence problem: optim gave code = %d",     code)
#: R/arima.R:0 R/arma0.R:0
msgid "possible convergence problem: optim gave code = %d"
msgstr "galima konvergencijos problema: optim davė kodą = %d"

#. R/lm.R: gettext("prediction from rank-deficient fit")
#: R/lm.R:0
#, fuzzy
msgid "prediction from rank-deficient fit"
msgstr "prognozė dėl netinkamo rango gali būti klaidinanti"

#. R/lm.R: warning("predictions on current data refer to _future_ responses\n")
#: R/lm.R:0
msgid "predictions on current data refer to _future_ responses"
msgstr "dabartinių duomenų prognozės nurodo _future_ responses"

#. R/loess.R: stop("predictors must all be numeric")
#: R/loess.R:0
msgid "predictors must all be numeric"
msgstr "visi prediktoriai turi būti skaitiniai"

#. R/distn.R: stop("probabilities must be finite, non-negative and not all 0")
#: R/distn.R:0
msgid "probabilities must be finite, non-negative and not all 0"
msgstr "tikimybės turi būti baigtinės, neneigiamos ir nevisos 0"

#. R/chisq.test.R: stop("probabilities must be non-negative.")
#: R/chisq.test.R:0
msgid "probabilities must be non-negative."
msgstr "tikimybės turi būti neneigiamos."

#. R/chisq.test.R: stop("probabilities must sum to 1.")
#: R/chisq.test.R:0
msgid "probabilities must sum to 1."
msgstr "tikimybių suma turi būti 1."

#. R/glm-profile.R: stop("profiling has found a better solution, so original fit had not converged")
#: R/glm-profile.R:0
msgid "profiling has found a better solution, so original fit had not converged"
msgstr ""

#. R/optim.R: warning("read the documentation for 'trace' more carefully")
#: R/optim.R:0
msgid "read the documentation for 'trace' more carefully"
msgstr "atsargiau skaityti 'trace' dokumentaciją"

#. R/relevel.R: gettextf("ref = %d must be in 1L:%d", ref, nlev)
#: R/relevel.R:0
msgid "ref = %d must be in 1L:%d"
msgstr "ref = %d turi būti 1L:%d"

#. R/wilcox.test.R: warning("requested conf.level not achievable")
#: R/wilcox.test.R:0
msgid "requested conf.level not achievable"
msgstr "reikalaujamas conf.level nepasiekiamas"

#. R/factanal.R: stop("requested scores without an 'x' matrix")
#: R/factanal.R:0
msgid "requested scores without an 'x' matrix"
msgstr "prašomi rezultatai be 'x' matricos"

#. R/lm.R: warning("residual degrees of freedom in object suggest this is not an \"lm\" fit")
#: R/lm.R:0
msgid "residual degrees of freedom in object suggest this is not an \"lm\" fit"
msgstr "liekanų laisvės laipsniai objekte rodo, kad tai netinka \"lm\""

#. R/manova.R: gettextf("residuals have rank %d < %d", rss.qr$rank, ncol(resid))
#. R/mlm.R: gettextf("residuals have rank %d < %d", rss.qr$rank, pp)
#: R/manova.R:0 R/mlm.R:0
msgid "residuals have rank %d < %d"
msgstr "liekanos turi rangą %d < %d"

#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#: R/mlm.R:0
msgid "residuals have rank %s < %s"
msgstr "liekanos turi rangą %s < %s"

#. R/factanal.R: stop("response not allowed in formula")
#. R/prcomp.R: stop("response not allowed in formula")
#. R/princomp.R: stop("response not allowed in formula")
#: R/factanal.R:0 R/prcomp.R:0 R/princomp.R:0
msgid "response not allowed in formula"
msgstr "atsakymas neleidžiamas formulėje"

#. R/selfStart.R: stop("right-hand side of formula is not a call")
#: R/selfStart.R:0
#, fuzzy
msgid "right-hand side of formula is not a call"
msgstr "neleistina formulė %s: ne iškvietimas"

#. R/dendrogram.R: stop("row dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "row dendrogram ordering gave index of wrong length"
msgstr "eilučių dendrogramų išdėstymas davė netinkamo ilgio indeksą"

#. R/mantelhaen.test.R: stop("sample size in each stratum must be > 1")
#: R/mantelhaen.test.R:0
msgid "sample size in each stratum must be > 1"
msgstr "imties dydis kiekviename c turi būti >1"

#. R/shapiro.test.R: stop("sample size must be between 3 and 5000")
#: R/shapiro.test.R:0
msgid "sample size must be between 3 and 5000"
msgstr "imties dydis turi būti tarp 3 ir 5000"

#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "samples differ in location: cannot compute confidence set, returning NA"
msgstr "imtys skiriasi vietoje: negalima apskaičiuoti nustatyto pasikliautimo rinkinio, grąžina NA"

#. R/ts.R: stop("scatter plots only for univariate time series")
#: R/ts.R:0
msgid "scatter plots only for univariate time series"
msgstr "sklaidos diagramos tik vienmatėms laiko eilutėms"

#. R/add.R: stop("scope is not a subset of term labels")
#: R/add.R:0
msgid "scope is not a subset of term labels"
msgstr "taikymo sritis nėra termo etikečių pogrupis"

#. R/arima.R: warning("seasonal MA part of model is not invertible")
#. R/arma0.R: warning("seasonal MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "seasonal MA part of model is not invertible"
msgstr "sezoninė modelio MA dalis nėra apgręžiamoji"

#. R/ts.R: warning("series is corrupt, with no 'tsp' attribute")
#. R/ts.R: stop("series is corrupt, with no 'tsp' attribute")
#: R/ts.R:0
msgid "series is corrupt, with no 'tsp' attribute"
msgstr "eilutės yra sugadintos, be 'tsp' atributo"

#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d",     NROW(x), nn)
#: R/ts.R:0
msgid "series is corrupt: length %d with 'tsp' implying %d"
msgstr "eilutės yra sugadintos: ilgis %d su 'tsp' reiškia %d"

#. R/stl.R: stop("series is not periodic or has less than two periods")
#: R/stl.R:0
msgid "series is not periodic or has less than two periods"
msgstr "eilutės nėra periodinės arba turi mažiau nei du periodus"

#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#: R/nls.R:0
msgid "setVarying : 'vary' length must match length of parameters"
msgstr "setVarying : 'vary' ilgis turi atitikti parametrų ilgį"

#. R/models.R: gettextf("setting '%s' in terms.formula() is deprecated", "abb")
#. R/models.R: gettextf("setting '%s' in terms.formula() is deprecated", "neg.out")
#: R/models.R:0
msgid "setting '%s' in terms.formula() is deprecated"
msgstr ""

#. R/smspline.R: warning(wtxt, "\nsetting df = 1 __use with care!__")
#: R/smspline.R:0
#, fuzzy
msgid "setting df = 1 __use with care!__"
msgstr "nustatymą df = 1 __naudokite atsargiai!__"

#. R/lm.R: stop("simulate() is not yet implemented for multivariate lm()")
#: R/lm.R:0
msgid "simulate() is not yet implemented for multivariate lm()"
msgstr "simulate() dar neįdiegtas daugiamačiams lm()"

#. R/contrast.R: stop("singular contrast matrix")
#: R/contrast.R:0
msgid "singular contrast matrix"
msgstr "singuliari konstrastinė matrica"

#. R/glm.R: stop("singular fit encountered")
#. R/lm.R: stop("singular fit encountered")
#: R/glm.R:0 R/lm.R:0
msgid "singular fit encountered"
msgstr "singuliarus atitikimas įvyko"

#. R/nls.R: stop("singular gradient matrix at initial parameter estimates")
#: R/nls.R:0
msgid "singular gradient matrix at initial parameter estimates"
msgstr "pradinio parametro įverčių singuliari gradiento matrica"

#. R/ts-tests.R: stop("singularities in regression")
#: R/ts-tests.R:0
msgid "singularities in regression"
msgstr "singuliarumai regresijoje"

#. R/distn.R: stop("size != sum(x), i.e. one is wrong")
#: R/distn.R:0
msgid "size != sum(x), i.e. one is wrong"
msgstr "size != sum(x), t.y. vienas neteisingas"

#. R/hclust.R: stop("size cannot be NA nor exceed 65536")
#: R/hclust.R:0
msgid "size cannot be NA nor exceed 65536"
msgstr "dydis negali būti NA ir neviršyti 65536"

#. R/arima.R: warning("some AR parameters were fixed: setting transform.pars = FALSE")
#: R/arima.R:0
msgid "some AR parameters were fixed: setting transform.pars = FALSE"
msgstr "keli AR parametrai buvo nustatyti: transform.pars = FALSE"

#. R/arma0.R: warning("some ARMA parameters were fixed: setting transform.pars = FALSE")
#: R/arma0.R:0
msgid "some ARMA parameters were fixed: setting transform.pars = FALSE"
msgstr "keli ARMA parametrai buvo nustatyti: transform.pars = FALSE"

#. R/reshape.R: gettextf("some constant variables (%s) are really varying", paste(names(rval)[!really.constant],     collapse = ","))
#: R/reshape.R:0
msgid "some constant variables (%s) are really varying"
msgstr "kai kurie nuolatiniai kintamieji (%s) iš tikrųjų skiriasi"

#. R/kruskal.test.R: warning("some elements of 'x' are not numeric and will be coerced to numeric")
#: R/kruskal.test.R:0
msgid "some elements of 'x' are not numeric and will be coerced to numeric"
msgstr "kai kurie 'x' elementai nėra skaitiniai ir bus verčiami skaitiniais"

#. R/dummy.coef.R: warning("some terms will have NAs due to the limits of the method")
#: R/dummy.coef.R:0
msgid "some terms will have NAs due to the limits of the method"
msgstr "kai kurie terminai turės NA, dėl metodo apribojimų"

#. R/smspline.R: stop("some weights should be positive")
#: R/smspline.R:0
msgid "some weights should be positive"
msgstr "kai kurie svoriai turėtų būti teigiami"

#. R/loess.R: stop("specified parametric for all predictors")
#: R/loess.R:0
msgid "specified parametric for all predictors"
msgstr "nurodyti parametrai visiems prediktoriams"

#. R/loess.R: stop("specified the square of a factor predictor to be dropped when degree = 1")
#: R/loess.R:0
msgid "specified the square of a factor predictor to be dropped when degree = 1"
msgstr "nurodytas faktoriaus prediktoriaus kvadratas turi būti sumažintas, kai laipsnis = 1"

#. R/loess.R: stop("specified the square of a predictor to be dropped with only one numeric predictor")
#: R/loess.R:0
msgid "specified the square of a predictor to be dropped with only one numeric predictor"
msgstr "nurodytas faktoriaus prediktoriaus kvadratas turi būti sumažintas tik su vienu skaitiniu prediktoriumi"

#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#: R/distn.R:0
msgid "specify 'rate' or 'scale' but not both"
msgstr "nurodykite 'rate' arba 'scale', bet ne abu"

#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'k' and 'h'"
msgstr "nurodykite tiksliai vieną iš 'k' arba 'h'"

#. R/identify.hclust.R: stop("specify exactly one of 'which' and 'x'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'which' and 'x'"
msgstr "nurodykite tiksliai vieną iš 'which' ir 'x'"

#. R/splinefun.R: warning("spline: first and last y values differ - using y[1L] for both")
#: R/splinefun.R:0
msgid "spline: first and last y values differ - using y[1L] for both"
msgstr "spline: pirma ir paskutinė y reikšmės skiriasi - naudokite y[1L] abiem"

#. R/spline.R: warning("spline: first and last y values differ - using y[1] for both")
#: R/spline.R:0
msgid "spline: first and last y values differ - using y[1] for both"
msgstr "spline: pirma ir paskutinė y reikšmės skiriasi - naudokite y[1] abiem"

#. R/glm.R: warning("step size truncated due to divergence", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated due to divergence"
msgstr "žingsnio dydis sutrumpintas dėl nukrypimų"

#. R/glm.R: warning("step size truncated: out of bounds", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated: out of bounds"
msgstr "žingsnio dydis sutrumpinimas: už ribų"

#. R/stepfun.R: stop("stepfun: 'x' must be ordered increasingly")
#: R/stepfun.R:0
msgid "stepfun: 'x' must be ordered increasingly"
msgstr "stepfun: 'x' turi būti surikiuotas didėjančiai"

#. R/density.R: warning("sum(weights) != 1  -- will not get true density")
#: R/density.R:0
msgid "sum(weights) != 1  -- will not get true density"
msgstr "sum(weights) != 1 -- negaus tikrojo tankio"

#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#: R/cor.R:0
msgid "supply both 'x' and 'y' or a matrix-like 'x'"
msgstr "pateikite ir 'x', ir 'y' arba 'x' kaip matricą"

#. R/prop.test.R: stop("table 'x' should have 2 entries")
#: R/prop.test.R:0
msgid "table 'x' should have 2 entries"
msgstr "'x' lentelėje turi būti 2 įrašai"

#. R/cutree.R: stop("the 'height' component of 'tree' is not sorted (increasingly)")
#: R/cutree.R:0
msgid "the 'height' component of 'tree' is not sorted (increasingly)"
msgstr "'tree' komponentas 'height' nėra surūšiuotas (didėjančiai)"

#. R/lm.R: stop("the 'se.fit' argument is not yet implemented for \"mlm\" objects")
#: R/lm.R:0
msgid "the 'se.fit' argument is not yet implemented for \"mlm\" objects"
msgstr "'se.fit' argumentas nėra realizuotas \"mlm\" objektams"

#. R/aov.R: stop("the 'split' argument must be a list")
#: R/aov.R:0
msgid "the 'split' argument must be a list"
msgstr "'split' argumentas turi būti sąrašas"

#. R/poisson.test.R: stop("the case k > 2 is unimplemented")
#: R/poisson.test.R:0
msgid "the case k > 2 is unimplemented"
msgstr "atvejis k > 2 yra nerealizuotas"

#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#: R/aov.R:0
msgid "the contrast defined is empty (has no TRUE elements)"
msgstr "apibrėžtas kontrastas yra tuščias (neturi TRUE elementų)"

#. R/StructTS.R: stop("the first value of the time series must not be missing")
#: R/StructTS.R:0
msgid "the first value of the time series must not be missing"
msgstr "pirma laiko eilutės reikšmė turi būti netrūkstama"

#. R/glm.R: gettext("the following arguments to 'anova.glm' are invalid and dropped: ",     domain = "R-stats")
#: R/glm.R:0
msgid "the following arguments to 'anova.glm' are invalid and dropped:"
msgstr "šie argumentai 'anova.glm' yra neteisingi arba prarasti:"

#. R/StructTS.R: stop("the series is entirely NA")
#: R/StructTS.R:0
msgid "the series is entirely NA"
msgstr "eilutės yra NA"

#. R/reshape.R: warning("there are records with missing times, which will be dropped.")
#: R/reshape.R:0
msgid "there are records with missing times, which will be dropped."
msgstr "yra įrašų su trūkstamais laikais, kurie bus atmesti."

#. R/bartlett.test.R: stop("there must be at least 2 observations in each group")
#: R/bartlett.test.R:0
msgid "there must be at least 2 observations in each group"
msgstr "kiekvienoje grupėje turi būti bent 2 stebėjimai"

#. R/model.tables.R: stop("this fit does not inherit from \"lm\"")
#: R/model.tables.R:0
msgid "this fit does not inherit from \"lm\""
msgstr "šis tinkamumas nepaveldimas iš \"lm\""

#. R/ks.test.R: warning("ties should not be present for the one-sample Kolmogorov-Smirnov test")
#: R/ks.test.R:0
#, fuzzy
msgid "ties should not be present for the one-sample Kolmogorov-Smirnov test"
msgstr "ryšiai neturėtų būti pristatomi Kolmogorovo-Smirnovo testui"

#. R/ts.R: stop("time series contains internal NAs")
#: R/ts.R:0
msgid "time series contains internal NAs"
msgstr "laiko eilutės turi vidinių NA"

#. R/HoltWinters.R: stop("time series has no or less than 2 periods")
#: R/HoltWinters.R:0
msgid "time series has no or less than 2 periods"
msgstr "laiko eilutės visai neturi arba turi mažiau nei 2 periodus"

#. R/ts.R: stop("times to be replaced do not match")
#: R/ts.R:0
msgid "times to be replaced do not match"
msgstr "laikas, kurį reikia pakeisti, nesutampa"

#. R/lm.influence.R: stop("too few cases (with h_ii > 0), n < k")
#: R/lm.influence.R:0
#, fuzzy
msgid "too few cases (with h_ii > 0), n < k"
msgstr "per mažai atvejų i su h_ii > 0), n < k"

#. R/zzModels.R: stop("too few distinct input values to fit a Michaelis-Menten model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a Michaelis-Menten model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų Michaelio-Menteno modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit a biexponential")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a biexponential"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų dviem eksponentėm"

#. R/zzModels.R: stop("too few distinct input values to fit a four-parameter logistic")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a four-parameter logistic"
msgstr "per mažai skirtingų įvesties reikšmių, kad atitiktų keturių parametrų logistiką"

#. R/zzModels.R: stop("too few distinct input values to fit a logistic model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a logistic model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų logistiniam modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit an asymptotic regression model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų asimptotiniam regresijos modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOff' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOff' model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų 'asympOff' modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOrig' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOrig' model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų 'asympOrig' modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit the Gompertz model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Gompertz model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų Gompertz modeliui"

#. R/zzModels.R: stop("too few distinct input values to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Weibull growth model"
msgstr "per mažai skirtingų įvesties reikšmių, kad tiktų Veibulo augimo modeliui"

#. R/pairwise.R: stop("too few groups")
#: R/pairwise.R:0
msgid "too few groups"
msgstr "per mažai grupių"

#. R/arima.R: stop("too few non-missing observations")
#: R/arima.R:0
msgid "too few non-missing observations"
msgstr "per mažai netrūkstamų stebėjimų"

#. R/zzModels.R: stop("too few observations to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few observations to fit an asymptotic regression model"
msgstr "per mažai stebėjimų, kad atitiktų asimptotinį regresijos modelį"

#. R/ts.R: stop("too many replacement values supplied")
#: R/ts.R:0
msgid "too many replacement values supplied"
msgstr "pateikta per daug pakeitimo reikšmių"

#. R/arma0.R: warning("transformed ARMA parameters were fixed")
#: R/arma0.R:0
msgid "transformed ARMA parameters were fixed"
msgstr "buvo nustatyti transformuoti ARMA parametrai"

#. R/mantelhaen.test.R: gettextf("true common odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is greater than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is less than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true correlation is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/cor.test.R: gettextf("true correlation is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is less than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is not equal to %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true event rate is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/poisson.test.R: gettextf("true event rate is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
#, fuzzy
msgid "true location is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/wilcox.test.R: gettextf("true location is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is less than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true mean difference is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean difference is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true mean difference is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean difference is less than %s"
msgstr ""

#. R/t.test.R: gettextf("true mean difference is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean difference is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
#, fuzzy
msgid "true mean is less than %s"
msgstr "'m' yra mažiau negu 1"

#. R/t.test.R: gettextf("true mean is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is not equal to %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is greater than %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
#, fuzzy
msgid "true odds ratio is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/fisher.test.R: gettextf("true odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is not equal to %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is greater than %s", p,     domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is greater than %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is less than %s", p, domain = "R-stats")
#: R/binom.test.R:0
#, fuzzy
msgid "true probability of success is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/binom.test.R: gettextf("true probability of success is not equal to %s", p,     domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is greater than %s", paste((1:l)[OK],     collapse = ", "), NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is greater than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is less than %s", paste((1:l)[OK],     collapse = ", "), NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is less than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is not equal to %s", paste((1:l)[OK],     collapse = ", "), NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion is greater than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion is greater than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion is less than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
#, fuzzy
msgid "true proportion is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/prop.test.R: gettextf("true proportion is not equal to %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion is not equal to %s"
msgstr ""

#. R/poisson.test.R: gettextf("true rate ratio is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true rate ratio is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true rate ratio is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/poisson.test.R: gettextf("true rate ratio is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is not equal to %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is greater than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is greater than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is less than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is less than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is not equal to %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is not equal to %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is greater than %s", ratio,     domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is greater than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is less than %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is less than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is not equal to %s", ratio,     domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true rho is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/cor.test.R: gettextf("true rho is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true tau is less than %s"
msgstr "'r' yra mažesnis negu 0"

#. R/cor.test.R: gettextf("true tau is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is not equal to %s"
msgstr ""

#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#: R/model.tables.R:0
msgid "type '%s' is not implemented yet"
msgstr "'%s' tipas neįdiegtas"

#. R/smspline.R: stop("type = \"partial\" is not yet implemented")
#: R/smspline.R:0
msgid "type = \"partial\" is not yet implemented"
msgstr "type = \"partial\" dar neįdiegtas"

#. R/cancor.R: stop("unequal number of rows in 'cancor'")
#: R/cancor.R:0
msgid "unequal number of rows in 'cancor'"
msgstr "nevienodas 'cancor' eilučių skaičius"

#. R/acf.R: stop("univariate time series only")
#: R/acf.R:0
msgid "univariate time series only"
msgstr "tik vienmatės laiko eilutės"

#. R/density.R: stop("unknown bandwidth rule")
#: R/density.R:0
msgid "unknown bandwidth rule"
msgstr "nežinoma pralaidumo taisyklė"

#. R/kernel.R: stop("unknown named kernel")
#: R/kernel.R:0
msgid "unknown named kernel"
msgstr "nežinomas įvardytas branduolys"

#. R/optim.R: gettext("unknown names in control: ", domain = "R-stats")
#: R/optim.R:0
msgid "unknown names in control:"
msgstr "nežinomi vardai valdiklyje:"

#. R/stl.R: stop("unknown string value for s.window")
#: R/stl.R:0
msgid "unknown string value for s.window"
msgstr "nežinoma eilutės reikšmė dėl s.window"

#. R/nls.R: warning("upper and lower bounds ignored unless algorithm = \"port\"")
#: R/nls.R:0
msgid "upper and lower bounds ignored unless algorithm = \"port\""
msgstr "viršutiniai ir apatiniai rėžiai ignoruojami, nebent algorithm = \"port\""

#. R/plot.lm.R: stop("use only with \"lm\" objects")
#: R/plot.lm.R:0
msgid "use only with \"lm\" objects"
msgstr "naudokite tik su \"lm\" objektais"

#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate",     fname)
#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate",     fam)
#: R/glm.R:0
msgid "using F test with a '%s' family is inappropriate"
msgstr "testo F naudojimas su '%s' šeima yra netinkamas"

#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#: R/glm.R:0
msgid "using F test with a fixed dispersion is inappropriate"
msgstr "testo F naudojimas su fiksuota dispersija yra netinkamas"

#. R/models.R: warning("using type = \"numeric\" with a factor response will be ignored")
#: R/models.R:0
msgid "using type = \"numeric\" with a factor response will be ignored"
msgstr "naudojant type = \"numeric\" su koeficiento atsakymu bus ignoruojamas"

#. R/family.R: message("using weights as inverse variances")
#: R/family.R:0
msgid "using weights as inverse variances"
msgstr "naudojant svorius kaip atvirkštines dispersijas"

#. R/family.R: message("using weights as shape parameters")
#: R/family.R:0
msgid "using weights as shape parameters"
msgstr "naudojant svorius kaip formos parametrus"

#. R/glm.R: stop("value of 'epsilon' must be > 0")
#: R/glm.R:0
msgid "value of 'epsilon' must be > 0"
msgstr "'epsilon' reikšmė turi būti > 0"

#. R/models.R: gettextf("variable '%s' is absent, its contrast will be ignored",     nn)
#: R/models.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "kintamojo '%s' nėra, jo kontrastas bus ignoruojamas"

#. R/models.R: gettextf("variable '%s' is not a factor", nm)
#: R/models.R:0
msgid "variable '%s' is not a factor"
msgstr "kintamasis '%s' nėra faktorius"

#. R/models.R: gettextf("variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied",     names(old)[wrong], old[wrong], new[wrong])
#: R/models.R:0
msgid "variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied"
msgstr "kintamasis '%s' buvo pritaikytas tipui \"%s\", bet tipas \"%s\" buvo pateiktas"

#. R/models.R: gettextf("variables %s were specified with different types from the fit",     paste(sQuote(names(old)[wrong]), collapse = ", "))
#: R/models.R:0
msgid "variables %s were specified with different types from the fit"
msgstr "kintamieji %s buvo nurodyti su skirtingais tipais iš atitinkamo"

#. R/aov.R: stop("weights are not supported in a multistratum aov() fit")
#: R/aov.R:0
msgid "weights are not supported in a multistratum aov() fit"
msgstr "svoriai nepalaikomi daugiapakopiame aov()"

#. R/cov.wt.R: stop("weights must be non-negative and not all zero")
#: R/cov.wt.R:0
msgid "weights must be non-negative and not all zero"
msgstr "svoriai turi būti neneigiami ir ne visi nuliniai"

#. R/embed.R: stop("wrong embedding dimension")
#: R/embed.R:0
msgid "wrong embedding dimension"
msgstr "neteisingai įterptas matavimo skaičius"

#. R/anova.R: stop("wrong k / cs.ind")
#: R/anova.R:0
msgid "wrong k / cs.ind"
msgstr "neteisingas k / cs.ind"

#. R/arima.R: stop("wrong length for 'fixed'")
#. R/arma0.R: stop("wrong length for 'fixed'")
#: R/arima.R:0 R/arma0.R:0
msgid "wrong length for 'fixed'"
msgstr "blogas 'fixed' ilgis"

#. R/ftable.R: stop("wrong method")
#: R/ftable.R:0
msgid "wrong method"
msgstr "neteisingas metodas"

#. R/ppr.R: stop("wrong number of columns in 'x'")
#: R/ppr.R:0
msgid "wrong number of columns in 'x'"
msgstr "blogas stulpelių skaičius, esantis 'x'"

#. R/contr.poly.R: stop("wrong number of columns in new data: ", deparse1(substitute(...)))
#: R/contr.poly.R:0
msgid "wrong number of columns in new data:"
msgstr "neteisingas stulpelių skaičius naujuose duomenyse:"

#. R/contrast.R: stop("wrong number of contrast matrix rows")
#: R/contrast.R:0
msgid "wrong number of contrast matrix rows"
msgstr "neteisingas kontrasto matricos eilučių skaičius"

#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#: R/ts-tests.R:0
msgid "x is not a vector or univariate time series"
msgstr "x nėra vektorius arba vienmatė laiko eilutė"

#. R/acf.R: stop("x$lag must have at least 1 column")
#: R/acf.R:0
msgid "x$lag must have at least 1 column"
msgstr "x$lag turi turėti bent 1 stulpelį"

#. R/cmdscale.R: warning("x.ret=TRUE is disregarded when list.=FALSE")
#: R/cmdscale.R:0
msgid "x.ret=TRUE is disregarded when list.=FALSE"
msgstr "x.ret=TRUE nepaisoma, kai list.=FALSE"

#. R/diffinv.R: warning("x[1] != r[1]; using x[1] for diagonal")
#: R/diffinv.R:0
msgid "x[1] != r[1]; using x[1] for diagonal"
msgstr ""

#. R/distn.R: stop("x[] and prob[] must be equal length vectors.")
#: R/distn.R:0
msgid "x[] and prob[] must be equal length vectors."
msgstr "x[] ir prob[] turi būti vienodo ilgio vektoriai."

#. R/plot.lm.R: stop("y is empty or has only NAs")
#. R/qqnorm.R: stop("y is empty or has only NAs")
#: R/plot.lm.R:0 R/qqnorm.R:0
msgid "y is empty or has only NAs"
msgstr "y yra tuščios arba turi tik reikšmes NA"

#. R/family.R: stop("y values must be 0 <= y <= 1")
#: R/family.R:0
msgid "y values must be 0 <= y <= 1"
msgstr "y reikšmės turi būti 0 <= y <= 1"

#. R/approx.R: stop("zero non-NA points")
#. R/spline.R: stop("zero non-NA points")
#. R/splinefun.R: stop("zero non-NA points")
#: R/approx.R:0 R/spline.R:0 R/splinefun.R:0
msgid "zero non-NA points"
msgstr "nuliniai ne NA taškai"

#. R/ar.R: stop("zero-variance series")
#: R/ar.R:0
msgid "zero-variance series"
msgstr "nulinės dispersijos eilutės"

#. R/factanal.R: ngettext(factors, "%d factor is too many for %d variables", "%d factors are too many for %d variables")
#: R/factanal.R:0
msgid "%d factor is too many for %d variables"
msgid_plural "%d factors are too many for %d variables"
msgstr[0] "%d faktorius yra per didelis %d kintamiesiems"
msgstr[1] "%d faktoriai yra per dideli %d kintamiesiems"
msgstr[2] "%d faktorių yra per dideli %d kintamiesiems"

#. R/lsfit.R: ngettext(sum(!good), "%d missing value deleted", "%d missing values deleted")
#: R/lsfit.R:0
msgid "%d missing value deleted"
msgid_plural "%d missing values deleted"
msgstr[0] "%d trūkstama reikšmė pašalinta"
msgstr[1] "%d trūkstamos reikšmės pašalintos"
msgstr[2] "%d trūkstamų reikšmių pašalinta"

#. R/nafns.R: ngettext(n <- length(x), "%d observation deleted due to missingness",     "%d observations deleted due to missingness")
#: R/nafns.R:0
msgid "%d observation deleted due to missingness"
msgid_plural "%d observations deleted due to missingness"
msgstr[0] "%d stebėjimas panaikintas dėl netrūkstamumo"
msgstr[1] "%d stebėjimai panaikinti dėl netrūkstamumų"
msgstr[2] "%d stebėjimų panaikinta dėl netrūkstamumų"

#. R/smspline.R: ngettext(diff, "%d observation with NA, NaN or Inf deleted",     "%d observations with NAs, NaNs and/or Infs deleted")
#: R/smspline.R:0
msgid "%d observation with NA, NaN or Inf deleted"
msgid_plural "%d observations with NAs, NaNs and/or Infs deleted"
msgstr[0] "panaikintas %d stebėjimas su NA, NaN ar Inf"
msgstr[1] "panaikinti %d stebėjimai su NA, NaN ar Inf"
msgstr[2] "panaikinta %d stebėjimų su NA, NaN ar Inf"

#. R/lsfit.R: ngettext(nrx, "'X' matrix has %d case (row)", "'X' matrix has %d cases (rows)")
#: R/lsfit.R:0
msgid "'X' matrix has %d case (row)"
msgid_plural "'X' matrix has %d cases (rows)"
msgstr[0] "'X' matrica turi %d atvejį (eilutė)"
msgstr[1] "'X' matrica turi %d atvejus (eilutės)"
msgstr[2] "'X' matrica turi %d atvejų (eilučių)"

#. R/lsfit.R: ngettext(nry, "'Y' has %d case (row)", "'Y' has %d cases (rows)")
#: R/lsfit.R:0
msgid "'Y' has %d case (row)"
msgid_plural "'Y' has %d cases (rows)"
msgstr[0] "'Y' turi %d atvejį (eilutė)"
msgstr[1] "'Y' turi %d atvejus (eilutes)"
msgstr[2] "'Y' turi %d atvejų (eilučių)"

#. R/filter.R: ngettext(nser, "'init' must have %d column", "'init' must have 1 or %d columns",     domain = "R-stats")
#: R/filter.R:0
msgid "'init' must have %d column"
msgid_plural "'init' must have 1 or %d columns"
msgstr[0] "'init' privalo turėti %d stulpelį"
msgstr[1] "'init' privalo turėti 1 arba %d stulpelius"
msgstr[2] "'init' privalo turėti 1 arba %d stulpelių"

#. R/models.R: ngettext(nr, "'newdata' had %d row", "'newdata' had %d rows")
#: R/models.R:0
msgid "'newdata' had %d row"
msgid_plural "'newdata' had %d rows"
msgstr[0] "'newdata' turėjo %d eilutę"
msgstr[1] "'newdata' turėjo %d eilutes"
msgstr[2] "'newdata' turėjo %d eilučių"

#. R/factanal.R: ngettext(p, "'start' must have %d row", "'start' must have %d rows")
#: R/factanal.R:0
msgid "'start' must have %d row"
msgid_plural "'start' must have %d rows"
msgstr[0] "'start' privalo turėti %d eilutę"
msgstr[1] "'start' privalo turėti %d eilutes"
msgstr[2] "'start' privalo turėti %d eilučių"

#. R/ts.R: ngettext(n.start, "'start.innov' is too short: need %d point",     "'start.innov' is too short: need %d points")
#: R/ts.R:0
msgid "'start.innov' is too short: need %d point"
msgid_plural "'start.innov' is too short: need %d points"
msgstr[0] "'start.innov' per trumpas: reikia %d taško"
msgstr[1] "'start.innov' per trumpas: reikia %d taškus"
msgstr[2] "'start.innov' per trumpas: reikia %d taškų"

#. R/glm.R: ngettext(nobs, "X matrix has rank %d, but only %d observation",     "X matrix has rank %d, but only %d observations")
#: R/glm.R:0
msgid "X matrix has rank %d, but only %d observation"
msgid_plural "X matrix has rank %d, but only %d observations"
msgstr[0] "X matrica turi rangą %d, bet tik %d stebėjimui"
msgstr[1] "X matrica turi rangą %d, bet tik %d stebėjimams"
msgstr[2] "X matrica turi rangą %d, bet tik %d stebėjimų"

#. R/nlm.R: ngettext(maxiter, "_NOT_ converged in %d iteration", "_NOT_ converged in %d iterations")
#: R/nlm.R:0
msgid "_NOT_ converged in %d iteration"
msgid_plural "_NOT_ converged in %d iterations"
msgstr[0] "_NOT_ converged %d iteracijoje"
msgstr[1] "_NOT_ converged %d iteracijose"
msgstr[2] "_NOT_ converged %d iteracijų"

#. R/lsfit.R: ngettext(ncx, "but %d variable", "but %d variables")
#: R/lsfit.R:0
msgid "but %d variable"
msgid_plural "but %d variables"
msgstr[0] "bet %d kintamasis"
msgstr[1] "bet %d kintamieji"
msgstr[2] "bet %d kintamųjų"

#. R/models.R: ngettext(nr2, "but variable found had %d row", "but variables found have %d rows")
#: R/models.R:0
msgid "but variable found had %d row"
msgid_plural "but variables found have %d rows"
msgstr[0] "bet rastas kintamasis turėjo %d eilutę"
msgstr[1] "bet rasti kintamieji turėjo %d eilutes"
msgstr[2] "bet rasti kintamieji turėjo %d eilučių"

#. R/kmeans.R: ngettext(iter.max, "did not converge in %d iteration", "did not converge in %d iterations")
#: R/kmeans.R:0
msgid "did not converge in %d iteration"
msgid_plural "did not converge in %d iterations"
msgstr[0] "nekonvergavo %d iteracijoje"
msgstr[1] "nekonvergavo %d iteracijose"
msgstr[2] "nekonvergavo %d iteracijų"

#. R/dendrogram.R: ngettext(length(nms), "extra argument %s is not of class \"%s\"",     "extra arguments %s are not of class \"%s\"")
#: R/dendrogram.R:0
#, fuzzy
msgid "extra argument %s is not of class \"%s\""
msgid_plural "extra arguments %s are not of class \"%s\""
msgstr[0] "papildomas argumentas %s nėra \"%s\" klasės"
msgstr[1] "papildomi argumentai %s nėra \"%s\" klasės"
msgstr[2] "papildomų argumentų %s nėra \"%s\" klasės"

#. R/models.R: ngettext(length(m), "factor %s has new level %s", "factor %s has new levels %s")
#: R/models.R:0
msgid "factor %s has new level %s"
msgid_plural "factor %s has new levels %s"
msgstr[0] "faktorius %s turi naują lygį %s"
msgstr[1] "faktorius %s turi naujus lygius %s"
msgstr[2] "faktorius %s turi naujų lygių %s"

#. R/nls.R: ngettext(sum(np == -1), "fitting parameter %s without any variables",     "fitting parameters %s without any variables")
#: R/nls.R:0
msgid "fitting parameter %s without any variables"
msgid_plural "fitting parameters %s without any variables"
msgstr[0] "tinkamas parametras %s be jokių kintamųjų"
msgstr[1] "tinkami parametrai %s be jokių kintamųjų"
msgstr[2] "tinkamų parametrų %s be jokių kintamųjų"

#. R/add.R: ngettext(sum(where == 0), "lower scope has term %s not included in model",     "lower scope has terms %s not included in model")
#: R/add.R:0
msgid "lower scope has term %s not included in model"
msgid_plural "lower scope has terms %s not included in model"
msgstr[0] "apatinė sritis turi termą %s, kuris neįtrauktas į modelį"
msgstr[1] "apatinė sritis turi termus %s, kurie neįtraukti į modelį"
msgstr[2] "apatinė sritis turi termus %s, kurie neįtraukti į modelį"

#. R/medpolish.R: ngettext(maxiter, "medpolish() did not converge in %d iteration",     "medpolish() did not converge in %d iterations")
#: R/medpolish.R:0
msgid "medpolish() did not converge in %d iteration"
msgid_plural "medpolish() did not converge in %d iterations"
msgstr[0] "medpolish() nekonvergavo %d iteracijoje"
msgstr[1] "medpolish() nekonvergavo %d iteracijose"
msgstr[2] "medpolish() nekonvergavo %d iteracijų"

#. R/lsfit.R: ngettext(nry, "only %d case", "only %d cases")
#: R/lsfit.R:0
msgid "only %d case"
msgid_plural "only %d cases"
msgstr[0] "tik %d atveju"
msgstr[1] "tik %d atvejais"
msgstr[2] "tik %d atvejų"

#. R/selfStart.R: ngettext(sum(msng), "parameter %s does not occur in the model formula",     "parameters %s do not occur in the model formula")
#: R/selfStart.R:0
msgid "parameter %s does not occur in the model formula"
msgid_plural "parameters %s do not occur in the model formula"
msgstr[0] "parametras %s nepasitaiko modelio formulėje"
msgstr[1] "parametrai %s nepasitaiko modelio formulėje"
msgstr[2] "parametrų %s nepasitaiko modelio formulėje"

#. R/aov.R: ngettext(length(indError), "there is %d Error term: only 1 is allowed",     "there are %d Error terms: only 1 is allowed", domain = "R-stats")
#: R/aov.R:0
#, fuzzy
msgid "there is %d Error term: only 1 is allowed"
msgid_plural "there are %d Error terms: only 1 is allowed"
msgstr[0] "%d yra klaidų termų: tik 1 leidžiamas"
msgstr[1] "%d yra klaidų termų: tik 1 leidžiamas"
msgstr[2] "%d yra klaidų termų: tik 1 leidžiamas"

#. R/factanal.R: ngettext(nc, "unable to optimize from this starting value", "unable to optimize from these starting values")
#: R/factanal.R:0
msgid "unable to optimize from this starting value"
msgid_plural "unable to optimize from these starting values"
msgstr[0] "nepavyko optimizuoti iš šios pradinės reikšmės"
msgstr[1] "nepavyko optimizuoti iš šių pradinių reikšmių"
msgstr[2] "nepavyko optimizuoti iš šių pradinių reikšmių"

#. R/aov.R: ngettext(na, "unknown name %s in the 'split' list", "unknown names %s in the 'split' list")
#: R/aov.R:0
msgid "unknown name %s in the 'split' list"
msgid_plural "unknown names %s in the 'split' list"
msgstr[0] "nežinomas vardas %s 'split' sąraše"
msgstr[1] "nežinomi vardai %s 'split' sąraše"
msgstr[2] "nežinomų vardų %s 'split' sąraše"

#. R/nlminb.R: ngettext(length(nap), "unrecognized control element named %s ignored",     "unrecognized control elements named %s ignored")
#. R/nls.R: ngettext(length(nap), "unrecognized control element named %s ignored",     "unrecognized control elements named %s ignored")
#: R/nlminb.R:0 R/nls.R:0
msgid "unrecognized control element named %s ignored"
msgid_plural "unrecognized control elements named %s ignored"
msgstr[0] "ignoruojamas nežinomas vykdymo elementas pavadintas %s"
msgstr[1] "ignoruojami nežinomi vykdymo elementai pavadinti %s"
msgstr[2] "ignoruojama nežinomų vykdymo elementų pavadintų %s"

#. R/add.R: ngettext(sum(where == 0), "upper scope has term %s not included in model",     "upper scope has terms %s not included in model")
#: R/add.R:0
msgid "upper scope has term %s not included in model"
msgid_plural "upper scope has terms %s not included in model"
msgstr[0] "viršutinė sritis turi termą %s, kuris neįtrauktas į modelį"
msgstr[1] "viršutinė sritis turi termus %s, kurie neįtraukti į modelį"
msgstr[2] "viršutinė sritis turi termų %s, kurie neįtraukti į modelį"

#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit")
#: R/add.R:0
msgid "using the %d/%d row from a combined fit"
msgid_plural "using the %d/%d rows from a combined fit"
msgstr[0] "naudojant %d/%d eilutę iš kompleksinio parinkimo"
msgstr[1] "naudojant %d/%d eilutes iš kompleksinio parinkimo"
msgstr[2] "naudojant %d/%d eilučių iš kompleksinio parinkimo"

#~ msgid "'formula' missing"
#~ msgstr "trūksta 'formula'"

#~ msgid "formula missing"
#~ msgstr "trūksta formulės"

#~ msgid "incorrect specification for 'formula'"
#~ msgstr "neteisinga 'formula' specifikacija"

#, fuzzy
#~ msgid "invalid '%s' attribute"
#~ msgstr "neteisingas 'use' argumentas"

#~ msgid "invalid 'abbr.colnames'"
#~ msgstr "neteisingas 'abbr.colnames'"

#~ msgid "invalid 'endrule' argument"
#~ msgstr "neteisingas 'endrule' argumentas"

#~ msgid "invalid argument 'c'"
#~ msgstr "neteisingas argumentas 'c'"

#~ msgid "invalid argument 'n'"
#~ msgstr "neteisingas argumentas 'n'"

#~ msgid "invalid argument 'r'"
#~ msgstr "neteisingas argumentas 'r'"

#~ msgid "invalid 'nb'"
#~ msgstr "neteisingas 'nb'"

#~ msgid "invalid 'x'"
#~ msgstr "neteisingas 'x'"

#~ msgid "invalid 'y'"
#~ msgstr "neteisingas 'y'"

#~ msgid "invalid ncol(x)"
#~ msgstr "neteisingas ncol(x)"

#~ msgid "invalid nrow(x)"
#~ msgstr "neteisingas nrow(x)"

#~ msgid "Requested conf.level not achievable"
#~ msgstr "Reikalaujamas conf.level nepasiekiamas"

#~ msgid "columns of 'contrast.obj' must define a contrast(sum to zero)"
#~ msgstr "'contrast.obj' stulpelis turi apibrėžti contrast(sum to zero)"

#~ msgid ","
#~ msgstr ","

#~ msgid "deprecatedWarning"
#~ msgstr "deprecatedWarning"

#~ msgid "reformulate"
#~ msgstr "performuluoti"

#~ msgid ".nknots.smspl() is now exported; use it instead of n.knots()"
#~ msgstr ".nknots.smspl() dabar eksportuojamas; naudoti vietoj n.knots()"

#~ msgid "package 'MASS' must be installed"
#~ msgstr "paketas 'MASS' turi būti įdiegtas"

#~ msgid "2. %d factors are too many for %d variables"
#~ msgstr "2. %d faktoriai yra per dideli %d kintamiesiems"

#~ msgid "3. %d factors are too many for %d variables"
#~ msgstr "3. %d faktoriÅ³ yra per dideli %d kintamiesiems"

#~ msgid "2. %d missing values deleted"
#~ msgstr "2. %d trÅ«kstamos reikÅ¡mÄs paÅ¡alintos"

#~ msgid "3. %d missing values deleted"
#~ msgstr "3. %d trÅ«kstamÅ³ reikÅ¡miÅ³ paÅ¡alinta"

#~ msgid "2. %d observations deleted due to missingness"
#~ msgstr "2. %d stebÄjimai panaikinti dÄl netrÅ«kstamumo"

#~ msgid "3. %d observations deleted due to missingness"
#~ msgstr "3. %d stebÄjimÅ³ panaikinta dÄl netrÅ«kstamumo"

#~ msgid "2. %d observations with NAs, NaNs and/or Infs deleted"
#~ msgstr "2. %d stebÄjimai su NA, NaN ar Inf panaikinti"

#~ msgid "3. %d observations with NAs, NaNs and/or Infs deleted"
#~ msgstr "3. %d stebÄjimÅ³ su NA, NaN ar Inf panaikinta"

#~ msgid "2. 'X' matrix has %d cases (rows)"
#~ msgstr "2. âXâ matrica turi %d atvejus (eilutes)"

#~ msgid "3. 'X' matrix has %d cases (rows)"
#~ msgstr "3. âXâ matrica turi %d atvejÅ³ (eiluÄiÅ³)"

#~ msgid "2. 'Y' has %d cases (rows)"
#~ msgstr "2. âYâ turi %d atvejus (eilutes)"

#~ msgid "3. 'Y' has %d cases (rows)"
#~ msgstr "3. âYâ turi %d atvejÅ³ (eiluÄiÅ³)"

#~ msgid "'all.knots' is TRUE"
#~ msgstr " 'nknots' specification is disregarded\""

#~ msgid "2. 'init' must have 1 or %d columns"
#~ msgstr "2. âinitâ privalo turÄti 1 ar daugiau %d stulpelius"

#~ msgid "3. 'init' must have 1 or %d columns"
#~ msgstr "3. âinitâ privalo turÄti 1 ar daugiau %d stulpeliÅ³"

#~ msgid "'invalid value of 'k'"
#~ msgstr "'neteisinga 'k' reikÅ¡mÄ"

#~ msgid "2. 'newdata' had %d rows"
#~ msgstr "2. ânewdataâ turÄjo %d eilutes"

#~ msgid "3. 'newdata' had %d rows"
#~ msgstr "3. ânewdataâ turÄjo %d eiluÄiÅ³"

#~ msgid "2. 'start' must have %d rows"
#~ msgstr "2. âstartâ privalo turÄti %d eilutes"

#~ msgid "3. 'start' must have %d rows"
#~ msgstr "3. âstartâ privalo turÄti %d eiluÄiÅ³"

#~ msgid "2. 'start.innov' is too short: need %d points"
#~ msgstr "2. âstart.innovâ per trumpas: reikia %d taÅ¡kÅ³"

#~ msgid "3. 'start.innov' is too short: need %d points"
#~ msgstr "3. âstart.innovâ per trumpas: reikia %d taÅ¡kÅ³"

#~ msgid "times' is wrong length"
#~ msgstr "blogas 'times' ilgis"

#~ msgid "\"NA lev[]"
#~ msgstr " probably smoothing parameter 'spar' way too large!\""

#~ msgid "Standard errors can be obtained through 'se.contrast'."
#~ msgstr "StandartinÄs paklaidos gali bÅ«ti gaunamos naudojant 'se.contrast'."

#~ msgid "2. X matrix has rank %d, but only %d observations"
#~ msgstr "2. X matricos rangas %d, bet tik %d stebÄjimams"

#~ msgid "3. X matrix has rank %d, but only %d observations"
#~ msgstr "3. X matricos rangas %d, bet tik %d stebÄjimÅ³"

#~ msgid "2. _NOT_ converged in %d iterations"
#~ msgstr "2. _NOT_ converged %d iteracijose"

#~ msgid "3. _NOT_ converged in %d iterations"
#~ msgstr "3. _NOT_ converged %d iteracijÅ³"

#~ msgid "a limit is missing"
#~ msgstr "trÅ«ksta ribos"

#~ msgid "all group levels must be finite"
#~ msgstr "visi grupavimo lygmenys turi bÅ«ti baigtiniai"

#~ msgid "2. but %d variables"
#~ msgstr "2. bet %d kintamieji"

#~ msgid "3. but %d variables"
#~ msgstr "3. bet %d kintamÅ³jÅ³"

#~ msgid "2. but variables found have %d rows"
#~ msgstr "2. bet rasti kintamieji turÄjo %d eilutes"

#~ msgid "3. but variables found have %d rows"
#~ msgstr "3. bet rasta kintamÅ³jÅ³, kurie turÄjo %d eiluÄiÅ³"

#~ msgid "2. did not converge in %d iterations"
#~ msgstr "2. nekonverguoja %d iteracijose"

#~ msgid "3. did not converge in %d iterations"
#~ msgstr "3. nekonverguoja %d iteracijÅ³"

#~ msgid "\"2. extra arguments %s are not of class \"\"%s\"\"s\""
#~ msgstr "\"2. papildomi %s argumentai nÄra \"\"%s\"\" klasiÅ³\""

#~ msgid "\"3. extra arguments %s are not of class \"\"%s\"\"s\""
#~ msgstr "\"3. papildomi %s argumentÅ³ nÄra \"\"%s\"\" klasiÅ³\""

#~ msgid "2. factor %s has new levels %s"
#~ msgstr "2. faktorius %s turi naujus lygius %s"

#~ msgid "3. factor %s has new levels %s"
#~ msgstr "3. faktorius %s turi naujÅ³ lygiÅ³ %s"

#~ msgid "2. fitting parameters %s without any variables"
#~ msgstr "2. %s tinkami parametrai be jokiÅ³ kintamÅ³jÅ³"

#~ msgid "3. fitting parameters %s without any variables"
#~ msgstr "3. %s tinkamÅ³ parametrÅ³ be jokiÅ³ kintamÅ³jÅ³"

#~ msgid "for the 'binomial' family, y must be a vector of 0 and 1's"
#~ msgstr " 'binomial' Å¡eimos atveju y turi bÅ«ti 0 ir 1 vektorius"

#~ msgid "for the 'quasibinomial' family, y must be a vector of 0 and 1's"
#~ msgstr " 'quasibinomial' Å¡eimos atveju y turi bÅ«ti 0 ir 1 vektorius"

#~ msgid "hat values (leverages) are all = %s"
#~ msgstr "reikÅ¡mÄs (svertai) yra visi = %s"

#~ msgid "\"and there are no factor predictors"
#~ msgstr " no plot no. 5\""

#~ msgid "\"inner loop 1"
#~ msgstr " cannot correct step size\""

#~ msgid "\"inner loop 2"
#~ msgstr " cannot correct step size\""

#~ msgid "invalid value of 'n'"
#~ msgstr "neteisinga 'n' reikÅ¡mÄ"

#~ msgid "invalid value of length(x)"
#~ msgstr "neteisinga length(x) reikÅ¡mÄ"

#~ msgid "length of FUN, %d,"
#~ msgstr "FUN ilgis %d"

#~ msgid "\"link \"\"%s\"\" not available for binomial family"
#~ msgstr " available links are %s\""

#~ msgid "\"link \"\"%s\"\" not available for gamma family"
#~ msgstr " available links are %s\""

#~ msgid "\"link \"\"%s\"\" not available for gaussian family"
#~ msgstr " available links are %s\""

#~ msgid "\"link \"\"%s\"\" not available for inverse.gaussian family"
#~ msgstr " available links are %s\""

#~ msgid "\"link \"\"%s\"\" not available for quasibinomial family"
#~ msgstr " available links are %s\""

#~ msgid "\"link \"\"%s\"\" not available for quasipoisson family"
#~ msgstr " available links are %s\""

#~ msgid "lm object does not have a proper 'qr' component."
#~ msgstr "Objektas lm neturi tinkamo 'qr' komponento."

#~ msgid "2. lower scope has terms %s not included in model"
#~ msgstr "2. apatinÄ sritis turi narius %s, kurie neÄ¯traukti Ä¯ modelÄ¯"

#~ msgid "3. lower scope has terms %s not included in model"
#~ msgstr "3. apatinÄ sritis turi nariÅ³ %s, kurie neÄ¯traukti Ä¯ modelÄ¯"

#~ msgid "2. medpolish() did not converge in %d iterations"
#~ msgstr "2. medpolish() nekonverguoja %d iteracijose"

#~ msgid "3. medpolish() did not converge in %d iterations"
#~ msgstr "3. medpolish() nekonverguoja %d iteracijÅ³"

#~ msgid "%s"
#~ msgstr "%s"

#~ msgid "numeric y must be supplied."
#~ msgstr "skaitinis y turi bÅ«ti pateiktas"

#~ msgid "\"use \"\"Brent\"\" or optimize() directly\""
#~ msgstr "\"naudokite \"\"Brent\"\" arba optimize() tiesiogiai\""

#~ msgid "2. only %d cases"
#~ msgstr "2. tik %d atvejais"

#~ msgid "3. only %d cases"
#~ msgstr "3. tik %d atvejÅ³"

#~ msgid "2. parameters %s do not occur in the model formula"
#~ msgstr "2. parametrai %s nepasitaiko modelio formulÄje"

#~ msgid "3. parameters %s do not occur in the model formula"
#~ msgstr "3. parametrai %s nepasitaiko modelio formulÄje"

#~ msgid "2. unable to optimize from these starting values"
#~ msgstr "2. nepavyko optimizuoti iÅ¡ Å¡iÅ³ pradiniÅ³ reikÅ¡miÅ³"

#~ msgid "3. unable to optimize from these starting values"
#~ msgstr "3. nepavyko optimizuoti iÅ¡ Å¡iÅ³ pradiniÅ³ reikÅ¡miÅ³"

#~ msgid "2. unknown names %s in the 'split' list"
#~ msgstr "2. neÅ¾inomi vardai %s âsplitâ sÄraÅ¡e"

#~ msgid "3. unknown names %s in the 'split' list"
#~ msgstr "3. neÅ¾inomÅ³ vardÅ³ %s âsplitâ sÄraÅ¡e"

#~ msgid "2. unrecognized control elements named %s ignored"
#~ msgstr "2. ignoruojami neÅ¾inomi vykdymo elementai pavadinti %s "

#~ msgid "3. unrecognized control elements named %s ignored"
#~ msgstr "3. ignoruojamÅ³ neÅ¾inomÅ³ vykdymo elementÅ³ pavadintÅ³ %s"

#~ msgid "2. upper scope has terms %s not included in model"
#~ msgstr "2. virÅ¡utinÄ sritis turi narius %s, kurie neÄ¯traukti Ä¯ modelÄ¯"

#~ msgid "3. upper scope has terms %s not included in model"
#~ msgstr "3. virÅ¡utinÄ sritis turi nariÅ³ %s, kurie neÄ¯traukti Ä¯ modelÄ¯"

#~ msgid "2. using the %d/%d rows from a combined fit"
#~ msgstr "2. naudojant %d/%d eilutes iÅ¡ derinio"

#~ msgid "3. using the %d/%d rows from a combined fit"
#~ msgstr "3. naudojant %d/%d eiluÄiÅ³ iÅ¡ derinio"
