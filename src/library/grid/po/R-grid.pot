msgid ""
msgstr ""
"Project-Id-Version: R 4.6.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2025-06-04 19:56\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"


#: R/unit.R: 0
#. R/unit.R: stop("'*' or '/' cannot be used as a unary operator")

msgid "'*' or '/' cannot be used as a unary operator"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: gettextf("'Summary' function '%s' not meaningful for units",     .Generic)

msgid "'Summary' function '%s' not meaningful for units"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("'allDevices' not yet implemented")

msgid "'allDevices' not yet implemented"
msgstr ""


#: R/curve.R: 0
#. R/curve.R: stop("'arrow' must be an arrow object or NULL")

msgid "'arrow' must be an arrow object or NULL"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("'children' must be a \"gList\"")

msgid "'children' must be a \"gList\""
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("'col' can only be a range of existing columns")

msgid "'col' can only be a range of existing columns"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("'expr' must return a grob or gList")

msgid "'expr' must return a grob or gList"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("'fill' gpar list components must all be patterns")

msgid "'fill' gpar list components must all be patterns"
msgstr ""


#: R/edit.R: 0
#. R/edit.R: stop("'gEditList' can only contain 'gEdit' objects")

msgid "'gEditList' can only contain 'gEdit' objects"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: gettextf("'gPath' (%s) not found", as.character(gPath))
#. R/grob.R: gettextf("'gPath' (%s) not found", gPath)

msgid "'gPath' (%s) not found"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("'gPath' does not specify a valid child")

msgid "'gPath' does not specify a valid child"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: warning("'gamma' 'gpar' element is defunct")

msgid "'gamma' 'gpar' element is defunct"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: gettextf("'gpar' element '%s' must not be length 0", gparname)

msgid "'gpar' element '%s' must not be length 0"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'hgap' must be single unit")

msgid "'hgap' must be single unit"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: stop("'hjust' and 'vjust' must be glyphJust() values")

msgid "'hjust' and 'vjust' must be glyphJust() values"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: stop("'hjust' and 'vjust' must have length 1")

msgid "'hjust' and 'vjust' must have length 1"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'l' must be a layout")

msgid "'l' must be a layout"
msgstr ""


#: R/components.R: 0
#. R/components.R: stop("'labels' and 'at' locations must have same length")

msgid "'labels' and 'at' locations must have same length"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'length' must be a 'unit' object")

msgid "'length' must be a 'unit' object"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'ncol' must be >= 1")

msgid "'ncol' must be >= 1"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'nrow' must be >= 1")

msgid "'nrow' must be >= 1"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("'parent' must be a viewport and 'children' must be a 'vpList' in 'vpTree'")

msgid "'parent' must be a viewport and 'children' must be a 'vpList' in 'vpTree'"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'pch' and 'labels' not the same length")

msgid "'pch' and 'labels' not the same length"
msgstr ""


#: R/roundRect.R: 0
#. R/roundRect.R: stop("'r' must be a 'unit' object")

msgid "'r' must be a 'unit' object"
msgstr ""


#: R/util.R: 0
#. R/util.R: stop("'range' must be numeric")

msgid "'range' must be numeric"
msgstr ""


#: R/layout.R: 0
#. R/layout.R: stop("'respect' must be logical or an 'nrow' by 'ncol' matrix")

msgid "'respect' must be logical or an 'nrow' by 'ncol' matrix"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("'row' can only be a range of existing rows")

msgid "'row' can only be a range of existing rows"
msgstr ""


#: R/curve.R: 0
#: R/primitives.R: 0
#. R/curve.R: stop("'shape' must be between -1 and 1")
#. R/primitives.R: stop("'shape' must be between -1 and 1")

msgid "'shape' must be between -1 and 1"
msgstr ""


#: R/curve.R: 0
#. R/curve.R: stop("'squareShape' must be between -1 and 1")

msgid "'squareShape' must be between -1 and 1"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("'vgap' must be single unit")

msgid "'vgap' must be single unit"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("'w' and 'h' must be units and 'device' must be logical")

msgid "'w' and 'h' must be units and 'device' must be logical"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("'x' and 'units' must have length > 0")

msgid "'x' and 'units' must have length > 0"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' and 'id' must all be same length")

msgid "'x' and 'y' and 'id' must all be same length"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' and 'id.lengths' must specify same overall length")

msgid "'x' and 'y' and 'id.lengths' must specify same overall length"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' and 'pathId.lengths' must specify same overall length")

msgid "'x' and 'y' and 'pathId.lengths' must specify same overall length"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' must all be units of length 1")

msgid "'x' and 'y' must all be units of length 1"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' must be 'unit' objects and have the same length")

msgid "'x' and 'y' must be 'unit' objects and have the same length"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' must be same length")

msgid "'x' and 'y' must be same length"
msgstr ""


#: R/primitives.R: 0
#: R/typeset.R: 0
#. R/primitives.R: stop("'x' and 'y' must be units")
#. R/typeset.R: stop("'x' and 'y' must be units")

msgid "'x' and 'y' must be units"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("'x' and 'y' must be units and 'device' must be logical")

msgid "'x' and 'y' must be units and 'device' must be logical"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' must be units or NULL")

msgid "'x' and 'y' must be units or NULL"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x' and 'y' must have length 1")

msgid "'x' and 'y' must have length 1"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: stop("'x' and 'y' must have length > 0")

msgid "'x' and 'y' must have length > 0"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x', 'y' and 'size' must be units")

msgid "'x', 'y' and 'size' must be units"
msgstr ""


#: R/primitives.R: 0
#: R/viewport.R: 0
#. R/primitives.R: stop("'x', 'y', 'width', and 'height' must all be units of length 1")
#. R/viewport.R: stop("'x', 'y', 'width', and 'height' must all be units of length 1")

msgid "'x', 'y', 'width', and 'height' must all be units of length 1"
msgstr ""


#: R/primitives.R: 0
#: R/roundRect.R: 0
#. R/primitives.R: stop("'x', 'y', 'width', and 'height' must be units")
#. R/roundRect.R: stop("'x', 'y', 'width', and 'height' must be units")

msgid "'x', 'y', 'width', and 'height' must be units"
msgstr ""


#: R/roundRect.R: 0
#. R/roundRect.R: stop("'x', 'y', 'width', and 'height' must have length 1")

msgid "'x', 'y', 'width', and 'height' must have length 1"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x', 'y', and 'r' must be units")

msgid "'x', 'y', and 'r' must be units"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("'x0', 'y0', 'x1', and 'y1' must be units")

msgid "'x0', 'y0', 'x1', and 'y1' must be units"
msgstr ""


#: R/curve.R: 0
#. R/curve.R: stop("'x1', 'y1', 'x2', and 'y2' must be units")

msgid "'x1', 'y1', 'x2', and 'y2' must be units"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("Cannot create zero-length unit vector (\"unit\" subsetting)",     call. = FALSE)

msgid "Cannot create zero-length unit vector (\"unit\" subsetting)"
msgstr ""


#: R/coords.R: 0
#. R/coords.R: stop("Closed must be length 1 and must not be a missing value")

msgid "Closed must be length 1 and must not be a missing value"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("Down viewport failed to record on display list")

msgid "Down viewport failed to record on display list"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: warning("Down viewport incorrectly recorded on display list")

msgid "Down viewport incorrectly recorded on display list"
msgstr ""


#: R/group.R: 0
#. R/group.R: warning("Group definition failed")

msgid "Group definition failed"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("Invalid 'clearGroups' argument")

msgid "Invalid 'clearGroups' argument"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("Invalid 'order'")

msgid "Invalid 'order'"
msgstr ""


#: R/coords.R: 0
#. R/coords.R: stop("Invalid coordinates")

msgid "Invalid coordinates"
msgstr ""


#: R/group.R: 0
#. R/group.R: stop("Invalid destination")

msgid "Invalid destination"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("Invalid force target")

msgid "Invalid force target"
msgstr ""


#: R/coords.R: 0
#. R/coords.R: stop("Invalid gTree coordinates")

msgid "Invalid gTree coordinates"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: stop("Invalid glyph info")

msgid "Invalid glyph info"
msgstr ""


#: R/coords.R: 0
#. R/coords.R: stop("Invalid grob coordinates")

msgid "Invalid grob coordinates"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("Invalid number of generations")

msgid "Invalid number of generations"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("Invalid revert target")

msgid "Invalid revert target"
msgstr ""


#: R/group.R: 0
#. R/group.R: stop("Invalid source")

msgid "Invalid source"
msgstr ""


#: R/group.R: 0
#. R/group.R: stop("Invalid transform")
#. R/group.R: warning("Invalid transform")

msgid "Invalid transform"
msgstr ""


#: R/group.R: 0
#. R/group.R: warning("Invalid transform (nothing drawn)")

msgid "Invalid transform (nothing drawn)"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: warning("Missing pattern fill has been set to transparent")

msgid "Missing pattern fill has been set to transparent"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: gettextf("New 'grob' name (%s) does not match 'gPath' (%s)",     newGrob$name, gPath)

msgid "New 'grob' name (%s) does not match 'gPath' (%s)"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("Not a unit object")

msgid "Not a unit object"
msgstr ""


#: R/mask.R: 0
#. R/mask.R: stop("Only a grob can be converted to a mask")

msgid "Only a grob can be converted to a mask"
msgstr ""


#: R/path.R: 0
#. R/path.R: stop("Only a grob can be converted to a path")

msgid "Only a grob can be converted to a path"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: warning("Pattern fill applied to object with no inside")

msgid "Pattern fill applied to object with no inside"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: stop("Pattern must be based on grob")

msgid "Pattern must be based on grob"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: warning("Unknown anchor; using bottom justification")

msgid "Unknown anchor; using bottom justification"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: warning("Unknown anchor; using left justification")

msgid "Unknown anchor; using left justification"
msgstr ""


#: R/group.R: 0
#. R/group.R: paste0("Unknown group: ", x$group)

msgid "Unknown group:"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: warning("Unknown height; using first height")

msgid "Unknown height; using first height"
msgstr ""


#: R/typeset.R: 0
#. R/typeset.R: warning("Unknown width; using first width")

msgid "Unknown width; using first width"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("a 'grob' path must contain at least one 'grob' name")

msgid "a 'grob' path must contain at least one 'grob' name"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("a viewport path must contain at least one viewport name")

msgid "a viewport path must contain at least one viewport name"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("argument must be a 'gpar' object")

msgid "argument must be a 'gpar' object"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("both operands must be units")

msgid "both operands must be units"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("can only reorder 'children' for a \"gTree\"")

msgid "can only reorder 'children' for a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("can only set 'children' for a \"gTree\"")

msgid "can only set 'children' for a \"gTree\""
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("can't divide with a unit")

msgid "can't divide with a unit"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("cannot specify more than one of 'side=[\"left\", \"right\"]', 'col', 'col.before', or 'col.after'")

msgid "cannot specify more than one of 'side=[\"left\", \"right\"]', 'col', 'col.before', or 'col.after'"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: stop("colours and stops must be at least length 1")

msgid "colours and stops must be at least length 1"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("corrupt 'arrows' object")

msgid "corrupt 'arrows' object"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: stop("cx1, cy1, cx2, cy2, r1, and r2 must all be length 1")

msgid "cx1, cy1, cx2, cy2, r1, and r2 must all be length 1"
msgstr ""


#: R/curve.R: 0
#. R/curve.R: stop("end points must not be identical")

msgid "end points must not be identical"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: gettextf("gPath (%s) not found", paste(gPath, name, sep = .grid.pathSep))
#. R/grob.R: gettextf("gPath (%s) not found", name)

msgid "gPath (%s) not found"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: gettextf("grob '%s' not found", name)

msgid "grob '%s' not found"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: warning("grob drawing produces more shapes than grob coords\n(recycling coords)")

msgid "grob drawing produces more shapes than grob coords\n(recycling coords)"
msgstr ""


#: R/grab.R: 0
#. R/grab.R: warning("grob pushed viewports and did not pop/up them (grab MAY not be faithful)")

msgid "grob pushed viewports and did not pop/up them (grab MAY not be faithful)"
msgstr ""


#: R/debug.R: 0
#. R/debug.R: stop("how did we get here?")

msgid "how did we get here?"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("index must be of length 1", call. = FALSE)

msgid "index must be of length 1"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("index out of bounds (\"unit\" subsetting)", call. = FALSE)

msgid "index out of bounds (\"unit\" subsetting)"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid \"gTree\" class")

msgid "invalid \"gTree\" class"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("invalid 'alpha' value")

msgid "invalid 'alpha' value"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'angle' in viewport")

msgid "invalid 'angle' in viewport"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("invalid 'arrow' argument")

msgid "invalid 'arrow' argument"
msgstr ""


#: R/components.R: 0
#. R/components.R: stop("invalid 'at' location in 'axis'")

msgid "invalid 'at' location in 'axis'"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("invalid 'axis' or 'type'")

msgid "invalid 'axis' or 'type'"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'clip' value")

msgid "invalid 'clip' value"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("invalid 'col' specification")

msgid "invalid 'col' specification"
msgstr ""


#: R/edit.R: 0
#. R/edit.R: stop("invalid 'edit' information")

msgid "invalid 'edit' information"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("invalid 'ends' or 'type' argument")

msgid "invalid 'ends' or 'type' argument"
msgstr ""


#: R/function.R: 0
#. R/function.R: stop("invalid 'f'")

msgid "invalid 'f'"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("invalid 'frame'")

msgid "invalid 'frame'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'gPath'")

msgid "invalid 'gPath'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'gp' slot")

msgid "invalid 'gp' slot"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'gp' value")

msgid "invalid 'gp' value"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'grep' value")

msgid "invalid 'grep' value"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("invalid 'grob'")

msgid "invalid 'grob'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'grob' argument")

msgid "invalid 'grob' argument"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'grob' class")

msgid "invalid 'grob' class"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'layout' in viewport")

msgid "invalid 'layout' in viewport"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'layout.pos.col' in viewport")

msgid "invalid 'layout.pos.col' in viewport"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'layout.pos.row' in viewport")

msgid "invalid 'layout.pos.row' in viewport"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("invalid 'linemitre' value")

msgid "invalid 'linemitre' value"
msgstr ""


#: R/ls.R: 0
#. R/ls.R: stop("invalid 'listing'")

msgid "invalid 'listing'"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'mask' value")

msgid "invalid 'mask' value"
msgstr ""


#: R/function.R: 0
#. R/function.R: stop("invalid 'n'")

msgid "invalid 'n'"
msgstr ""


#: R/origin.R: 0
#. R/origin.R: stop("invalid 'origin'")

msgid "invalid 'origin'"
msgstr ""


#: R/ls.R: 0
#. R/ls.R: stop("invalid 'print' argument")

msgid "invalid 'print' argument"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'result'")

msgid "invalid 'result'"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("invalid 'rot' value")

msgid "invalid 'rot' value"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("invalid 'row' and/or 'col' (no such cell in frame layout)")

msgid "invalid 'row' and/or 'col' (no such cell in frame layout)"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("invalid 'row' specification")

msgid "invalid 'row' specification"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("invalid 'theta'")

msgid "invalid 'theta'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid 'vp' slot")

msgid "invalid 'vp' slot"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'xscale' in viewport")

msgid "invalid 'xscale' in viewport"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("invalid 'yscale' in viewport")

msgid "invalid 'yscale' in viewport"
msgstr ""


#: R/grab.R: 0
#. R/grab.R: stop("invalid display list element")

msgid "invalid display list element"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("invalid element to add to \"gList\"")

msgid "invalid element to add to \"gList\""
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("invalid fontface ", ch)

msgid "invalid fontface"
msgstr ""


#: R/just.R: 0
#. R/just.R: stop("invalid horizontal justification")

msgid "invalid horizontal justification"
msgstr ""


#: R/just.R: 0
#. R/just.R: stop("invalid justification")

msgid "invalid justification"
msgstr ""


#: R/ls.R: 0
#. R/ls.R: stop("invalid listing")

msgid "invalid listing"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("invalid modification of the display list")

msgid "invalid modification of the display list"
msgstr ""


#: R/ls.R: 0
#. R/ls.R: stop("invalid object in 'listing'")

msgid "invalid object in 'listing'"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("invalid object inserted on the display list")

msgid "invalid object inserted on the display list"
msgstr ""


#: R/components.R: 0
#. R/components.R: stop("invalid to specify axis labels when 'at' is NULL")

msgid "invalid to specify axis labels when 'at' is NULL"
msgstr ""


#: R/just.R: 0
#. R/just.R: stop("invalid vertical justification")

msgid "invalid vertical justification"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is invalid to directly edit the 'children' or 'childrenOrder' slot")

msgid "it is invalid to directly edit the 'children' or 'childrenOrder' slot"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("it is invalid to specify both 'id' and 'id.lengths'")

msgid "it is invalid to specify both 'id' and 'id.lengths'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to add a 'grob' to a \"gTree\"")

msgid "it is only valid to add a 'grob' to a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to add a child to a \"gTree\"")

msgid "it is only valid to add a child to a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to edit a child of a \"gTree\"")

msgid "it is only valid to edit a child of a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to get 'children' from a \"gTree\"")

msgid "it is only valid to get 'children' from a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to get a child from a \"gTree\"")

msgid "it is only valid to get a child from a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to remove a child from a \"gTree\"")

msgid "it is only valid to remove a child from a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to set a 'grob' as child of a \"gTree\"")

msgid "it is only valid to set a 'grob' as child of a \"gTree\""
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("it is only valid to set a child of a \"gTree\"")

msgid "it is only valid to set a child of a \"gTree\""
msgstr ""


#: R/components.R: 0
#. R/components.R: stop("logical 'label' supplied of length 0")

msgid "logical 'label' supplied of length 0"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: gettextf("mixture of missing and non-missing values for %s",     gparname)

msgid "mixture of missing and non-missing values for %s"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("must have exactly 4 control points")

msgid "must have exactly 4 control points"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("must have exactly 4 control points per Bezier curve")

msgid "must have exactly 4 control points per Bezier curve"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("must navigate up at least one viewport")

msgid "must navigate up at least one viewport"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("must pop at least one viewport")

msgid "must pop at least one viewport"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("must specify at least one of 'xData' or 'xscale'")

msgid "must specify at least one of 'xData' or 'xscale'"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("must specify at least one of 'yData' or 'yscale'")

msgid "must specify at least one of 'yData' or 'yscale'"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("must specify at least one viewport")

msgid "must specify at least one viewport"
msgstr ""


#: R/frames.R: 0
#. R/frames.R: stop("must specify exactly one of 'side=[\"top\", \"bottom\"]', 'row', 'row.before', or 'row.after'")

msgid "must specify exactly one of 'side=[\"top\", \"bottom\"]', 'row', 'row.before', or 'row.after'"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("must specify only one of 'font' and 'fontface'")

msgid "must specify only one of 'font' and 'fontface'"
msgstr ""


#: R/gpar.R: 0
#. R/gpar.R: stop("must specify only valid 'gpar' names")

msgid "must specify only valid 'gpar' names"
msgstr ""


#: R/debug.R: 0
#. R/debug.R: stop("must start new page if showing leaves separately")

msgid "must start new page if showing leaves separately"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("non-unit operand must be numeric")

msgid "non-unit operand must be numeric"
msgstr ""


#: R/highlevel.R: 0
#. R/highlevel.R: stop("nrow * ncol < #{legend labels}")

msgid "nrow * ncol < #{legend labels}"
msgstr ""


#: R/grab.R: 0
#. R/grab.R: warning("one or more grobs overwritten (grab WILL not be faithful; try 'wrap.grobs = TRUE')")

msgid "one or more grobs overwritten (grab WILL not be faithful; try 'wrap.grobs = TRUE')"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("only 'grobs' allowed in \"gList\"")

msgid "only 'grobs' allowed in \"gList\""
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("only one operand may be a unit")

msgid "only one operand may be a unit"
msgstr ""


#: R/grid.R: 0
#. R/grid.R: stop("only valid to push viewports")

msgid "only valid to push viewports"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("only viewports allowed in 'vpList'")

msgid "only viewports allowed in 'vpList'"
msgstr ""


#: R/viewport.R: 0
#. R/viewport.R: stop("only viewports allowed in 'vpStack'")

msgid "only viewports allowed in 'vpStack'"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: gettextf("operator '%s' not meaningful for units", .Generic)

msgid "operator '%s' not meaningful for units"
msgstr ""


#: R/unit.R: 0
#. R/unit.R: stop("replacement must be of length 1", call. = FALSE)

msgid "replacement must be of length 1"
msgstr ""


#: R/zzz.R: 0
#. R/zzz.R: warning("shutting down all devices when unloading 'grid' namespace",     call. = FALSE)

msgid "shutting down all devices when unloading 'grid' namespace"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: gettextf("slot '%s' not found", i)

msgid "slot '%s' not found"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("the new 'grob' must have the same name as the old 'grob'")

msgid "the new 'grob' must have the same name as the old 'grob'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: stop("unable to coerce to \"gList\"")

msgid "unable to coerce to \"gList\""
msgstr ""


#: R/grab.R: 0
#. R/grab.R: warning("viewport overwritten (grab MAY not be faithful)")

msgid "viewport overwritten (grab MAY not be faithful)"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("x and y must be units")

msgid "x and y must be units"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: stop("x, y, width, and height must all be length 1")

msgid "x, y, width, and height must all be length 1"
msgstr ""


#: R/patterns.R: 0
#. R/patterns.R: stop("x1, y1, x2, and y2 must all be length 1")

msgid "x1, y1, x2, and y2 must all be length 1"
msgstr ""


#: R/primitives.R: 0
#. R/primitives.R: stop("zero-length 'pch'")

msgid "zero-length 'pch'"
msgstr ""


#: R/grob.R: 0
#. R/grob.R: ngettext(sum(bad), "invalid grob name", "invalid grob names")

msgid        "invalid grob name"
msgid_plural "invalid grob names"
msgstr[0]    ""
msgstr[1]    ""


#: R/viewport.R: 0
#. R/viewport.R: ngettext(sum(bad), "invalid viewport name", "invalid viewport names")

msgid        "invalid viewport name"
msgid_plural "invalid viewport names"
msgstr[0]    ""
msgstr[1]    ""
