msgid ""
msgstr ""
"Project-Id-Version: base 4.5.0\n"
"POT-Creation-Date: 2024-09-15 13:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"


#: R/New-Internal.R: 0
#. R/New-Internal.R: stop("\"all\" and \"exact\" are mutually exclusive")

msgid "\"all\" and \"exact\" are mutually exclusive"
msgstr ""


#: R/New-Internal.R: 0
#. R/New-Internal.R: stop("\"hexNumeric\" and \"digits17\" are mutually exclusive")

msgid "\"hexNumeric\" and \"digits17\" are mutually exclusive"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettext("%s and %s are not equal:\n  %s")

msgid "%s and %s are not equal:\n  %s"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: gettextf("%s and %s must have the same length", sQuote("x"),     sQuote("m"))

msgid "%s and %s must have the same length"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: gettextf("%s converted to character string", sQuote(name))

msgid "%s converted to character string"
msgstr ""


#: R/attach.R: 0
#: R/namespace.R: 0
#: R/namespace.R: 0
#: R/namespace.R: 0
#. R/attach.R: gettextf("%s failed in %s() for '%s', details:\n  call: %s\n  error: %s",     ".onDetach", "detach", pkgname, deparse(conditionCall(res))[1L],     conditionMessage(res))
#. R/attach.R: gettextf("%s failed in %s() for '%s', details:\n  call: %s\n  error: %s",     ".Last.lib", "detach", pkgname, deparse(conditionCall(res))[1L],     conditionMessage(res))
#. R/namespace.R: gettextf("%s failed in %s() for '%s', details:\n  call: %s\n  error: %s",     hookname, "attachNamespace", nsname, deparse(conditionCall(res))[1L],     conditionMessage(res))
#. R/namespace.R: gettextf("%s failed in %s() for '%s', details:\n  call: %s\n  error: %s",     hookname, "loadNamespace", pkgname, deparse(conditionCall(res))[1L],     conditionMessage(res))
#. R/namespace.R: gettextf("%s failed in %s() for '%s', details:\n  call: %s\n  error: %s",     hookname, "unloadNamespace", nsname, deparse(conditionCall(res))[1L],     conditionMessage(res))

msgid "%s failed in %s() for '%s', details:\n  call: %s\n  error: %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("%s is not a valid installed package", sQuote(package))

msgid "%s is not a valid installed package"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: gettextf("%s namespace cannot be unloaded:\n  ", sQuote(pkgname))

msgid "%s namespace cannot be unloaded:"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: gettextf("%s not defined for \"Date\" objects", .Generic)
#. R/dates.R: gettextf("%s not defined for \"Date\" objects", .Generic)
#. R/dates.R: gettextf("%s not defined for \"Date\" objects", .Generic)

msgid "%s not defined for \"Date\" objects"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettextf("%s not defined for \"numeric_version\" objects", .Generic)

msgid "%s not defined for \"numeric_version\" objects"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("%s not found", sQuote(x))

msgid "%s not found"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("%s not found on search path, using pos = 2", sQuote(pos))

msgid "%s not found on search path, using pos = 2"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: gettextf("%s not meaningful for factors", sQuote(.Generic))
#. R/factor.R: gettextf("%s not meaningful for factors", sQuote(.Generic))
#. R/factor.R: gettextf("%s not meaningful for factors", sQuote(.Generic))

msgid "%s not meaningful for factors"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("%s only defined for equally-sized data frames", sQuote(.Generic))

msgid "%s only defined for equally-sized data frames"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("%sPackages in library %s:\n", sep, sQuote(lib))

msgid "%sPackages in library %s:"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: gettextf("'%s' could not be run", cmd0)
#. R/windows/system.R: gettextf("'%s' could not be run", cmd0)

msgid "'%s' could not be run"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: gettextf("'%s' execution failed with error code %d", cmd0, res)
#. R/windows/system.R: gettextf("'%s' execution failed with error code %d", cmd0, res)

msgid "'%s' execution failed with error code %d"
msgstr ""


#: R/Defunct.R: 0
#. R/Defunct.R: gettextf("'%s' is defunct.\n", fname[length(fname)])

msgid "'%s' is defunct."
msgstr ""


#: R/Deprecated.R: 0
#. R/Deprecated.R: gettextf("'%s' is deprecated.\n", old)

msgid "'%s' is deprecated."
msgstr ""


#: R/match.fun.R: 0
#. R/match.fun.R: gettextf("'%s' is not a function, character or symbol", deparse(FUN))

msgid "'%s' is not a function, character or symbol"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: gettextf("'%s' is not a valid abbreviation of an RNG", kind)
#. R/RNG.R: gettextf("'%s' is not a valid abbreviation of an RNG", kind)

msgid "'%s' is not a valid abbreviation of an RNG"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: gettextf("'%s' is not a valid choice", normal.kind)
#. R/RNG.R: gettextf("'%s' is not a valid choice", sample.kind)
#. R/RNG.R: gettextf("'%s' is not a valid choice", normal.kind)
#. R/RNG.R: gettextf("'%s' is not a valid choice", sample.kind)

msgid "'%s' is not a valid choice"
msgstr ""


#: R/source.R: 0
#. R/source.R: gettextf("'%s' is not an existing file", file)

msgid "'%s' is not an existing file"
msgstr ""


#: R/notyet.R: 0
#. R/notyet.R: gettextf("'%s' is not implemented yet", as.character(sys.call(sys.parent())[[1L]]))

msgid "'%s' is not implemented yet"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: sprintf("'%s' is not meaningful for ordered factors", .Generic)

msgid "'%s' is not meaningful for ordered factors"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: gettextf("'%s' is only meaningful for ordered factors if all arguments have the same level sets",     .Generic)

msgid "'%s' is only meaningful for ordered factors if all arguments have the same level sets"
msgstr ""


#: R/format.R: 0
#. R/format.R: gettextf("'%s' must be a character string", "flag")

msgid "'%s' must be a character string"
msgstr ""


#: R/load.R: 0
#: R/serialize.R: 0
#. R/load.R: gettextf("'%s' must be a non-empty string", "file")
#. R/load.R: gettextf("'%s' must be a non-empty string", "file")
#. R/serialize.R: gettextf("'%s' must be a non-empty string", "file")

msgid "'%s' must be a non-empty string"
msgstr ""


#: R/all.equal.R: 0
#. R/all.equal.R: gettextf("'%s' must be logical", "check.attributes")
#. R/all.equal.R: gettextf("'%s' must be logical", "check.attributes")
#. R/all.equal.R: gettextf("'%s' must be logical", "check.attributes")
#. R/all.equal.R: gettextf("'%s' must be logical", "use.names")
#. R/all.equal.R: gettextf("'%s' must be logical", "check.attributes")
#. R/all.equal.R: gettextf("'%s' must be logical", "check.attributes")
#. R/all.equal.R: gettextf("'%s' must be logical", "check.names")

msgid "'%s' must be logical"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: gettextf("'%s' not defined for \"POSIXt\" objects", .Generic)
#. R/datetime.R: gettextf("'%s' not defined for \"POSIXt\" objects", .Generic)
#. R/datetime.R: gettextf("'%s' not defined for \"POSIXt\" objects", .Generic)
#. R/datetime.R: gettextf("'%s' not defined for \"POSIXt\" objects", .Generic)

msgid "'%s' not defined for \"POSIXt\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: gettextf("'%s' not defined for \"difftime\" objects", .Generic)
#. R/datetime.R: gettextf("'%s' not defined for \"difftime\" objects", .Generic)
#. R/datetime.R: gettextf("'%s' not defined for \"difftime\" objects", .Generic)

msgid "'%s' not defined for \"difftime\" objects"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettextf("'%s' not defined for \"numeric_version\" objects",     .Generic)

msgid "'%s' not defined for \"numeric_version\" objects"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: gettextf("'%s' not defined for ordered factors", .Generic)

msgid "'%s' not defined for ordered factors"
msgstr ""


#: R/library.R: 0
#. R/library.R: warning("'DESCRIPTION' has an 'Encoding' field and re-encoding is not possible",     call. = FALSE)
#. R/library.R: warning("'DESCRIPTION' has an 'Encoding' field and re-encoding is not possible",     call. = FALSE)

msgid "'DESCRIPTION' has an 'Encoding' field and re-encoding is not possible"
msgstr ""


#: R/tapply.R: 0
#. R/tapply.R: stop("'INDEX' is of length zero")

msgid "'INDEX' is of length zero"
msgstr ""


#: R/apply.R: 0
#: R/array.R: 0
#. R/apply.R: stop("'MARGIN' does not match dim(X)")
#. R/array.R: stop("'MARGIN' does not match dim(X)")

msgid "'MARGIN' does not match dim(X)"
msgstr ""


#: R/tapply.R: 0
#. R/tapply.R: stop("'X' must be a data frame when 'INDEX' is a formula")

msgid "'X' must be a data frame when 'INDEX' is a formula"
msgstr ""


#: R/apply.R: 0
#. R/apply.R: stop("'X' must have named dimnames")

msgid "'X' must have named dimnames"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("'arg' must be NULL or a character vector")

msgid "'arg' must be NULL or a character vector"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("'arg' must be of length 1")

msgid "'arg' must be of length 1"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("'arg' must be of length >= 1")

msgid "'arg' must be of length >= 1"
msgstr ""


#: R/format.R: 0
#. R/format.R: gettextf("'big.mark' and 'decimal.mark' are both '%s', which could be confusing",     big.mark)

msgid "'big.mark' and 'decimal.mark' are both '%s', which could be confusing"
msgstr ""


#: R/tabulate.R: 0
#. R/tabulate.R: stop("'bin' must be numeric or a factor")

msgid "'bin' must be numeric or a factor"
msgstr ""


#: R/cut.R: 0
#. R/cut.R: stop("'breaks' are not unique")

msgid "'breaks' are not unique"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("'by' argument is much too small")

msgid "'by' argument is much too small"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("'by' is NA")
#. R/datetime.R: stop("'by' is NA")

msgid "'by' is NA"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/seq.R: 0
#. R/dates.R: stop("'by' must be of length 1")
#. R/datetime.R: stop("'by' must be of length 1")
#. R/seq.R: stop("'by' must be of length 1")

msgid "'by' must be of length 1"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("'by' must match number of columns")

msgid "'by' must match number of columns"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("'by' must match numbers of columns")

msgid "'by' must match numbers of columns"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("'by' must specify one or more columns as numbers, names or logical")

msgid "'by' must specify one or more columns as numbers, names or logical"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("'by.x' and 'by.y' specify different numbers of columns")

msgid "'by.x' and 'by.y' specify different numbers of columns"
msgstr ""


#: R/source.R: 0
#. R/source.R: warning("'chdir = TRUE' makes no sense for a URL")

msgid "'chdir = TRUE' makes no sense for a URL"
msgstr ""


#: R/source.R: 0
#. R/source.R: warning("'chdir = TRUE' makes no sense for a connection")

msgid "'chdir = TRUE' makes no sense for a connection"
msgstr ""


#: R/load.R: 0
#. R/load.R: gettextf("'compress = \"%s\"' is invalid", compress)

msgid "'compress = \"%s\"' is invalid"
msgstr ""


#: R/serialize.R: 0
#. R/serialize.R: warning("'compress' is ignored unless 'file' is a file name")

msgid "'compress' is ignored unless 'file' is a file name"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("'compress' must be logical or character")

msgid "'compress' must be logical or character"
msgstr ""


#: R/serialize.R: 0
#. R/serialize.R: stop("'connection' must be a connection")
#. R/serialize.R: stop("'connection' must be a connection")

msgid "'connection' must be a connection"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'decreasing' must be a length-1 logical vector.\nDid you intend to set 'partial'?")

msgid "'decreasing' must be a length-1 logical vector.\nDid you intend to set 'partial'?"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'decreasing' of length > 1 is only for method = \"radix\"")

msgid "'decreasing' of length > 1 is only for method = \"radix\""
msgstr ""


#: R/det.R: 0
#. R/det.R: stop("'determinant' not currently defined for complex matrices")

msgid "'determinant' not currently defined for complex matrices"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("'digits' must be numeric, integer valued")

msgid "'digits' must be numeric, integer valued"
msgstr ""


#: R/format.R: 0
#. R/format.R: gettextf("'digits' reduced to %d", maxDigits)

msgid "'digits' reduced to %d"
msgstr ""


#: R/array.R: 0
#. R/array.R: stop("'dim' cannot be of length 0")

msgid "'dim' cannot be of length 0"
msgstr ""


#: R/array.R: 0
#. R/array.R: stop("'dim' specifies too large an array")

msgid "'dim' specifies too large an array"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("'drop' argument will be ignored")

msgid "'drop' argument will be ignored"
msgstr ""


#: R/source.R: 0
#. R/source.R: stop("'echo' must be logical")

msgid "'echo' must be logical"
msgstr ""


#: R/table.R: 0
#. R/table.R: warning("'exclude' containing NA and 'useNA' != \"no\"' are a bit contradicting")

msgid "'exclude' containing NA and 'useNA' != \"no\"' are a bit contradicting"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("'exportClassPattern' specified in 'NAMESPACE' but no matching classes in package %s",     sQuote(package))

msgid "'exportClassPattern' specified in 'NAMESPACE' but no matching classes in package %s"
msgstr ""


#: R/sink.R: 0
#. R/sink.R: stop("'file' must be NULL or an already open connection")

msgid "'file' must be NULL or an already open connection"
msgstr ""


#: R/sink.R: 0
#. R/sink.R: stop("'file' must be NULL, a connection or a character string")

msgid "'file' must be NULL, a connection or a character string"
msgstr ""


#: R/dcf.R: 0
#: R/scan.R: 0
#. R/dcf.R: stop("'file' must be a character string or connection")
#. R/dcf.R: stop("'file' must be a character string or connection")
#. R/scan.R: stop("'file' must be a character string or connection")

msgid "'file' must be a character string or connection"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("'file' must be specified")

msgid "'file' must be specified"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'flag' should contain only characters from [0+- #'I]")

msgid "'flag' should contain only characters from [0+- #'I]"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'format' must be one of {\"f\",\"e\",\"E\",\"g\",\"G\", \"fg\", \"s\"}")

msgid "'format' must be one of {\"f\",\"e\",\"E\",\"g\",\"G\", \"fg\", \"s\"}"
msgstr ""


#: R/split.R: 0
#. R/split.R: stop("'formula' must be a formula")

msgid "'formula' must be a formula"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("'from' must be a \"Date\" object")

msgid "'from' must be a \"Date\" object"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("'from' must be a \"POSIXt\" object")

msgid "'from' must be a \"POSIXt\" object"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("'from' must be a finite number")
#. R/seq.R: stop("'from' must be a finite number")

msgid "'from' must be a finite number"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/seq.R: 0
#. R/dates.R: stop("'from' must be of length 1")
#. R/datetime.R: stop("'from' must be of length 1")
#. R/seq.R: stop("'from' must be of length 1")

msgid "'from' must be of length 1"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("'from' must be raw or character")

msgid "'from' must be raw or character"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("'from' must be specified")
#. R/datetime.R: stop("'from' must be specified")

msgid "'from' must be specified"
msgstr ""


#: R/formals.R: 0
#. R/formals.R: warning("'fun' is not a function")
#. R/formals.R: warning("'fun' is not a function")

msgid "'fun' is not a function"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("'headers' must have names and must not be NA")

msgid "'headers' must have names and must not be NA"
msgstr ""


#: R/New-Internal.R: 0
#. R/New-Internal.R: stop("'iconvlist' is not available on this system")
#. R/New-Internal.R: stop("'iconvlist' is not available on this system")

msgid "'iconvlist' is not available on this system"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'ignore.stderr' must be TRUE or FALSE")
#. R/windows/system.R: stop("'ignore.stderr' must be TRUE or FALSE")

msgid "'ignore.stderr' must be TRUE or FALSE"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'ignore.stdout' must be TRUE or FALSE")
#. R/windows/system.R: stop("'ignore.stdout' must be TRUE or FALSE")

msgid "'ignore.stdout' must be TRUE or FALSE"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("'incomparables' is supported only for merging on a single column")

msgid "'incomparables' is supported only for merging on a single column"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'index.return' only for 'na.last = NA'")

msgid "'index.return' only for 'na.last = NA'"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'index.return' only for non-factors")

msgid "'index.return' only for non-factors"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("'input' and 'target' must be character vectors")

msgid "'input' and 'target' must be character vectors"
msgstr ""


#: R/unix/system.unix.R: 0
#. R/unix/system.unix.R: stop("'input' must be a character vector or 'NULL'")
#. R/unix/system.unix.R: stop("'input' must be a character vector or 'NULL'")

msgid "'input' must be a character vector or 'NULL'"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("'input' must have length 1")

msgid "'input' must have length 1"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'input.d.mark' has no characters")

msgid "'input.d.mark' has no characters"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'intern' must be TRUE or FALSE")
#. R/windows/system.R: stop("'intern' must be TRUE or FALSE")

msgid "'intern' must be TRUE or FALSE"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: stop("'invisible' must be TRUE or FALSE")
#. R/windows/system.R: stop("'invisible' must be TRUE or FALSE")

msgid "'invisible' must be TRUE or FALSE"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("'k' is too large")

msgid "'k' is too large"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: stop("'kind' must be a character string of length 1 (RNG to be used).")
#. R/RNG.R: stop("'kind' must be a character string of length 1 (RNG to be used).")

msgid "'kind' must be a character string of length 1 (RNG to be used)."
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/diff.R: 0
#. R/dates.R: stop("'lag' and 'differences' must be integers >= 1")
#. R/datetime.R: stop("'lag' and 'differences' must be integers >= 1")
#. R/diff.R: stop("'lag' and 'differences' must be integers >= 1")

msgid "'lag' and 'differences' must be integers >= 1"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("'length.out' must be a non-negative number")

msgid "'length.out' must be a non-negative number"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("'length.out' must be of length 1")
#. R/datetime.R: stop("'length.out' must be of length 1")

msgid "'length.out' must be of length 1"
msgstr ""


#: R/source.R: 0
#: R/stop.R: 0
#. R/source.R: stop("'local' must be TRUE, FALSE or an environment")
#. R/stop.R: stop("'local' must be TRUE, FALSE or an environment")

msgid "'local' must be TRUE, FALSE or an environment"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: stop("'minimized' must be TRUE or FALSE")
#. R/windows/system.R: stop("'minimized' must be TRUE or FALSE")

msgid "'minimized' must be TRUE or FALSE"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'mode' must be \"double\" (\"real\"), \"integer\" or \"character\"")

msgid "'mode' must be \"double\" (\"real\"), \"integer\" or \"character\""
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("'name' must be a single character string")

msgid "'name' must be a single character string"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: stop("'normal.kind' must be a character string of length 1")
#. R/RNG.R: stop("'normal.kind' must be a character string of length 1")

msgid "'normal.kind' must be a character string of length 1"
msgstr ""


#: R/diag.R: 0
#. R/diag.R: stop("'nrow' or 'ncol' cannot be specified when 'x' is a matrix")

msgid "'nrow' or 'ncol' cannot be specified when 'x' is a matrix"
msgstr ""


#: R/table.R: 0
#. R/table.R: gettextf("'object' must inherit from class %s", dQuote("table"))

msgid "'object' must inherit from class %s"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("'origin' must be of length one")
#. R/datetime.R: stop("'origin' must be of length one")

msgid "'origin' must be of length one"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("'origin' must be one of 'start', 'current' or 'end'")

msgid "'origin' must be one of 'start', 'current' or 'end'"
msgstr ""


#: R/files.R: 0
#: R/library.R: 0
#. R/files.R: stop("'package' must be of length 1")
#. R/library.R: stop("'package' must be of length 1")

msgid "'package' must be of length 1"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'partial' sorting not supported by radix method")

msgid "'partial' sorting not supported by radix method"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: stop("'pos=1' is not possible and has been warned about for years")

msgid "'pos=1' is not possible and has been warned about for years"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("'qr' and 'y' must have the same number of rows")
#. R/qr.R: stop("'qr' and 'y' must have the same number of rows")
#. R/qr.R: stop("'qr' and 'y' must have the same number of rows")
#. R/qr.R: stop("'qr' and 'y' must have the same number of rows")
#. R/qr.R: stop("'qr' and 'y' must have the same number of rows")

msgid "'qr' and 'y' must have the same number of rows"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'receive.console.signals' must be TRUE or FALSE")
#. R/unix/system.unix.R: stop("'receive.console.signals' must be TRUE or FALSE")
#. R/windows/system.R: stop("'receive.console.signals' must be TRUE or FALSE")
#. R/windows/system.R: stop("'receive.console.signals' must be TRUE or FALSE")

msgid "'receive.console.signals' must be TRUE or FALSE"
msgstr ""


#: R/files.R: 0
#. R/files.R: warning("'recursive' will be ignored as 'to' is not a single existing directory")

msgid "'recursive' will be ignored as 'to' is not a single existing directory"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("'row.names' is not a character or integer vector of length %d",     nrows)

msgid "'row.names' is not a character or integer vector of length %d"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("'row.names' should specify one of the variables")

msgid "'row.names' should specify one of the variables"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: stop("'sample.kind' must be a character string of length 1")
#. R/RNG.R: stop("'sample.kind' must be a character string of length 1")

msgid "'sample.kind' must be a character string of length 1"
msgstr ""


#: R/all.equal.R: 0
#. R/all.equal.R: stop("'scale' should be numeric or NULL")

msgid "'scale' should be numeric or NULL"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: stop("'show.output.on.console' must be TRUE or FALSE")

msgid "'show.output.on.console' must be TRUE or FALSE"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'stderr' must be of length 1")
#. R/windows/system.R: stop("'stderr' must be of length 1")

msgid "'stderr' must be of length 1"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'stdout' must be of length 1")
#. R/windows/system.R: stop("'stdout' must be of length 1")

msgid "'stdout' must be of length 1"
msgstr ""


#: R/frametools.R: 0
#. R/frametools.R: stop("'subset' must be logical")
#. R/frametools.R: stop("'subset' must be logical")
#. R/frametools.R: stop("'subset' must be logical")

msgid "'subset' must be logical"
msgstr ""


#: R/warnings.R: 0
#. R/warnings.R: stop("'tags' must be a character vector of the same length as 'x'")

msgid "'tags' must be a character vector of the same length as 'x'"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("'tim' is not character or numeric")

msgid "'tim' is not character or numeric"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("'timeout' must be NULL or a non-negative number")

msgid "'timeout' must be NULL or a non-negative number"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("'to' must be a \"Date\" object")

msgid "'to' must be a \"Date\" object"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("'to' must be a \"POSIXt\" object")

msgid "'to' must be a \"POSIXt\" object"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("'to' must be a finite number")

msgid "'to' must be a finite number"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/seq.R: 0
#. R/dates.R: stop("'to' must be of length 1")
#. R/datetime.R: stop("'to' must be of length 1")
#. R/seq.R: stop("'to' must be of length 1")

msgid "'to' must be of length 1"
msgstr ""


#: R/all.equal.R: 0
#. R/all.equal.R: stop("'tolerance' should be numeric")

msgid "'tolerance' should be numeric"
msgstr ""


#: R/mean.R: 0
#. R/mean.R: stop("'trim' must be numeric of length one")

msgid "'trim' must be numeric of length one"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: warning("'tzone' attributes are inconsistent")

msgid "'tzone' attributes are inconsistent"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: stop("'uplo' must be \"U\" or \"L\"")
#. R/kappa.R: stop("'uplo' must be \"U\" or \"L\"")

msgid "'uplo' must be \"U\" or \"L\""
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("'value' is the wrong length")

msgid "'value' is the wrong length"
msgstr ""


#: R/attr.R: 0
#. R/attr.R: stop("'value' must be a list")

msgid "'value' must be a list"
msgstr ""


#: R/findInt.R: 0
#. R/findInt.R: stop("'vec' must be sorted non-decreasingly and not contain NAs")

msgid "'vec' must be sorted non-decreasingly and not contain NAs"
msgstr ""


#: R/library.R: 0
#. R/library.R: message("'verbose' and 'quietly' are both true; being verbose then ..")

msgid "'verbose' and 'quietly' are both true; being verbose then .."
msgstr ""


#: R/source.R: 0
#. R/source.R: warning("'verbose' is TRUE, 'echo' not; ... coercing 'echo <- TRUE'")

msgid "'verbose' is TRUE, 'echo' not; ... coercing 'echo <- TRUE'"
msgstr ""


#: R/unix/system.unix.R: 0
#: R/windows/system.R: 0
#: R/windows/system.R: 0
#. R/unix/system.unix.R: stop("'wait' must be TRUE or FALSE")
#. R/unix/system.unix.R: stop("'wait' must be TRUE or FALSE")
#. R/windows/system.R: stop("'wait' must be TRUE or FALSE")
#. R/windows/system.R: stop("'wait' must be TRUE or FALSE")

msgid "'wait' must be TRUE or FALSE"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: stop("'which' must be character or numeric")

msgid "'which' must be character or numeric"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: stop("'which' must be of length 1")

msgid "'which' must be of length 1"
msgstr ""


#: R/unix/system.unix.R: 0
#. R/unix/system.unix.R: warning("'which' was not found on this platform")

msgid "'which' was not found on this platform"
msgstr ""


#: R/toString.R: 0
#. R/toString.R: stop("'width' must be positive")

msgid "'width' must be positive"
msgstr ""


#: R/srcfile.R: 0
#. R/srcfile.R: stop("'x' and 'to' must refer to same file")

msgid "'x' and 'to' must refer to same file"
msgstr ""


#: R/strwrap.R: 0
#. R/strwrap.R: stop("'x' and 'y' must have the same length")

msgid "'x' and 'y' must have the same length"
msgstr ""


#: R/octhex.R: 0
#. R/octhex.R: stop("'x' cannot be coerced to class \"hexmode\"")

msgid "'x' cannot be coerced to class \"hexmode\""
msgstr ""


#: R/octhex.R: 0
#. R/octhex.R: stop("'x' cannot be coerced to class \"octmode\"")

msgid "'x' cannot be coerced to class \"octmode\""
msgstr ""


#: R/diag.R: 0
#. R/diag.R: stop("'x' is an array, but not one-dimensional.")

msgid "'x' is an array, but not one-dimensional."
msgstr ""


#: R/table.R: 0
#. R/table.R: stop("'x' is not an array")

msgid "'x' is not an array"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("'x' must be a date-time object")
#. R/datetime.R: stop("'x' must be a date-time object")

msgid "'x' must be a date-time object"
msgstr ""


#: R/det.R: 0
#. R/det.R: stop("'x' must be a square matrix")

msgid "'x' must be a square matrix"
msgstr ""


#: R/rle.R: 0
#. R/rle.R: stop("'x' must be a vector of an atomic type")

msgid "'x' must be a vector of an atomic type"
msgstr ""


#: R/colSums.R: 0
#. R/colSums.R: stop("'x' must be an array of at least two dimensions")
#. R/colSums.R: stop("'x' must be an array of at least two dimensions")
#. R/colSums.R: stop("'x' must be an array of at least two dimensions")
#. R/colSums.R: stop("'x' must be an array of at least two dimensions")

msgid "'x' must be an array of at least two dimensions"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'x' must be atomic")

msgid "'x' must be atomic"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("'x' must be atomic for 'sort.list', method \"shell\" and \"quick\"\nHave you called 'sort' on a list?")

msgid "'x' must be atomic for 'sort.list', method \"shell\" and \"quick\"\nHave you called 'sort' on a list?"
msgstr ""


#: R/cut.R: 0
#: R/jitter.R: 0
#: R/rowsum.R: 0
#. R/cut.R: stop("'x' must be numeric")
#. R/jitter.R: stop("'x' must be numeric")
#. R/rowsum.R: stop("'x' must be numeric")

msgid "'x' must be numeric"
msgstr ""


#: R/array.R: 0
#: R/sweep.R: 0
#. R/array.R: stop("'x' must have named dimnames")
#. R/array.R: stop("'x' must have named dimnames")
#. R/sweep.R: stop("'x' must have named dimnames")

msgid "'x' must have named dimnames"
msgstr ""


#: R/table.R: 0
#. R/table.R: gettextf("'x' must inherit from class %s", dQuote("summary.table"))

msgid "'x' must inherit from class %s"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'zero.print' has length > 1")

msgid "'zero.print' has length > 1"
msgstr ""


#: R/format.R: 0
#. R/format.R: warning("'zero.print' is truncated to fit into formatted zeros; consider 'replace=TRUE'")

msgid "'zero.print' is truncated to fit into formatted zeros; consider 'replace=TRUE'"
msgstr ""


#: R/format.R: 0
#. R/format.R: stop("'zero.print' must be character, logical or NULL")

msgid "'zero.print' must be character, logical or NULL"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("- done loading ", dQuote(package))

msgid "- done loading"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("- loading ", dQuote(package))

msgid "- loading"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- done processing S4 stuff for ", dQuote(package))

msgid "-- done processing S4 stuff for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- done processing imports for ", dQuote(package))

msgid "-- done processing imports for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- done registerS3methods for ", dQuote(package))

msgid "-- done registerS3methods for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- done running .onLoad for ", dQuote(package))

msgid "-- done running .onLoad for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- loading code for ", dQuote(package))
#. R/namespace.R: message("-- loading code for ", dQuote(package))

msgid "-- loading code for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- loading lazydata for ", dQuote(package))

msgid "-- loading lazydata for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- loading sysdata for ", dQuote(package))

msgid "-- loading sysdata for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- processing S4 stuff for ", dQuote(package))

msgid "-- processing S4 stuff for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- processing imports for ", dQuote(package))

msgid "-- processing imports for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- registerS3methods for ", dQuote(package))

msgid "-- registerS3methods for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("-- running .onLoad for ", dQuote(package))

msgid "-- running .onLoad for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("--- caching metadata")

msgid "--- caching metadata"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("--- done caching metadata")

msgid "--- done caching metadata"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("--- processing classes")

msgid "--- processing classes"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("--- processing exports for ", dQuote(package))

msgid "--- processing exports for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("--- sealing exports for ", dQuote(package))

msgid "--- sealing exports for"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: message("---- export method ", sQuote(mi))

msgid "---- export method"
msgstr ""


#: R/../../../../share/R/REMOVE.R: 0
#. R/../../../../share/R/REMOVE.R: stop("-l option without value", call. = FALSE)

msgid "-l option without value"
msgstr ""


#: R/rm.R: 0
#. R/rm.R: stop("... must contain names or character strings")

msgid "... must contain names or character strings"
msgstr ""


#: R/eigen.R: 0
#. R/eigen.R: stop("0 x 0 matrix")

msgid "0 x 0 matrix"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettext("<0 elements>")

msgid "<0 elements>"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettext("<0 rows> (or 0-length row.names)\n")

msgid "<0 rows> (or 0-length row.names)"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("\nAttaching package: %s\n", sQuote(package))

msgid "Attaching package: %s"
msgstr ""


#: R/load.R: 0
#. R/load.R: gettextf("Attempting to load the environment %s", sQuote(info))

msgid "Attempting to load the environment %s"
msgstr ""


#: R/structure.R: 0
#. R/structure.R: warning("Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes.\n  Consider 'structure(list(), *)' instead.")

msgid "Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes.\n  Consider 'structure(list(), *)' instead."
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("Conflicts attaching package %s:\n%s", sQuote(package),     emsg)

msgid "Conflicts attaching package %s:\n%s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("DLL %s already loaded", sQuote(chname1))

msgid "DLL %s already loaded"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("DLL %s not found", sQuote(chname1))

msgid "DLL %s not found"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("DLL %s not found: maybe not installed for this architecture?",     sQuote(chname))

msgid "DLL %s not found: maybe not installed for this architecture?"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("DLL %s was not loaded", sQuote(chname1))

msgid "DLL %s was not loaded"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettext("Description:")

msgid "Description:"
msgstr ""


#: R/zzz.R: 0
#. R/zzz.R: gettextf("Direct call of '%s()' is deprecated.  Use '%s()' or '%s()' instead",     "PLACEHOLDER", "as.data.frame.vector", "as.data.frame")

msgid "Direct call of '%s()' is deprecated.  Use '%s()' or '%s()' instead"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("Documentation for package %s", sQuote(x$name))

msgid "Documentation for package %s"
msgstr ""


#: R/../../../../share/R/REMOVE.R: 0
#. R/../../../../share/R/REMOVE.R: stop("ERROR: cannot cd to directory ", sQuote(lib), call. = FALSE)

msgid "ERROR: cannot cd to directory"
msgstr ""


#: R/../../../../share/R/REMOVE.R: 0
#. R/../../../../share/R/REMOVE.R: stop("ERROR: no packages specified", call. = FALSE)

msgid "ERROR: no packages specified"
msgstr ""


#: R/../../../../share/R/REMOVE.R: 0
#. R/../../../../share/R/REMOVE.R: stop("ERROR: no permission to remove from directory ", sQuote(lib),     call. = FALSE)

msgid "ERROR: no permission to remove from directory"
msgstr ""


#: R/New-Internal.R: 0
#: R/conditions.R: 0
#: R/library.R: 0
#. R/New-Internal.R: gettextf("Error in '%s': ", paste(dcall, collapse = ""), domain = "R-base")
#. R/conditions.R: gettextf("Error in '%s':", deparse(call, nlines = 1L), domain = "R-base")
#. R/library.R: gettextf("Error in '%s': ", paste(deparse(cc)[1L], collapse = "",     sep = ""), domain = "R-base")

msgid "Error in '%s':"
msgstr ""


#: R/New-Internal.R: 0
#: R/conditions.R: 0
#: R/library.R: 0
#: R/library.R: 0
#. R/New-Internal.R: gettext("Error: ")
#. R/conditions.R: gettext("Error: ", domain = "R-base")
#. R/library.R: gettext("Error: ", domain = "R-base")
#. R/library.R: gettext("Error:", domain = "R-base")

msgid "Error:"
msgstr ""


#: R/format.R: 0
#. R/format.R: gettextf("Found no format() method for class \"%s\"", class(x))

msgid "Found no format() method for class \"%s\""
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("Further information is available in the following vignettes in directory %s:",     sQuote(file.path(x$path, "doc")))

msgid "Further information is available in the following vignettes in directory %s:"
msgstr ""


#: R/warnings.R: 0
#. R/warnings.R: gettextf("In %s", sQuote(cmd), domain = "R-base")

msgid "In %s"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettextf("In bare C locale, not forcing locale; possibly use 'force = TRUE'?")

msgid "In bare C locale, not forcing locale; possibly use 'force = TRUE'?"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettextf("In bare C locale: LANGUAGE reset, but message language may be unchanged")

msgid "In bare C locale: LANGUAGE reset, but message language may be unchanged"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettext("Index:")

msgid "Index:"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("\n\t\tInformation on package %s", sQuote(x$name))

msgid "Information on package %s"
msgstr ""


#: R/dcf.R: 0
#. R/dcf.R: gettextf("Invalid DCF format.\nContinuation lines must not start a record.\nOffending lines start with:\n%s",     paste0("  ", lines, collapse = "\n"))

msgid "Invalid DCF format.\nContinuation lines must not start a record.\nOffending lines start with:\n%s"
msgstr ""


#: R/dcf.R: 0
#. R/dcf.R: gettextf("Invalid DCF format.\nRegular lines must have a tag.\nOffending lines start with:\n%s",     paste0("  ", lines, collapse = "\n"))

msgid "Invalid DCF format.\nRegular lines must have a tag.\nOffending lines start with:\n%s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("Loading required namespace: %s", package)

msgid "Loading required namespace: %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("Loading required package: %s", package)
#. R/library.R: gettextf("Loading required package: %s", pkg)

msgid "Loading required package: %s"
msgstr ""


#: R/duplicated.R: 0
#. R/duplicated.R: gettextf("MARGIN = %s is invalid for dim = %s", paste(MARGIN,     collapse = ","), paste(dx, collapse = ","))
#. R/duplicated.R: gettextf("MARGIN = %s is invalid for dim = %s", paste(MARGIN,     collapse = ","), paste(dx, collapse = ","))
#. R/duplicated.R: gettextf("MARGIN = %s is invalid for dim = %s", paste(MARGIN,     collapse = ","), paste(dx, collapse = ","))

msgid "MARGIN = %s is invalid for dim = %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: paste("While loading namespace \"%s\": \"%s\" differ in ncol(.), env=%d, newNS=%d.",     "Maybe package installed with version of R newer than %s ?",     sep = "\n")

msgid "Maybe package installed with version of R newer than %s ?"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: gettextf("No DLL currently loaded with name or path %s", sQuote(dll))

msgid "No DLL currently loaded with name or path %s"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: gettextf("No element named \"%s\" found in x, did you mean x[, \"%1$s\"] instead?",     i)

msgid "No element named \"%s\" found in x, did you mean x[, \"%1$s\"] instead?"
msgstr ""


#: R/interaction.R: 0
#. R/interaction.R: stop("No factors specified")

msgid "No factors specified"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("No generic function %s found corresponding to requested imported methods from package %s when loading %s (malformed exports?)",     sQuote(g), sQuote(pkg), sQuote(from))

msgid "No generic function %s found corresponding to requested imported methods from package %s when loading %s (malformed exports?)"
msgstr ""


#: R/traceback.R: 0
#. R/traceback.R: gettext("No traceback available")

msgid "No traceback available"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: stop("Only one of 'exprs', 'exprObject' or expressions, not more")

msgid "Only one of 'exprs', 'exprObject' or expressions, not more"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("Package %s version %s cannot be unloaded:\n %s", sQuote(package),     oldversion, paste0(P, conditionMessage(e), "\n"))

msgid "Package %s version %s cannot be unloaded:\n %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettext("R packages available")

msgid "R packages available"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: gettext("Registering 'evaluate' as low-level callback\n")

msgid "Registering 'evaluate' as low-level callback"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: gettextf("Removing %s", paste(discard, collapse = ", "))

msgid "Removing %s"
msgstr ""


#: R/../../../../share/R/REMOVE.R: 0
#. R/../../../../share/R/REMOVE.R: message("Removing from library ", sQuote(lib))

msgid "Removing from library"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("S3 method %s was declared but not found", sQuote(method))

msgid "S3 method %s was declared but not found"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("S4 exports specified in 'NAMESPACE' but not defined in package %s",     sQuote(package))

msgid "S4 exports specified in 'NAMESPACE' but not defined in package %s"
msgstr ""


#: R/sweep.R: 0
#. R/sweep.R: warning("STATS does not recycle exactly across MARGIN")

msgid "STATS does not recycle exactly across MARGIN"
msgstr ""


#: R/sweep.R: 0
#. R/sweep.R: warning("STATS is longer than the extent of 'dim(x)[MARGIN]'")

msgid "STATS is longer than the extent of 'dim(x)[MARGIN]'"
msgstr ""


#: R/Defunct.R: 0
#. R/Defunct.R: gettext("See help(\"Defunct\")")

msgid "See help(\"Defunct\")"
msgstr ""


#: R/Defunct.R: 0
#. R/Defunct.R: gettextf("See help(\"Defunct\") and help(\"%s-defunct\").", package)

msgid "See help(\"Defunct\") and help(\"%s-defunct\")."
msgstr ""


#: R/Deprecated.R: 0
#. R/Deprecated.R: gettext("See help(\"Deprecated\")")

msgid "See help(\"Deprecated\")"
msgstr ""


#: R/Deprecated.R: 0
#. R/Deprecated.R: gettextf("See help(\"Deprecated\") and help(\"%s-deprecated\").",     package)

msgid "See help(\"Deprecated\") and help(\"%s-deprecated\")."
msgstr ""


#: R/load.R: 0
#. R/load.R: message("Specified environment not found: using '.GlobalEnv' instead")

msgid "Specified environment not found: using '.GlobalEnv' instead"
msgstr ""


#: R/warnings.R: 0
#. R/warnings.R: gettextf("Summary of (a total of %d) warning messages:\n", sum(cn))

msgid "Summary of (a total of %d) warning messages:"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettextf("Sys.setenv(LANGUAGE=\"%s\") may have failed", lang)

msgid "Sys.setenv(LANGUAGE=\"%s\") may have failed"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("This is R %s, package %s needs %s %s", current, sQuote(pkgname),     dep$op, target)

msgid "This is R %s, package %s needs %s %s"
msgstr ""


#: R/srcfile.R: 0
#. R/srcfile.R: gettextf("Timestamp of %s has changed", sQuote(srcfile$filename))

msgid "Timestamp of %s has changed"
msgstr ""


#: R/time.R: 0
#. R/time.R: message("Timing stopped at: ", ppt(proc.time() - time))

msgid "Timing stopped at:"
msgstr ""


#: R/split.R: 0
#. R/split.R: warning("Unexpected LHS in 'formula' has been combined with RHS.")

msgid "Unexpected LHS in 'formula' has been combined with RHS."
msgstr ""


#: R/split.R: 0
#. R/split.R: warning("Unexpected LHS in 'formula' has been ignored.")

msgid "Unexpected LHS in 'formula' has been ignored."
msgstr ""


#: R/Defunct.R: 0
#: R/Deprecated.R: 0
#. R/Defunct.R: gettextf("Use '%s' instead.\n", new)
#. R/Deprecated.R: gettextf("Use '%s' instead.\n", new)

msgid "Use '%s' instead."
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: paste("While loading namespace \"%s\": \"%s\" differ in ncol(.), env=%d, newNS=%d.",     "Maybe package installed with version of R newer than %s ?",     sep = "\n")

msgid "While loading namespace \"%s\": \"%s\" differ in ncol(.), env=%d, newNS=%d."
msgstr ""


#: R/load.R: 0
#. R/load.R: message("[Previously saved workspace restored]", "\n")

msgid "[Previously saved workspace restored]"
msgstr ""


#: R/LAPACK.R: 0
#: R/svd.R: 0
#. R/LAPACK.R: stop("a dimension is zero")
#. R/svd.R: stop("a dimension is zero")

msgid "a dimension is zero"
msgstr ""


#: R/message.R: 0
#. R/message.R: warning("additional arguments ignored in message()")

msgid "additional arguments ignored in message()"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: warning("additional arguments ignored in stop()")

msgid "additional arguments ignored in stop()"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettext("additional arguments ignored in warning()")

msgid "additional arguments ignored in warning()"
msgstr ""


#: R/getenv.R: 0
#. R/getenv.R: stop("all arguments must be named")

msgid "all arguments must be named"
msgstr ""


#: R/table.R: 0
#. R/table.R: stop("all arguments must have the same length")

msgid "all arguments must have the same length"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("all variables should have the same length")

msgid "all variables should have the same length"
msgstr ""


#: R/pmax.R: 0
#. R/pmax.R: warning("an argument will be fractionally recycled")
#. R/pmax.R: warning("an argument will be fractionally recycled")
#. R/pmax.R: warning("an argument will be fractionally recycled")
#. R/pmax.R: warning("an argument will be fractionally recycled")

msgid "an argument will be fractionally recycled"
msgstr ""


#: R/autoload.R: 0
#. R/autoload.R: stop("an object with that name already exists")

msgid "an object with that name already exists"
msgstr ""


#: R/notyet.R: 0
#. R/notyet.R: gettextf("argument '%s' is not used (yet)", arg)

msgid "argument '%s' is not used (yet)"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: gettextf("argument '%s' will be ignored", "perl = TRUE")

msgid "argument '%s' will be ignored"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("argument 'length.out' must be of length 1")

msgid "argument 'length.out' must be of length 1"
msgstr ""


#: R/conflicts.R: 0
#. R/conflicts.R: stop("argument 'where' of length 0")

msgid "argument 'where' of length 0"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")
#. R/qr.R: stop("argument is not a QR decomposition")

msgid "argument is not a QR decomposition"
msgstr ""


#: R/mean.R: 0
#. R/mean.R: warning("argument is not numeric or logical: returning NA")

msgid "argument is not numeric or logical: returning NA"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("argument lengths differ")

msgid "argument lengths differ"
msgstr ""


#: R/LAPACK.R: 0
#. R/LAPACK.R: stop("argument to 'La.svd' must be numeric or complex")

msgid "argument to 'La.svd' must be numeric or complex"
msgstr ""


#: R/unix/system.unix.R: 0
#. R/unix/system.unix.R: message("arguments 'minimized' and 'invisible' are for Windows only")

msgid "arguments 'minimized' and 'invisible' are for Windows only"
msgstr ""


#: R/unix/system.unix.R: 0
#. R/unix/system.unix.R: message("arguments 'show.output.on.console', 'minimized' and 'invisible' are for Windows only")

msgid "arguments 'show.output.on.console', 'minimized' and 'invisible' are for Windows only"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("arguments imply differing number of rows: %s", paste(unique(nrows),     collapse = ", "))

msgid "arguments imply differing number of rows: %s"
msgstr ""


#: R/tapply.R: 0
#. R/tapply.R: stop("arguments must have same length")

msgid "arguments must have same length"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: warning("as.character(td, ..) no longer obeys a 'format' argument; use format(td, ..) ?")

msgid "as.character(td, ..) no longer obeys a 'format' argument; use format(td, ..) ?"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("attempt to copy a directory to itself")

msgid "attempt to copy a directory to itself"
msgstr ""


#: R/table.R: 0
#: R/tabulate.R: 0
#. R/table.R: stop("attempt to make a table with >= 2^31 elements")
#. R/tabulate.R: stop("attempt to make a table with >= 2^31 elements")

msgid "attempt to make a table with >= 2^31 elements"
msgstr ""


#: R/matrix.R: 0
#. R/matrix.R: stop("attempt to set 'colnames' on an object with less than two dimensions")
#. R/matrix.R: stop("attempt to set 'colnames' on an object with less than two dimensions")

msgid "attempt to set 'colnames' on an object with less than two dimensions"
msgstr ""


#: R/matrix.R: 0
#. R/matrix.R: stop("attempt to set 'rownames' on an object with no dimensions")
#. R/matrix.R: stop("attempt to set 'rownames' on an object with no dimensions")

msgid "attempt to set 'rownames' on an object with no dimensions"
msgstr ""


#: R/autoload.R: 0
#. R/autoload.R: gettextf("autoloader did not find '%s' in '%s'", name, package)

msgid "autoloader did not find '%s' in '%s'"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("bad 'S3method' directive: %s", deparse(e))

msgid "bad 'S3method' directive: %s"
msgstr ""


#: R/load.R: 0
#: R/serialize.R: 0
#: R/serialize.R: 0
#: R/serialize.R: 0
#. R/load.R: stop("bad 'file' argument")
#. R/serialize.R: stop("bad 'file' argument")
#. R/serialize.R: stop("bad 'file' argument")
#. R/serialize.R: stop("bad 'file' argument")

msgid "bad 'file' argument"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("bad file argument")

msgid "bad file argument"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("bad method")

msgid "bad method"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("binary '+' is not defined for \"POSIXt\" objects")

msgid "binary '+' is not defined for \"POSIXt\" objects"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("binary + is not defined for \"Date\" objects")

msgid "binary + is not defined for \"Date\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("both arguments of * cannot be \"difftime\" objects")

msgid "both arguments of * cannot be \"difftime\" objects"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("can only save to a binary connection")

msgid "can only save to a binary connection"
msgstr ""


#: R/backquote.R: 0
#. R/backquote.R: stop("can only splice inside a call", call. = FALSE)

msgid "can only splice inside a call"
msgstr ""


#: R/backquote.R: 0
#. R/backquote.R: stop("can only splice vectors")

msgid "can only splice vectors"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("can only subtract from \"Date\" objects")

msgid "can only subtract from \"Date\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("can only subtract from \"POSIXt\" objects")

msgid "can only subtract from \"POSIXt\" objects"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("can only subtract numbers from \"Date\" objects")

msgid "can only subtract numbers from \"Date\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("can only subtract numbers from \"POSIXt\" objects")

msgid "can only subtract numbers from \"POSIXt\" objects"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("can only truncate an open connection")

msgid "can only truncate an open connection"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("can only write character objects")
#. R/connections.R: stop("can only write character objects")

msgid "can only write character objects"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("can only write vector objects")

msgid "can only write vector objects"
msgstr ""


#: R/source.R: 0
#. R/source.R: stop("cannot 'chdir' as current directory is unknown")
#. R/source.R: stop("cannot 'chdir' as current directory is unknown")

msgid "cannot 'chdir' as current directory is unknown"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("cannot add to exports of a sealed namespace")

msgid "cannot add to exports of a sealed namespace"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("cannot coerce class %s to a data.frame", sQuote(deparse(class(x))[1L]))

msgid "cannot coerce class %s to a data.frame"
msgstr ""


#: R/table.R: 0
#. R/table.R: stop("cannot coerce to a table")

msgid "cannot coerce to a table"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("cannot import into a sealed namespace")

msgid "cannot import into a sealed namespace"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("cannot mtfrm")

msgid "cannot mtfrm"
msgstr ""


#: R/files.R: 0
#. R/files.R: warning("cannot overwrite a non-directory with a directory")

msgid "cannot overwrite a non-directory with a directory"
msgstr ""


#: R/sink.R: 0
#. R/sink.R: stop("cannot split the message connection")

msgid "cannot split the message connection"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("cannot xtfrm 'x'")

msgid "cannot xtfrm 'x'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("cannot xtfrm data frames")

msgid "cannot xtfrm data frames"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("character string is not in a standard unambiguous format")
#. R/datetime.R: stop("character string is not in a standard unambiguous format")

msgid "character string is not in a standard unambiguous format"
msgstr ""


#: R/format.R: 0
#. R/format.R: warning("class of 'x' was discarded")

msgid "class of 'x' was discarded"
msgstr ""


#: R/format.R: 0
#. R/format.R: warning("coercing argument to \"character\" for format=\"s\"")

msgid "coercing argument to \"character\" for format=\"s\""
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("column name \"\" cannot match any column")
#. R/dataframe.R: stop("column name \"\" cannot match any column")

msgid "column name \"\" cannot match any column"
msgstr ""


#: R/chol.R: 0
#. R/chol.R: stop("complex matrices not permitted at present")

msgid "complex matrices not permitted at present"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("component subscript must be a character string")
#. R/datetime.R: stop("component subscript must be a character string")

msgid "component subscript must be a character string"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: stop("condition handlers must be functions")

msgid "condition handlers must be functions"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: stop("condition handlers must be specified with a condition class")
#. R/conditions.R: stop("condition handlers must be specified with a condition class")
#. R/conditions.R: stop("condition handlers must be specified with a condition class")

msgid "condition handlers must be specified with a condition class"
msgstr ""


#: R/format.R: 0
#. R/format.R: warning("corrupt data frame: columns will be truncated or padded with NAs")

msgid "corrupt data frame: columns will be truncated or padded with NAs"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("cost components must be non-negative")

msgid "cost components must be non-negative"
msgstr ""


#: R/apply.R: 0
#. R/apply.R: stop("dim(X) must have a positive length")

msgid "dim(X) must have a positive length"
msgstr ""


#: R/array.R: 0
#. R/array.R: stop("dim(x) must have a positive length")

msgid "dim(x) must have a positive length"
msgstr ""


#: R/files.R: 0
#. R/files.R: warning("directories are omitted unless 'recursive = TRUE'")

msgid "directories are omitted unless 'recursive = TRUE'"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/datetime.R: 0
#. R/dates.R: gettextf("do not know how to convert '%s' to class %s", deparse1(substitute(x)),     dQuote("Date"))
#. R/datetime.R: gettextf("do not know how to convert '%s' to class %s", deparse1(substitute(x)),     dQuote("POSIXlt"))
#. R/datetime.R: gettextf("do not know how to convert '%s' to class %s", deparse1(substitute(x)),     dQuote("POSIXct"))

msgid "do not know how to convert '%s' to class %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("duplicate 'row.names' are not allowed")

msgid "duplicate 'row.names' are not allowed"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("duplicate import names %s", paste(sQuote(impnames[duplicated(impnames)]),     collapse = ", "))

msgid "duplicate import names %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("duplicate row.names: %s", paste(unique(row.names[duplicated(row.names)]),     collapse = ", "))
#. R/dataframe.R: gettextf("duplicate row.names: %s", paste(unique(row.names[duplicated(row.names)]),     collapse = ", "))

msgid "duplicate row.names: %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("duplicate subscripts for columns")

msgid "duplicate subscripts for columns"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("duplicate symbol names %s in useDynLib(\"%s\")", paste(sQuote(names(symNames)[dup]),     collapse = ", "), dyl)

msgid "duplicate symbol names %s in useDynLib(\"%s\")"
msgstr ""


#: R/scan.R: 0
#. R/scan.R: stop("either specify 'nmax' or 'n', but not both.")

msgid "either specify 'nmax' or 'n', but not both."
msgstr ""


#: R/time.R: 0
#. R/time.R: gettext("elapsed")

msgid "elapsed"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("empty (zero-byte) input file")

msgid "empty (zero-byte) input file"
msgstr ""


#: R/source.R: 0
#. R/source.R: stop("empty file/url name")

msgid "empty file/url name"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("empty name in directive '%s' in 'NAMESPACE' file",     as.character(e[[1L]]))

msgid "empty name in directive '%s' in 'NAMESPACE' file"
msgstr ""


#: R/source.R: 0
#. R/source.R: gettextf("encoding = \"%s\" chosen", encoding)

msgid "encoding = \"%s\" chosen"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("exact singularity in 'qr.coef'")

msgid "exact singularity in 'qr.coef'"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("exactly two of 'to', 'by' and 'length.out' / 'along.with' must be specified")
#. R/datetime.R: stop("exactly two of 'to', 'by' and 'length.out' / 'along.with' must be specified")

msgid "exactly two of 'to', 'by' and 'length.out' / 'along.with' must be specified"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("failed to assign NativeSymbolInfo for %s since %s is already defined in the %s namespace",     origVarName, varName, sQuote(package))

msgid "failed to assign NativeSymbolInfo for %s since %s is already defined in the %s namespace"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("failed to assign NativeSymbolInfo for %s to %s since %s is already defined in the %s namespace",     origVarName, varName, varName, sQuote(package))

msgid "failed to assign NativeSymbolInfo for %s to %s since %s is already defined in the %s namespace"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("failed to assign RegisteredNativeSymbol for %s to %s since %s is already defined in the %s namespace",     sym$name, varName, varName, sQuote(package))

msgid "failed to assign RegisteredNativeSymbol for %s to %s since %s is already defined in the %s namespace"
msgstr ""


#: R/windows/junctions.R: 0
#. R/windows/junctions.R: gettextf("failed to create directory for link '%s", link)

msgid "failed to create directory for link '%s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("failed to find metadata object for %s", sQuote(mi))

msgid "failed to find metadata object for %s"
msgstr ""


#: R/debug.R: 0
#. R/debug.R: stop("failed to load methods package for handling signature")

msgid "failed to load methods package for handling signature"
msgstr ""


#: R/debug.R: 0
#. R/debug.R: stop("failed to load methods package for undebugging by signature")

msgid "failed to load methods package for undebugging by signature"
msgstr ""


#: R/debug.R: 0
#. R/debug.R: stop("failed to load the methods package for debugging by signature")
#. R/debug.R: stop("failed to load the methods package for debugging by signature")

msgid "failed to load the methods package for debugging by signature"
msgstr ""


#: R/windows/junctions.R: 0
#. R/windows/junctions.R: stop("fewer 'from' files than 'to' files")

msgid "fewer 'from' files than 'to' files"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: gettextf("file '%s' not found", what)

msgid "file '%s' not found"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("file can not be copied both 'from' and 'to'")

msgid "file can not be copied both 'from' and 'to'"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("first argument must be a QR decomposition")

msgid "first argument must be a QR decomposition"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: warning("first element used of 'length.out' argument")

msgid "first element used of 'length.out' argument"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("found methods to import for function %s but not the generic itself",     sQuote(genName))

msgid "found methods to import for function %s but not the generic itself"
msgstr ""


#: R/match.fun.R: 0
#. R/match.fun.R: gettextf("found non-function '%s'", FUN)

msgid "found non-function '%s'"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: stop("function is not in a namespace, so cannot locate associated DLL")

msgid "function is not in a namespace, so cannot locate associated DLL"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: stop("handler must be a function")

msgid "handler must be a function"
msgstr ""


#: R/load.R: 0
#. R/load.R: gettextf("image could not be renamed and is left in %s", outfile)

msgid "image could not be renamed and is left in %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("in %s methods for export not found: %s", sQuote(package),     paste(expMethods[missingMethods], collapse = ", "))

msgid "in %s methods for export not found: %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("in package %s classes %s were specified for export but not defined",     sQuote(package), paste(expClasses[missingClasses], collapse = ", "))

msgid "in package %s classes %s were specified for export but not defined"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("in package %s methods %s were specified for export but not defined",     sQuote(package), paste(expMethods, collapse = ", "))

msgid "in package %s methods %s were specified for export but not defined"
msgstr ""


#: R/rowsum.R: 0
#. R/rowsum.R: stop("incorrect length for 'group'")
#. R/rowsum.R: stop("incorrect length for 'group'")

msgid "incorrect length for 'group'"
msgstr ""


#: R/array.R: 0
#. R/array.R: stop("incorrect value for 'MARGIN'")

msgid "incorrect value for 'MARGIN'"
msgstr ""


#: R/strwrap.R: 0
#. R/strwrap.R: stop("incorrect value for 'x'")
#. R/strwrap.R: stop("incorrect value for 'x'")

msgid "incorrect value for 'x'"
msgstr ""


#: R/LAPACK.R: 0
#: R/eigen.R: 0
#: R/svd.R: 0
#. R/LAPACK.R: stop("infinite or missing values in 'x'")
#. R/eigen.R: stop("infinite or missing values in 'x'")
#. R/svd.R: stop("infinite or missing values in 'x'")

msgid "infinite or missing values in 'x'"
msgstr ""


#: R/load.R: 0
#. R/load.R: stop("input has been corrupted, with LF replaced by CR")

msgid "input has been corrupted, with LF replaced by CR"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: gettextf("invalid '%s': type \"%s\"", "x", typeof(x))

msgid "invalid '%s': type \"%s\""
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("invalid '(to - from)/by'")

msgid "invalid '(to - from)/by'"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("invalid 'by' string")
#. R/datetime.R: stop("invalid 'by' string")

msgid "invalid 'by' string"
msgstr ""


#: R/locales.R: 0
#. R/locales.R: stop("invalid 'category' argument")
#. R/locales.R: stop("invalid 'category' argument")

msgid "invalid 'category' argument"
msgstr ""


#: R/serialize.R: 0
#. R/serialize.R: stop("invalid 'compress' argument: ", compress)

msgid "invalid 'compress' argument:"
msgstr ""


#: R/zapsmall.R: 0
#. R/zapsmall.R: stop("invalid 'digits'")

msgid "invalid 'digits'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("invalid 'dimnames' given for data frame")
#. R/dataframe.R: stop("invalid 'dimnames' given for data frame")

msgid "invalid 'dimnames' given for data frame"
msgstr ""


#: R/colSums.R: 0
#. R/colSums.R: stop("invalid 'dims'")
#. R/colSums.R: stop("invalid 'dims'")
#. R/colSums.R: stop("invalid 'dims'")
#. R/colSums.R: stop("invalid 'dims'")

msgid "invalid 'dims'"
msgstr ""


#: R/connections.R: 0
#. R/connections.R: stop("invalid 'endian' argument")
#. R/connections.R: stop("invalid 'endian' argument")

msgid "invalid 'endian' argument"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: gettextf("invalid 'labels'; length %d should be 1 or %d", nlab,     length(levels))

msgid "invalid 'labels'; length %d should be 1 or %d"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("invalid 'make.names'")
#. R/dataframe.R: stop("invalid 'make.names'")
#. R/dataframe.R: stop("invalid 'make.names'")

msgid "invalid 'make.names'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("invalid 'max' / getOption(\"max.print\"): ", max)

msgid "invalid 'max' / getOption(\"max.print\"):"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: stop("invalid 'name' argument")

msgid "invalid 'name' argument"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("invalid 'path' argument")

msgid "invalid 'path' argument"
msgstr ""


#: R/rle.R: 0
#. R/rle.R: stop("invalid 'rle' structure")

msgid "invalid 'rle' structure"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("invalid 'row.names' length")
#. R/dataframe.R: stop("invalid 'row.names' length")

msgid "invalid 'row.names' length"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("invalid 'time' argument")

msgid "invalid 'time' argument"
msgstr ""


#: R/version.R: 0
#. R/version.R: stop("invalid 'value'")
#. R/version.R: stop("invalid 'value'")
#. R/version.R: stop("invalid 'value'")
#. R/version.R: stop("invalid 'value'")

msgid "invalid 'value'"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: stop("invalid 'which' argument")

msgid "invalid 'which' argument"
msgstr ""


#: R/rowsum.R: 0
#. R/rowsum.R: stop("invalid 'x'")

msgid "invalid 'x'"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid NCOL(R)")

msgid "invalid NCOL(R)"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid NCOL(y)")
#. R/qr.R: stop("invalid NCOL(y)")
#. R/qr.R: stop("invalid NCOL(y)")
#. R/qr.R: stop("invalid NCOL(y)")

msgid "invalid NCOL(y)"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: warning("invalid factor level, NA generated")
#. R/factor.R: warning("invalid factor level, NA generated")

msgid "invalid factor level, NA generated"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("invalid import target")

msgid "invalid import target"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("invalid list argument: all variables should have the same length")

msgid "invalid list argument: all variables should have the same length"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("invalid mode for 'by'")
#. R/datetime.R: stop("invalid mode for 'by'")

msgid "invalid mode for 'by'"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid ncol(qr$qr)")

msgid "invalid ncol(qr$qr)"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid ncol(qr$rank)")

msgid "invalid ncol(qr$rank)"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid ncol(x)")

msgid "invalid ncol(x)"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid ncol(y)")

msgid "invalid ncol(y)"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettextf("invalid non-character version specification 'x' (type: %s)",     typeof(x))

msgid "invalid non-character version specification 'x' (type: %s)"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("invalid nrow(qr$qr)")
#. R/qr.R: stop("invalid nrow(qr$qr)")
#. R/qr.R: stop("invalid nrow(qr$qr)")
#. R/qr.R: stop("invalid nrow(qr$qr)")
#. R/qr.R: stop("invalid nrow(qr$qr)")

msgid "invalid nrow(qr$qr)"
msgstr ""


#: R/eigen.R: 0
#: R/qr.R: 0
#. R/eigen.R: stop("invalid nrow(x)")
#. R/qr.R: stop("invalid nrow(x)")

msgid "invalid nrow(x)"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: stop("invalid nrow(z)")

msgid "invalid nrow(z)"
msgstr ""


#: R/cut.R: 0
#. R/cut.R: stop("invalid number of intervals")

msgid "invalid number of intervals"
msgstr ""


#: R/library.R: 0
#. R/library.R: stop("invalid package name")

msgid "invalid package name"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#: R/datetime.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("invalid specification of 'breaks'")
#. R/dates.R: stop("invalid specification of 'breaks'")
#. R/dates.R: stop("invalid specification of 'breaks'")
#. R/datetime.R: stop("invalid specification of 'breaks'")
#. R/datetime.R: stop("invalid specification of 'breaks'")
#. R/datetime.R: stop("invalid specification of 'breaks'")

msgid "invalid specification of 'breaks'"
msgstr ""


#: R/dates.R: 0
#: R/datetime.R: 0
#. R/dates.R: stop("invalid string for 'by'")
#. R/datetime.R: stop("invalid string for 'by'")

msgid "invalid string for 'by'"
msgstr ""


#: R/mode.R: 0
#. R/mode.R: stop("invalid to change the storage mode of a factor")

msgid "invalid to change the storage mode of a factor"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("invalid units specified")
#. R/datetime.R: stop("invalid units specified")

msgid "invalid units specified"
msgstr ""


#: R/tabulate.R: 0
#. R/tabulate.R: gettextf("invalid value of %s", "'nbins'")

msgid "invalid value of %s"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettextf("invalid version specification %s", paste(sQuote(unique(x[!i])),     collapse = ", "))

msgid "invalid version specification %s"
msgstr ""


#: R/scale.R: 0
#. R/scale.R: stop("length of 'center' must equal the number of columns of 'x'")

msgid "length of 'center' must equal the number of columns of 'x'"
msgstr ""


#: R/scale.R: 0
#. R/scale.R: stop("length of 'scale' must equal the number of columns of 'x'")

msgid "length of 'scale' must equal the number of columns of 'x'"
msgstr ""


#: R/sweep.R: 0
#. R/sweep.R: warning("length(STATS) or dim(STATS) do not match dim(x)[MARGIN]")

msgid "length(STATS) or dim(STATS) do not match dim(x)[MARGIN]"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: stop("level sets of factors are different")
#. R/factor.R: stop("level sets of factors are different")

msgid "level sets of factors are different"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("license for package %s not accepted", sQuote(package))

msgid "license for package %s not accepted"
msgstr ""


#: R/windows/junctions.R: 0
#. R/windows/junctions.R: gettextf("link '%s' already exists", link)

msgid "link '%s' already exists"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("list of length %d not meaningful", length(e2))
#. R/dataframe.R: gettextf("list of length %d not meaningful", length(e1))

msgid "list of length %d not meaningful"
msgstr ""


#: R/merge.R: 0
#. R/merge.R: stop("long vectors are not supported")

msgid "long vectors are not supported"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: stop("looking for DLL for native routine call, but no DLLs in namespace of call")

msgid "looking for DLL for native routine call, but no DLLs in namespace of call"
msgstr ""


#: R/RNG.R: 0
#. R/RNG.R: stop("malformed version string")

msgid "malformed version string"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("match distance components must be non-negative")
#. R/grep.R: stop("match distance components must be non-negative")

msgid "match distance components must be non-negative"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("method = \"quick\" is only for numeric 'x'")

msgid "method = \"quick\" is only for numeric 'x'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("mismatch of row names in arguments of 'data.frame', item %d",     i)

msgid "mismatch of row names in arguments of 'data.frame', item %d"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("missing replacement values are not allowed")
#. R/grep.R: stop("missing replacement values are not allowed")

msgid "missing replacement values are not allowed"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("missing values are not allowed in subscripted assignments of data frames")
#. R/dataframe.R: stop("missing values are not allowed in subscripted assignments of data frames")

msgid "missing values are not allowed in subscripted assignments of data frames"
msgstr ""


#: R/rowsum.R: 0
#. R/rowsum.R: warning("missing values for 'group'")
#. R/rowsum.R: warning("missing values for 'group'")

msgid "missing values for 'group'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("missing values in 'row.names' are not allowed")

msgid "missing values in 'row.names' are not allowed"
msgstr ""


#: R/files.R: 0
#: R/windows/junctions.R: 0
#. R/files.R: stop("more 'from' files than 'to' files")
#. R/windows/junctions.R: stop("more 'from' files than 'to' files")

msgid "more 'from' files than 'to' files"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: gettextf("multiple DLLs match '%s'. Using '%s'", names(dll),     dlls[[dll]][["path"]])

msgid "multiple DLLs match '%s'. Using '%s'"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("multiple methods tables found for %s", sQuote(mi))

msgid "multiple methods tables found for %s"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("must have replacement values for matches")

msgid "must have replacement values for matches"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("must have replacements for matches")

msgid "must have replacements for matches"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("must have replacements for non-matches")

msgid "must have replacements for non-matches"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: gettextf("must pass a package name, %s or %s object", dQuote("DLLInfo"),     dQuote("DllInfoReference"))

msgid "must pass a package name, %s or %s object"
msgstr ""


#: R/dynload.R: 0
#. R/dynload.R: gettextf("must specify DLL via a %s object. See getLoadedDLLs()",     dQuote("DLLInfo"))

msgid "must specify DLL via a %s object. See getLoadedDLLs()"
msgstr ""


#: R/mapply.R: 0
#. R/mapply.R: stop("must specify names of formal arguments for 'vectorize'")

msgid "must specify names of formal arguments for 'vectorize'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("named arguments are discouraged")
#. R/dataframe.R: warning("named arguments are discouraged")

msgid "named arguments are discouraged"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("named arguments other than 'drop' are discouraged")

msgid "named arguments other than 'drop' are discouraged"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("named arguments other than 'exact' are discouraged")

msgid "named arguments other than 'exact' are discouraged"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("names do not match previous names")
#. R/dataframe.R: stop("names do not match previous names")

msgid "names do not match previous names"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("namespace %s %s is already loaded, but %s %s is required",     sQuote(package), current, zop, zversion)

msgid "namespace %s %s is already loaded, but %s %s is required"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("namespace %s %s is being loaded, but %s %s is required",     sQuote(package), version, zop, zversion)

msgid "namespace %s %s is being loaded, but %s %s is required"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("namespace %s is already sealed in 'loadNamespace'",     sQuote(getNamespaceName(ns)))

msgid "namespace %s is already sealed in 'loadNamespace'"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("namespace %s is imported by %s so cannot be unloaded",     sQuote(getNamespaceName(ns)), paste(sQuote(users), collapse = ", "))

msgid "namespace %s is imported by %s so cannot be unloaded"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("namespace %s is not available and has been replaced\nby .GlobalEnv when processing object %s",     sQuote(name)[1L], sQuote(where))

msgid "namespace %s is not available and has been replaced\nby .GlobalEnv when processing object %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("namespace is already attached")

msgid "namespace is already attached"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("need 0, 1, or 2 subscripts")

msgid "need 0, 1, or 2 subscripts"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("need explicit units for numeric conversion")

msgid "need explicit units for numeric conversion"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("need larger value of 'ncol' as pivoting occurred")

msgid "need larger value of 'ncol' as pivoting occurred"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: gettextf("need non-overlapping matches for %s", sQuote("invert = NA"))
#. R/grep.R: gettextf("need non-overlapping matches for %s", sQuote("invert = TRUE"))

msgid "need non-overlapping matches for %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("new columns would leave holes after existing columns")

msgid "new columns would leave holes after existing columns"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: gettextf("no 'restart' '%s' found", as.character(r))
#. R/conditions.R: gettextf("no 'restart' '%s' found", as.character(r))

msgid "no 'restart' '%s' found"
msgstr ""


#: R/library.R: 0
#. R/library.R: stop("no DLL was specified")

msgid "no DLL was specified"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: warning("no Olson database found")

msgid "no Olson database found"
msgstr ""


#: R/pmax.R: 0
#. R/pmax.R: stop("no arguments")
#. R/pmax.R: stop("no arguments")

msgid "no arguments"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("no file found")

msgid "no file found"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("no files to copy to")

msgid "no files to copy to"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("no files to link from")
#. R/files.R: stop("no files to link from")

msgid "no files to link from"
msgstr ""


#: R/files.R: 0
#: R/windows/junctions.R: 0
#. R/files.R: stop("no files to link to")
#. R/windows/junctions.R: stop("no files to link to")

msgid "no files to link to"
msgstr ""


#: R/files.R: 0
#. R/files.R: stop("no files/directory to link to")

msgid "no files/directory to link to"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("no function found corresponding to methods exports from %s for: %s",     sQuote(package), paste(sQuote(sort(unique(addGenerics[nowhere]))),         collapse = ", "))

msgid "no function found corresponding to methods exports from %s for: %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettext("no library trees found in 'lib.loc'")

msgid "no library trees found in 'lib.loc'"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("no match")

msgid "no match"
msgstr ""


#: R/stop.R: 0
#. R/stop.R: gettextf("no natural language support or missing translations")

msgid "no natural language support or missing translations"
msgstr ""


#: R/library.R: 0
#. R/library.R: message("no packages found")

msgid "no packages found"
msgstr ""


#: R/library.R: 0
#. R/library.R: stop("no shared object was specified")

msgid "no shared object was specified"
msgstr ""


#: R/taskCallback.R: 0
#. R/taskCallback.R: gettextf("no such element '%s'", which)

msgid "no such element '%s'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("non-existent rows not allowed")
#. R/dataframe.R: stop("non-existent rows not allowed")

msgid "non-existent rows not allowed"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("non-finite 'partial'")

msgid "non-finite 'partial'"
msgstr ""


#: R/eigen.R: 0
#. R/eigen.R: stop("non-square matrix in 'eigen'")

msgid "non-square matrix in 'eigen'"
msgstr ""


#: R/library.R: 0
#. R/library.R: stop("none of the packages are loaded")

msgid "none of the packages are loaded"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: gettextf("norm=\"%s\" not available here; using norm=\"1\"",     norm)

msgid "norm=\"%s\" not available here; using norm=\"1\""
msgstr ""


#: R/rowsum.R: 0
#. R/rowsum.R: stop("not a data frame")

msgid "not a data frame"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("not a namespace")

msgid "not a namespace"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: stop("not a valid restart specification")

msgid "not a valid restart specification"
msgstr ""


#: R/apply.R: 0
#: R/array.R: 0
#: R/array.R: 0
#: R/sweep.R: 0
#. R/apply.R: stop("not all elements of 'MARGIN' are names of dimensions")
#. R/array.R: stop("not all elements of 'MARGIN' are names of dimensions")
#. R/array.R: stop("not all elements of 'MARGIN' are names of dimensions")
#. R/sweep.R: stop("not all elements of 'MARGIN' are names of dimensions")

msgid "not all elements of 'MARGIN' are names of dimensions"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: stop("not an interactive session")

msgid "not an interactive session"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("not found in namespace %s: \n\n%s\n", sQuote(nsname),     nf)

msgid "not found in namespace %s: \n\n%s"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("not implemented for complex 'qr'")
#. R/qr.R: stop("not implemented for complex 'qr'")

msgid "not implemented for complex 'qr'"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("not loading a namespace")

msgid "not loading a namespace"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("not supported for LAPACK QR")
#. R/qr.R: stop("not supported for LAPACK QR")

msgid "not supported for LAPACK QR"
msgstr ""


#: R/load.R: 0
#. R/load.R: warning("nothing specified to be save()d")

msgid "nothing specified to be save()d"
msgstr ""


#: R/table.R: 0
#. R/table.R: stop("nothing to tabulate")

msgid "nothing to tabulate"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("now dyn.load(\"%s\") ...", file)

msgid "now dyn.load(\"%s\") ..."
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("now dyn.unload(\"%s\") ...", file)

msgid "now dyn.unload(\"%s\") ..."
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("number of columns of result, %d, is not a multiple of vector length %d of arg %d",     nvar, ni, i)

msgid "number of columns of result, %d, is not a multiple of vector length %d of arg %d"
msgstr ""


#: R/cut.R: 0
#. R/cut.R: stop("number of intervals and length of 'labels' differ")

msgid "number of intervals and length of 'labels' differ"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("number of items to replace is not a multiple of replacement length")

msgid "number of items to replace is not a multiple of replacement length"
msgstr ""


#: R/factor.R: 0
#. R/factor.R: stop("number of levels differs")

msgid "number of levels differs"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("numbers of columns of arguments do not match")
#. R/dataframe.R: stop("numbers of columns of arguments do not match")

msgid "numbers of columns of arguments do not match"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("object '%s' not found whilst loading namespace '%s'",     genname, package)

msgid "object '%s' not found whilst loading namespace '%s'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("only a single element should be replaced")

msgid "only a single element should be replaced"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("only defined on a data frame with all numeric-alike variables")

msgid "only defined on a data frame with all numeric-alike variables"
msgstr ""


#: R/diag.R: 0
#. R/diag.R: stop("only matrix diagonals can be replaced")

msgid "only matrix diagonals can be replaced"
msgstr ""


#: R/library.R: 0
#. R/library.R: stop("only one of 'include.only' and 'exclude' can be used",     call. = FALSE)

msgid "only one of 'include.only' and 'exclude' can be used"
msgstr ""


#: R/solve.R: 0
#. R/solve.R: stop("only square matrices can be inverted")
#. R/solve.R: stop("only square matrices can be inverted")

msgid "only square matrices can be inverted"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("only valid calls are x[[j]] <- value or x[[i,j]] <- value")

msgid "only valid calls are x[[j]] <- value or x[[i,j]] <- value"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("operation not allowed on base namespace")

msgid "operation not allowed on base namespace"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s already present in search()", sQuote(package))

msgid "package %s already present in search()"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s could not be loaded", sQuote(pkg))

msgid "package %s could not be loaded"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s does not have a namespace", sQuote(package))

msgid "package %s does not have a namespace"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s found more than once, using the first from\n  %s",     sQuote(pkg), paste(dQuote(paths), collapse = ",\n  "))

msgid "package %s found more than once, using the first from\n  %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s has a license that you need to accept after viewing",     sQuote(pkg))

msgid "package %s has a license that you need to accept after viewing"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s has a license that you need to accept in an interactive session",     sQuote(pkg))

msgid "package %s has a license that you need to accept in an interactive session"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s has a license that you need to accept:\naccording to the DESCRIPTION file it is\n%s",     sQuote(pkg), pkgInfo$DESCRIPTION["License"])

msgid "package %s has a license that you need to accept:\naccording to the DESCRIPTION file it is\n%s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s has no 'NAMESPACE' file", sQuote(package))

msgid "package %s has no 'NAMESPACE' file"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s has no 'package.rds' in Meta/", sQuote(package))

msgid "package %s has no 'package.rds' in Meta/"
msgstr ""


#: R/library.R: 0
#: R/namespace.R: 0
#. R/library.R: gettextf("package %s has not been installed properly\n", sQuote(pkgname))
#. R/namespace.R: gettextf("package %s has not been installed properly\n", sQuote(package))

msgid "package %s has not been installed properly"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s is not installed for 'arch = %s'", sQuote(pkgname),     r_arch)

msgid "package %s is not installed for 'arch = %s'"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: gettextf("package %s is required by %s so will not be detached",     sQuote(pkgname), sQuote(.rmpkg(pkg)))

msgid "package %s is required by %s so will not be detached"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: gettextf("package %s is required by %s, which may no longer work correctly",     sQuote(pkgname), sQuote(.rmpkg(pkg)))

msgid "package %s is required by %s, which may no longer work correctly"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s required by %s could not be found", sQuote(pkg),     sQuote(pkgname))

msgid "package %s required by %s could not be found"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s was built before R 3.0.0: please re-install it",     sQuote(pkgname))

msgid "package %s was built before R 3.0.0: please re-install it"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s was built for %s", sQuote(pkgname), platform)

msgid "package %s was built for %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package %s was built under R version %s", sQuote(pkgname),     as.character(built$R))

msgid "package %s was built under R version %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s was installed before R 4.0.0: please re-install it",     sQuote(package))

msgid "package %s was installed before R 4.0.0: please re-install it"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("package %s was installed by an R version with different internals; it needs to be reinstalled for use with this R version",     sQuote(package))

msgid "package %s was installed by an R version with different internals; it needs to be reinstalled for use with this R version"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("package or namespace load failed for %s%s:\n %s", sQuote(package),     P, conditionMessage(e))

msgid "package or namespace load failed for %s%s:\n %s"
msgstr ""


#: R/summary.R: 0
#. R/summary.R: gettextf("probably wrong encoding in 'names(.)' of column %s",     paste(which(is.na(lw)), collapse = ", "))

msgid "probably wrong encoding in 'names(.)' of column %s"
msgstr ""


#: R/conditions.R: 0
#. R/conditions.R: sprintf("pushing duplicate `%s` handler on top of the stack",     class)

msgid "pushing duplicate `%s` handler on top of the stack"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: warning("replaced '[<-' by '\\\\[<-' in regular expression pattern")

msgid "replaced '[<-' by '\\\\[<-' in regular expression pattern"
msgstr ""


#: R/attach.R: 0
#. R/attach.R: warning("replaced regular expression pattern '[' by  '\\\\['")

msgid "replaced regular expression pattern '[' by  '\\\\['"
msgstr ""


#: R/diag.R: 0
#. R/diag.R: stop("replacement diagonal has wrong length")

msgid "replacement diagonal has wrong length"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("replacing element in non-existent column: %s", j[is.na(jseq)])
#. R/dataframe.R: gettextf("replacing element in non-existent column: %s", jseq[jseq >     nvars])

msgid "replacing element in non-existent column: %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettext("replacing local value with import %s when loading %s")
#. R/namespace.R: gettext("replacing local value with import %s when loading %s")

msgid "replacing local value with import %s when loading %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettext("replacing previous import %s by %s when loading %s")

msgid "replacing previous import %s by %s when loading %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettext("replacing previous import by %s when loading %s")

msgid "replacing previous import by %s when loading %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("row names contain missing values")
#. R/dataframe.R: stop("row names contain missing values")

msgid "row names contain missing values"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("row names supplied are of the wrong length")

msgid "row names supplied are of the wrong length"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: warning("row names were found from a short variable and have been discarded")

msgid "row names were found from a short variable and have been discarded"
msgstr ""


#: R/windows/system.R: 0
#. R/windows/system.R: gettextf("running command '%s' had status %d", command, rval)
#. R/windows/system.R: gettextf("running command '%s' had status %d", command, rval)

msgid "running command '%s' had status %d"
msgstr ""


#: R/New-Internal.R: 0
#. R/New-Internal.R: stop("second argument must be a list")

msgid "second argument must be a list"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("second argument of / cannot be a \"difftime\" object")

msgid "second argument of / cannot be a \"difftime\" object"
msgstr ""


#: R/unix/system.unix.R: 0
#. R/unix/system.unix.R: warning("setting stdout = TRUE")

msgid "setting stdout = TRUE"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("shared object %s not found", sQuote(chname1))

msgid "shared object %s not found"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("shared object %s was not loaded", sQuote(chname1))

msgid "shared object %s was not loaded"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("shared object '%s' already loaded", sQuote(chname1))

msgid "shared object '%s' already loaded"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("shared object '%s' not found", sQuote(chname1))

msgid "shared object '%s' not found"
msgstr ""


#: R/solve.R: 0
#. R/solve.R: stop("singular matrix 'a' in 'solve'")

msgid "singular matrix 'a' in 'solve'"
msgstr ""


#: R/solve.R: 0
#. R/solve.R: stop("singular matrix 'a' in solve")

msgid "singular matrix 'a' in solve"
msgstr ""


#: R/solve.R: 0
#. R/solve.R: warning("solve.default called with a \"qr\" object: use 'qr.solve'")

msgid "solve.default called with a \"qr\" object: use 'qr.solve'"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: gettextf("some row.names duplicated: %s --> row.names NOT used",     paste(which(duplicated(new)), collapse = ","))

msgid "some row.names duplicated: %s --> row.names NOT used"
msgstr ""


#: R/source.R: 0
#. R/source.R: stop("specify either 'file' or 'exprs' but not both")

msgid "specify either 'file' or 'exprs' but not both"
msgstr ""


#: R/time.R: 0
#. R/time.R: gettext("system")

msgid "system"
msgstr ""


#: R/all.equal.R: 0
#. R/all.equal.R: gettextf("target is %s, current is %s", data.class(target), data.class(current))

msgid "target is %s, current is %s"
msgstr ""


#: R/chol.R: 0
#: R/solve.R: 0
#: R/svd.R: 0
#. R/chol.R: stop("the LINPACK argument has been defunct since R 3.1.0")
#. R/chol.R: stop("the LINPACK argument has been defunct since R 3.1.0")
#. R/solve.R: stop("the LINPACK argument has been defunct since R 3.1.0")
#. R/svd.R: stop("the LINPACK argument has been defunct since R 3.1.0")

msgid "the LINPACK argument has been defunct since R 3.1.0"
msgstr ""


#: R/match.R: 0
#. R/match.R: stop("there is more than one match in 'match.arg'")

msgid "there is more than one match in 'match.arg'"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("there is no package called %s", sQuote(package))
#. R/library.R: gettextf("there is no package called %s", sQuote(pkg))
#. R/library.R: gettextf("there is no package called %s", sQuote(package))

msgid "there is no package called %s"
msgstr ""


#: R/solve.R: 0
#. R/solve.R: stop("this is the \"qr\" method for the generic function solve()")

msgid "this is the \"qr\" method for the generic function solve()"
msgstr ""


#: R/qr.R: 0
#. R/qr.R: stop("too large a matrix for LINPACK")

msgid "too large a matrix for LINPACK"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("too many arguments")

msgid "too many arguments"
msgstr ""


#: R/tapply.R: 0
#. R/tapply.R: stop("total number of levels >= 2^31")

msgid "total number of levels >= 2^31"
msgstr ""


#: R/methodsSupport.R: 0
#. R/methodsSupport.R: stop("tracing functions requires the 'methods' package, but unable to load the 'methods' namespace")

msgid "tracing functions requires the 'methods' package, but unable to load the 'methods' namespace"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: stop("triangular matrix should be square")

msgid "triangular matrix should be square"
msgstr ""


#: R/mean.R: 0
#. R/mean.R: stop("trimmed means are not defined for complex data")

msgid "trimmed means are not defined for complex data"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: message("unable to deduce timezone name from ", sQuote(lt))

msgid "unable to deduce timezone name from"
msgstr ""


#: R/source.R: 0
#. R/source.R: stop("unable to find a plausible encoding")

msgid "unable to find a plausible encoding"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("unable to load R code in package %s", sQuote(package))

msgid "unable to load R code in package %s"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: stop("unable to re-encode some lines in NAMESPACE file")

msgid "unable to re-encode some lines in NAMESPACE file"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: gettextf("unary %s not defined for \"Date\" objects", .Generic)

msgid "unary %s not defined for \"Date\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: gettextf("unary '%s' not defined for \"POSIXt\" objects", .Generic)

msgid "unary '%s' not defined for \"POSIXt\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: gettextf("unary '%s' not defined for \"difftime\" objects", .Generic)

msgid "unary '%s' not defined for \"difftime\" objects"
msgstr ""


#: R/version.R: 0
#. R/version.R: gettextf("unary '%s' not defined for \"numeric_version\" objects",     .Generic)

msgid "unary '%s' not defined for \"numeric_version\" objects"
msgstr ""


#: R/datetime.R: 0
#. R/datetime.R: stop("unary '-' is not defined for \"POSIXt\" objects")

msgid "unary '-' is not defined for \"POSIXt\" objects"
msgstr ""


#: R/dates.R: 0
#. R/dates.R: stop("unary - is not defined for \"Date\" objects")

msgid "unary - is not defined for \"Date\" objects"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("undefined columns selected")
#. R/dataframe.R: stop("undefined columns selected")
#. R/dataframe.R: stop("undefined columns selected")
#. R/dataframe.R: stop("undefined columns selected")
#. R/dataframe.R: stop("undefined columns selected")

msgid "undefined columns selected"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("undefined exports: %s", undef)

msgid "undefined exports: %s"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("unknown conflict policy: %s", sQuote(conf.ctrl))

msgid "unknown conflict policy: %s"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: warning("unknown cost components ignored")

msgid "unknown cost components ignored"
msgstr ""


#: R/grep.R: 0
#. R/grep.R: warning("unknown match distance components ignored")

msgid "unknown match distance components ignored"
msgstr ""


#: R/namespace.R: 0
#. R/namespace.R: gettextf("unknown namespace directive: %s", deparse(e, nlines = 1L))

msgid "unknown namespace directive: %s"
msgstr ""


#: R/dataframe.R: 0
#. R/dataframe.R: stop("unsupported matrix index in replacement")

msgid "unsupported matrix index in replacement"
msgstr ""


#: R/sort.R: 0
#. R/sort.R: stop("unsupported options for partial sorting")

msgid "unsupported options for partial sorting"
msgstr ""


#: R/time.R: 0
#. R/time.R: gettext("user")

msgid "user"
msgstr ""


#: R/outer.R: 0
#. R/outer.R: stop("using ... with FUN = \"*\" is an error")

msgid "using ... with FUN = \"*\" is an error"
msgstr ""


#: R/kappa.R: 0
#. R/kappa.R: warning("using 1-norm approximation for approximate 2-norm")

msgid "using 1-norm approximation for approximate 2-norm"
msgstr ""


#: R/formals.R: 0
#. R/formals.R: warning("using the first element of 'value' of type \"expression\"")

msgid "using the first element of 'value' of type \"expression\""
msgstr ""


#: R/grep.R: 0
#. R/grep.R: stop("value does not provide any replacement values")

msgid "value does not provide any replacement values"
msgstr ""


#: R/get.R: 0
#. R/get.R: gettextf("value for %s not found", sQuote(x))

msgid "value for %s not found"
msgstr ""


#: R/library.R: 0
#. R/library.R: gettextf("version %s of %s masked by %s in %s", versions[which(sufficient)[1L]],     sQuote(pkg), current, lib.loc[iV[!sufficient][1L]])

msgid "version %s of %s masked by %s in %s"
msgstr ""


#: R/datetime.R: 0
#: R/library.R: 0
#: R/version.R: 0
#. R/datetime.R: stop("wrong class")
#. R/datetime.R: stop("wrong class")
#. R/library.R: stop("wrong class")
#. R/version.R: stop("wrong class")

msgid "wrong class"
msgstr ""


#: R/seq.R: 0
#. R/seq.R: stop("wrong sign in 'by' argument")

msgid "wrong sign in 'by' argument"
msgstr ""


#: R/warnings.R: 0
#. R/warnings.R: ngettext(sum(cn), "%d identical warning:\n", "%d identical warnings:\n",     domain = "R-base")

msgid        "%d identical warning:\n"
msgid_plural "%d identical warnings:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(nrowv, "%d row in value to replace %d rows", "%d rows in value to replace %d rows")

msgid        "%d row in value to replace %d rows"
msgid_plural "%d rows in value to replace %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/mapply.R: 0
#. R/mapply.R: ngettext(length(collisions), "%s function may not have argument named %s",     "%s function may not have arguments named %s", domain = "R-base")

msgid        "%s function may not have argument named %s"
msgid_plural "%s function may not have arguments named %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/stop.R: 0
#. R/stop.R: ngettext(length(r), "%s is not TRUE", "%s are not all TRUE")

msgid        "%s is not TRUE"
msgid_plural "%s are not all TRUE"
msgstr[0]    ""
msgstr[1]    ""


#: R/match.R: 0
#. R/match.R: ngettext(length(chs <- unique(choices[nzchar(choices)])), "'arg' should be %s",     "'arg' should be one of %s")

msgid        "'arg' should be %s"
msgid_plural "'arg' should be one of %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/merge.R: 0
#. R/merge.R: ngettext(sum(bad), "'by' must specify a uniquely valid column",     "'by' must specify uniquely valid columns")
#. R/merge.R: ngettext(sum(bad), "'by' must specify a uniquely valid column",     "'by' must specify uniquely valid columns")

msgid        "'by' must specify a uniquely valid column"
msgid_plural "'by' must specify uniquely valid columns"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(length(bad), "Function found when exporting methods from the namespace %s which is not S4 generic: %s",     "Functions found when exporting methods from the namespace %s which are not S4 generic: %s")

msgid        "Function found when exporting methods from the namespace %s which is not S4 generic: %s"
msgid_plural "Functions found when exporting methods from the namespace %s which are not S4 generic: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/warnings.R: 0
#. R/warnings.R: ngettext(nx, "In '%s':\n extra argument %s will be disregarded",     "In '%s':\n extra arguments %s will be disregarded", domain = "R-base")

msgid        "In '%s':\n extra argument %s will be disregarded"
msgid_plural "In '%s':\n extra arguments %s will be disregarded"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(sum(!found), "No methods found in package %s for request: %s when loading %s",     "No methods found in package %s for requests: %s when loading %s")

msgid        "No methods found in package %s for request: %s when loading %s"
msgid_plural "No methods found in package %s for requests: %s when loading %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(sum(notex), "S3 method %s was declared in NAMESPACE but not found",     "S3 methods %s were declared in NAMESPACE but not found")

msgid        "S3 method %s was declared in NAMESPACE but not found"
msgid_plural "S3 methods %s were declared in NAMESPACE but not found"
msgstr[0]    ""
msgstr[1]    ""


#: R/attach.R: 0
#. R/attach.R: ngettext(length(same), "The following object is masked _by_ %s:",     "The following objects are masked _by_ %s:")

msgid        "The following object is masked _by_ %s:"
msgid_plural "The following objects are masked _by_ %s:"
msgstr[0]    ""
msgstr[1]    ""


#: R/attach.R: 0
#. R/attach.R: ngettext(length(same), "The following object is masked from %s:",     "The following objects are masked from %s:")

msgid        "The following object is masked from %s:"
msgid_plural "The following objects are masked from %s:"
msgstr[0]    ""
msgstr[1]    ""


#: R/warnings.R: 0
#. R/warnings.R: ngettext(n, "Warning message:\n", "Warning messages:\n", domain = "R-base")

msgid        "Warning message:\n"
msgid_plural "Warning messages:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(length(miss), "class %s is not exported by 'namespace:%s'",     "classes %s are not exported by 'namespace:%s'")

msgid        "class %s is not exported by 'namespace:%s'"
msgid_plural "classes %s are not exported by 'namespace:%s'"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(n, "data frame with 0 columns and %d row", "data frame with 0 columns and %d rows")

msgid        "data frame with 0 columns and %d row"
msgid_plural "data frame with 0 columns and %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/New-Internal.R: 0
#. R/New-Internal.R: ngettext(as.integer(sum(is.na(opts))), "deparse option %s is not recognized",     "deparse options %s are not recognized", domain = "R-base")

msgid        "deparse option %s is not recognized"
msgid_plural "deparse options %s are not recognized"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(nr, "invalid 'row.names', length %d for a data frame with %d row",     "invalid 'row.names', length %d for a data frame with %d rows")

msgid        "invalid 'row.names', length %d for a data frame with %d row"
msgid_plural "invalid 'row.names', length %d for a data frame with %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/library.R: 0
#. R/library.R: ngettext(length(nopkgs), "library %s contains no packages", "libraries %s contain no packages",     domain = "R-base")

msgid        "library %s contains no packages"
msgid_plural "libraries %s contain no packages"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(sum(!mode.ok), "non-numeric-alike variable in data frame: ",     "non-numeric-alike variables in data frame: ", domain = "R-base")

msgid        "non-numeric-alike variable in data frame: "
msgid_plural "non-numeric-alike variables in data frame: "
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(length(miss), "object %s is not exported by 'namespace:%s'",     "objects %s are not exported by 'namespace:%s'")

msgid        "object %s is not exported by 'namespace:%s'"
msgid_plural "objects %s are not exported by 'namespace:%s'"
msgstr[0]    ""
msgstr[1]    ""


#: R/load.R: 0
#. R/load.R: ngettext(n, "object %s not found", "objects %s not found")

msgid        "object %s not found"
msgid_plural "objects %s not found"
msgstr[0]    ""
msgstr[1]    ""


#: R/library.R: 0
#. R/library.R: ngettext(as.integer(sum(m)), "package %s is not loaded", "packages %s are not loaded")

msgid        "package %s is not loaded"
msgid_plural "packages %s are not loaded"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(sum(ex), "previous export '%s' is being replaced", "previous exports '%s' are being replaced")

msgid        "previous export '%s' is being replaced"
msgid_plural "previous exports '%s' are being replaced"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(ncolv, "provided %d variable to replace %d variables",     "provided %d variables to replace %d variables")

msgid        "provided %d variable to replace %d variables"
msgid_plural "provided %d variables to replace %d variables"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(nrowv, "replacement data has %d row to replace %d rows",     "replacement data has %d rows to replace %d rows")

msgid        "replacement data has %d row to replace %d rows"
msgid_plural "replacement data has %d rows to replace %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(N, "replacement element %d has %d row to replace %d rows",     "replacement element %d has %d rows to replace %d rows")

msgid        "replacement element %d has %d row to replace %d rows"
msgid_plural "replacement element %d has %d rows to replace %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(N, "replacement element %d has %d row, need %d", "replacement element %d has %d rows, need %d")

msgid        "replacement element %d has %d row, need %d"
msgid_plural "replacement element %d has %d rows, need %d"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(N, "replacement element %d is a matrix/data frame of %d row, need %d",     "replacement element %d is a matrix/data frame of %d rows, need %d")

msgid        "replacement element %d is a matrix/data frame of %d row, need %d"
msgid_plural "replacement element %d is a matrix/data frame of %d rows, need %d"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(m, "replacement has %d item, need %d", "replacement has %d items, need %d")

msgid        "replacement has %d item, need %d"
msgid_plural "replacement has %d items, need %d"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")
#. R/dataframe.R: ngettext(N, "replacement has %d row, data has %d", "replacement has %d rows, data has %d")

msgid        "replacement has %d row, data has %d"
msgid_plural "replacement has %d rows, data has %d"
msgstr[0]    ""
msgstr[1]    ""


#: R/namespace.R: 0
#. R/namespace.R: ngettext(sum(!found), "requested method not found in environment/package %s: %s when loading %s",     "requested methods not found in environment/package %s: %s when loading %s")

msgid        "requested method not found in environment/package %s: %s when loading %s"
msgid_plural "requested methods not found in environment/package %s: %s when loading %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/dataframe.R: 0
#. R/dataframe.R: ngettext(length(row.names), "supplied %d row name for %d rows",     "supplied %d row names for %d rows")

msgid        "supplied %d row name for %d rows"
msgid_plural "supplied %d row names for %d rows"
msgstr[0]    ""
msgstr[1]    ""


#: R/library.R: 0
#. R/library.R: ngettext(length(package), "there is no package called", "there are no packages called")

msgid        "there is no package called"
msgid_plural "there are no packages called"
msgstr[0]    ""
msgstr[1]    ""
