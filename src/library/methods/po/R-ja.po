msgid ""
msgstr ""
"Project-Id-Version: R 2.5.0 \n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2024-08-31 23:44\n"
"PO-Revision-Date: 2015-03-27 14:52+0900 \n"
"Last-Translator: Masafumi  \n"
"Language-Team: RjpWiki Message Translation Team <mokada@md.tsukuba.ac.jp> \n"
"Language: ja \n"
"MIME-Version: 1.0 \n"
"Content-Type: text/plain; charset=UTF-8 \n"
"Content-Transfer-Encoding: 8bit \n"
"Plural-Forms: nplurals=1; plural=0; \n"
"X-Generator: Pootle 2.5.1.1 \n"
"X-POOTLE-MTIME: 1427435556.000000 \n"

#. R/RMethodUtils.R: warning("\"MethodsList\" is defunct; allMethods now are empty")
#: R/RMethodUtils.R:0
msgid "\"MethodsList\" is defunct; allMethods now are empty"
msgstr ""

#. R/RClassUtils.R: stop("\"class\" is a reserved slot name and cannot be redefined")
#: R/RClassUtils.R:0
msgid "\"class\" is a reserved slot name and cannot be redefined"
msgstr "\"class\" は予約済みのスロット名であり、再定義出来ません"

#. R/MethodsListClass.R: gettextf("%d: target \"%s\": chose \"%s\" (others: %s)", i, target[[i]],     selected[[i]], paste0("\"", these, "\"", collapse = ", "))
#: R/MethodsListClass.R:0
msgid "%d: target \"%s\": chose \"%s\" (others: %s)"
msgstr "%d: ターゲット \"%s\": 選択 \"%s\" (その他: %s)"

#. R/RMethodUtils.R: gettextf("%s arguments (%s) after %s in the generic must appear in the method, in the same place at the end of the argument list",     .renderSignature(generic@generic, signature), paste(sQuote(trailingArgs),         collapse = ", "), sQuote("..."))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "%s arguments (%s) after %s in the generic must appear in the method, in the same place at the end of the argument list"
msgstr "総称的関数 中の '...' 以降の引数 (%s) はメソッド中の、引数リストの最後の同じ場所に登場しなければなりません"

#. R/Methods.R: gettextf("%s dispatches internally;  methods can be defined, but the generic function is implicit, and cannot be changed.",     sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "%s dispatches internally;  methods can be defined, but the generic function is implicit, and cannot be changed."
msgstr "%s はプリミティブな関数です; メソッドを定義できますが、総称的関数は隠匿されており、変更できません"

#. R/SClasses.R: gettextf("%s has a sealed class definition and cannot be redefined",     dQuote(Class))
#: R/SClasses.R:0
msgid "%s has a sealed class definition and cannot be redefined"
msgstr "%s は封印されたクラス定義を持ち、再定義は出来ません"

#. R/Methods.R: gettextf("%s has no methods defined", sQuote(f))
#: R/Methods.R:0
msgid "%s has no methods defined"
msgstr "%s は定義されたメソッドを持ちません"

#. R/Methods.R: gettextf("%s is a primitive function; its generic form cannot be redefined",     sQuote(name))
#: R/Methods.R:0
msgid "%s is a primitive function; its generic form cannot be redefined"
msgstr "%s はプリミティブな関数のため、その総称形は再定義できません"

#. R/SClasses.R: gettextf("%s is not a defined class", dQuote(Class))
#: R/SClasses.R:0
msgid "%s is not a defined class"
msgstr "%s は定義されたクラスではありません"

#. R/refClass.R: gettextf("%s is not a defined class in this environment", dQuote(Class))
#: R/refClass.R:0
msgid "%s is not a defined class in this environment"
msgstr "この環境ではクラス %s は定義されていません"

#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(field), dQuote(thisClass@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(def@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(className))
#: R/refClass.R:0
msgid "%s is not a field in class %s"
msgstr "%s はクラス %s の欄ではありません"

#. R/refClass.R: gettextf("%s is not a field in this class", sQuote(name))
#: R/refClass.R:0
msgid "%s is not a field in this class"
msgstr "%s はこのクラス中の欄ではありません"

#. R/RMethodUtils.R: gettextf("%s is not a generic function (or not visible here)",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "%s is not a generic function (or not visible here)"
msgstr "%s は総称的関数ではありません(またはここでは可視ではありません)"

#. R/trace.R: gettextf("%s is not a method for reference class %s", sQuote(as.character(if (is.symbol(thisName)) thisName else what)),     dQuote(class(where)))
#: R/trace.R:0
msgid "%s is not a method for reference class %s"
msgstr "%s は参照クラス %s に対するメソッドではありません"

#. R/refClass.R: gettextf("%s is not a reference class", dQuote(Class))
#. R/refClass.R: gettextf("%s is not a reference class", dQuote(def@className))
#: R/refClass.R:0
msgid "%s is not a reference class"
msgstr "%s は参照クラスではありません"

#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#: R/SClasses.R:0
msgid "%s is not a slot in class %s"
msgstr "%s はクラス %s 中のスロットではありません"

#. R/refClass.R: gettextf("%s is not a valid field or method name for reference class %s",     sQuote(field), dQuote(thisClass@className))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for reference class %s"
msgstr "欄 %s は参照クラス %s に対する適正な欄もしくはメソッド名ではありません"

#. R/refClass.R: gettextf("%s is not a valid field or method name for this class",     sQuote(what))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for this class"
msgstr "%s はこのクラスに対する適正な欄もしくはメソッド名ではありません"

#. R/Methods.R: gettextf("%s is not an S4 generic function in %s; methods not removed",     sQuote(f), sQuote(getPackageName(where)))
#: R/Methods.R:0
msgid "%s is not an S4 generic function in %s; methods not removed"
msgstr "%s は %s 中の S4 総称的関数ではありません; メソッドは取り除かれませんでした"

#. R/Methods.R: gettextf("%s is not currently a generic:  define it first to create a non-default implicit form",     sQuote(name))
#: R/Methods.R:0
msgid "%s is not currently a generic:  define it first to create a non-default implicit form"
msgstr "%s は現在総称的ではありません: 既定では無い暗黙の形式を作るように定義してください"

#. R/RClassUtils.R: gettextf("%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)",     dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)"
msgstr "%s は別のクラスのデータパートとして適正ではありません (基本クラスか、スロットを持たない仮想クラスで無ければなりません)"

#. R/addedFunctions.R: gettextf("%s is not one of the element names", sQuote(name))
#: R/addedFunctions.R:0
msgid "%s is not one of the element names"
msgstr "%s は要素名中にありません"

#. R/refClass.R: gettextf("%s is not one of the reference super classes for this object",     dQuote(Class))
#: R/refClass.R:0
msgid "%s is not one of the reference super classes for this object"
msgstr "%s はこのオブジェクトに対する参照上位クラスの一つではありません"

#. R/trace.R: gettextf("%s() is not a generic function in the target environment -- methods will not be inserted",     f)
#: R/trace.R:0
msgid "%s() is not a generic function in the target environment -- methods will not be inserted"
msgstr "%s() はターゲット環境中の総称的関数ではありません -- メソッドは挿入されません"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is defunct.",     dQuote(this))
#: R/MethodsList.R:0
msgid "%s, along with other use of the \"MethodsList\" metadata objects, is defunct."
msgstr "%s を別の \"MethodsList\" メタデータオブジェクトとともに使うことは廃止されました"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is deprecated.",     dQuote(this))
#: R/MethodsList.R:0
msgid "%s, along with other use of the \"MethodsList\" metadata objects, is deprecated."
msgstr "%s を別の \"MethodsList\" のメタデータオブジェクトとともに使うことは廃止されました。"

#. R/Methods.R: gettextf("'%s' is not a known generic function {and 'package' not specified}",     f)
#: R/Methods.R:0
msgid "'%s' is not a known generic function {and 'package' not specified}"
msgstr "'%s' は既知の総称的関数ではありません {そして 'package' も指定されていません}"

#. R/RClassUtils.R: stop("'Class' must be a valid class definition or class")
#: R/RClassUtils.R:0
msgid "'Class' must be a valid class definition or class"
msgstr "'Class' は適正なクラス定義もしくはクラスでなければなりません"

#. R/oldClass.R: gettextf("'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s",     dQuote(class(object)))
#: R/oldClass.R:0
msgid "'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s"
msgstr "'S3Class' は \"oldClass\" を拡張した S4 オブジェクトにのみ付値され得ます; クラス %s では真ではありません"

#. R/oldClass.R: gettextf("'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s",     dQuote("oldClass"), dQuote(class(object)))
#: R/oldClass.R:0
msgid "'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s"
msgstr "'S3Class' は %s に対する拡張か、データパートを持つクラスとしてのみ定義されます: クラス %s に対しては真ではありません"

#. R/as.R: gettextf("'as' method should have one argument, or match the arguments of coerce(): got  (%s)",     paste(formalArgs(def), collapse = ", "))
#: R/as.R:0
msgid "'as' method should have one argument, or match the arguments of coerce(): got  (%s)"
msgstr "'as' メソッドはひとつの引数を持つか、coerce() の引数に対応している必要があります: (%s)"

#. R/is.R: stop("'class1' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class1' must be the name of a class or a class definition"
msgstr "'class1' はクラス名かクラス定義でなければなりません"

#. R/is.R: stop("'class2' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class2' must be the name of a class or a class definition"
msgstr "'class2' はクラス名かクラス定義でなければなりません"

#. R/RClassUtils.R: stop("'externalptr' objects cannot be initialized from new()")
#: R/RClassUtils.R:0
msgid "'externalptr' objects cannot be initialized from new()"
msgstr "'externalptr' オブジェクトは new() からは初期化出来ません"

#. R/Methods.R: stop("'file' must be a character string or a connection")
#. R/Methods.R: stop("'file' must be a character string or a connection")
#: R/Methods.R:0
msgid "'file' must be a character string or a connection"
msgstr "'file' は文字列かコネクションでなければなりません"

#. R/MethodsListClass.R: gettextf("'initialize' method returned an object of class %s instead of the required class %s",     paste(dQuote(class(value)), collapse = ", "), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
msgid "'initialize' method returned an object of class %s instead of the required class %s"
msgstr "'initialize' メソッドがクラス %s のオブジェクトを返しました (要求されたクラス %s ではなく)"

#. R/RMethodUtils.R: message("--- getting generic ", sQuote(f), " (and methods)")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "(and methods)"
msgstr "メソッド %s()　用"

#. R/RClassUtils.R: gettextf("(class %s)", .dQ(unlist(properties, recursive = FALSE)[undefClasses]))
#: R/RClassUtils.R:0
msgid "(class %s)"
msgstr "(クラス \"%s\")"

#. R/RMethodUtils.R: message("--- caching class ", sQuote(cl))
#: R/RMethodUtils.R:0
msgid "--- caching class"
msgstr ""

#. R/RMethodUtils.R: message("--- done caching class ", sQuote(cl))
#: R/RMethodUtils.R:0
msgid "--- done caching class"
msgstr ""

#. R/RMethodUtils.R: message("--- done getting generic ", sQuote(f))
#: R/RMethodUtils.R:0
msgid "--- done getting generic"
msgstr ""

#. R/RMethodUtils.R: message("--- getting generic ", sQuote(f), " (and methods)")
#: R/RMethodUtils.R:0
msgid "--- getting generic"
msgstr ""

#. R/SClasses.R: gettextf("All %s names must be distinct in:\n(%s)", what, paste(sQuote(propNames),     collapse = ", "))
#: R/SClasses.R:0
msgid ""
"All %s names must be distinct in:\n"
"(%s)"
msgstr ""
"全ての名前 %s は異なっている必要があります:\n"
"(%s) 中で"

#. R/SClasses.R: gettextf("All %s names must be nonempty in:\n(%s)", what, paste(sQuote(propNames),     collapse = ", "))
#: R/SClasses.R:0
msgid ""
"All %s names must be nonempty in:\n"
"(%s)"
msgstr ""
"名前 %s は全て空であってはいけません:\n"
"(%s) 中で"

#. R/RClassUtils.R: message("Also defined by ", paste(sQuote(pkgs[-1]), collapse = " "))
#: R/RClassUtils.R:0
msgid "Also defined by"
msgstr ""

#. R/show.R: gettextf("An object of class %s", dQuote(class(object)))
#: R/show.R:0
msgid "An object of class %s"
msgstr "クラス %s のオブジェクト"

#. R/SClasses.R: stop("Argument \"representation\" cannot be used if argument \"slots\" is supplied")
#: R/SClasses.R:0
msgid "Argument \"representation\" cannot be used if argument \"slots\" is supplied"
msgstr "引数 \"representation\" はもし引数 \"slots\" が与えられた場合は使用できません"

#. R/refClass.R: gettextf("Class %s is not a subclass of %s; functional semantics not defined for this class",     dQuote(class(object)), dQuote("envRefClass"))
#: R/refClass.R:0
msgid "Class %s is not a subclass of %s; functional semantics not defined for this class"
msgstr "クラス %s は %s のサブクラスではありません; このクラスに対しては機能的なセマンティックスは定義されていません"

#. R/Methods.R: gettextf("Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)",     sQuote(f), sQuote(getPackageName(where)), sQuote(getPackageName(gwhere)))
#: R/Methods.R:0
msgid "Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)"
msgstr "総称的関数 %s を環境 %s にコピーしています、なぜなら前のバージョンは封印された名前空間 (%s) にあったからです"

#. R/refClass.R: stop("Could not find local object in supplied environment")
#: R/refClass.R:0
msgid "Could not find local object in supplied environment"
msgstr "与えられた環境には局所的なオブジェクトがありません"

#. R/packageName.R: gettextf("Created a package name, %s, when none found", sQuote(pkg))
#: R/packageName.R:0
msgid "Created a package name, %s, when none found"
msgstr "見つからないので、パッケージ名 %s を作成しました"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in %s\n    (from the saved implicit definition)",     sQuote(name), sQuote(package), thisPName)
#: R/Methods.R:0
msgid ""
"Creating a generic function for %s from %s in %s\n"
"    (from the saved implicit definition)"
msgstr ""
"%s に対する総称的関数を %s (%s 中の) から作成します\n"
"    (セーブされた暗黙の定義から)"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in %s",     sQuote(f), sQuote(fdef@package), thisPName)
#: R/Methods.R:0
msgid "Creating a generic function for %s from package %s in %s"
msgstr "%s に対する総称関数をパッケージ %s (%s 中にある) から作成します"

#. R/Methods.R: gettextf("Creating a generic function from function %s in %s",     sQuote(f), thisPName)
#: R/Methods.R:0
msgid "Creating a generic function from function %s in %s"
msgstr "関数 %s (%s 中) から総称関数を生成します"

#. R/Methods.R: gettextf("Creating a new generic function for %s in %s", sQuote(name),     thisPName)
#: R/Methods.R:0
msgid "Creating a new generic function for %s in %s"
msgstr "新しい総称関数 %s を %s 中に生成します"

#. R/RClassUtils.R: stop("Data part is undefined for general S4 object")
#: R/RClassUtils.R:0
msgid "Data part is undefined for general S4 object"
msgstr "一般的な S4 クラスオブジェクトに対してデータ部分が未定義です"

#. R/RClassUtils.R: paste("Debugging .checkSubclasses(): assignClassDef(what=\"%s\", *, where=%s, force=TRUE);\n",     "E := environment(): %s; parent.env(E): %s")
#: R/RClassUtils.R:0
msgid "Debugging .checkSubclasses(): assignClassDef(what=\"%s\", *, where=%s, force=TRUE);"
msgstr ""

#. R/RClassUtils.R: gettextf("Definition of slot %s, in class %s, as %s conflicts with definition, inherited from class %s, as %s",     sQuote(dup), dQuote(name), dQuote(elNamed(allProps, dup)),     dQuote(cl), dQuote(elNamed(theseProperties, dup)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "Definition of slot %s, in class %s, as %s conflicts with definition, inherited from class %s, as %s"
msgstr "スロット %s (クラス %s 中の) は現在 \"%s\" として定義 (もしくは継承) されていますが、クラス %s 中の継承された定義と相克します"

#. R/RClassUtils.R: paste("Debugging .checkSubclasses(): assignClassDef(what=\"%s\", *, where=%s, force=TRUE);\n",     "E := environment(): %s; parent.env(E): %s")
#: R/RClassUtils.R:0
msgid "E := environment(): %s; parent.env(E): %s"
msgstr ""

#. R/RMethodUtils.R: message("Empty function name in .getGeneric")
#: R/RMethodUtils.R:0
msgid "Empty function name in .getGeneric"
msgstr ".getGeneric の中に空の関数名"

#. R/trace.R: gettextf("Environment of class %s is locked; using global environment for new class",     dQuote(className))
#: R/trace.R:0
msgid "Environment of class %s is locked; using global environment for new class"
msgstr "クラス %s の環境はロックされています; グローバル環境を新しいクラスのために使います"

#. R/Methods.R: gettextf("For function %s, signature %s: argument in method definition changed from (%s) to (%s)",     sQuote(f), sQuote(signature), mnames, fnames)
#: R/Methods.R:0
msgid "For function %s, signature %s: argument in method definition changed from (%s) to (%s)"
msgstr "%s 関数のシグニチャ %s: メソッド定義中の引数が (%s) から (%s) へ変換されました"

#. R/RClassUtils.R: gettextf("Found more than one class \"%s\" in cache; using the first, from namespace '%s'",     value[[1]]@className, pkgs[1])
#: R/RClassUtils.R:0
msgid "Found more than one class \"%s\" in cache; using the first, from namespace '%s'"
msgstr ""

#. R/Methods.R: gettextf("Function %s is a group generic; do not call it directly",     sQuote(name))
#: R/Methods.R:0
msgid "Function %s is a group generic; do not call it directly"
msgstr "関数 %s はグループ総称的です；直接呼び出さないで下さい"

#. R/Methods.R: gettextf("Function %s is already a group generic; no change",     sQuote(name))
#: R/Methods.R:0
msgid "Function %s is already a group generic; no change"
msgstr "関数 %s は既にグループ総称的です; 変更しません"

#. R/debug.R: stop("Function must be an S4 generic")
#: R/debug.R:0
#, fuzzy
msgid "Function must be an S4 generic"
msgstr ".getGeneric の中に空の関数名"

#. R/MethodsList.R: gettextf("In %s: use of \"MethodsList\" metadata objects is defunct.",     deparse(this))
#: R/MethodsList.R:0
#, fuzzy
msgid "In %s: use of \"MethodsList\" metadata objects is defunct."
msgstr "%s ：\"MethodsList\" メタデータオブジェクトの使用は廃止されました"

#. R/MethodsList.R: gettextf("In %s: use of \"MethodsList\" metadata objects is deprecated.",     deparse(this))
#: R/MethodsList.R:0
#, fuzzy
msgid "In %s: use of \"MethodsList\" metadata objects is deprecated."
msgstr "%s 中：\"MethodsList\" メタデータオブジェクトの使用は廃止されました．"

#. R/trace.R: gettextf("Methods inserted for function %s(): %s", f, paste(methodsInserted,     collapse = ", "))
#: R/trace.R:0
msgid "Methods inserted for function %s(): %s"
msgstr "関数 %s() に対するメソッドが挿入されます: %s"

#. R/refClass.R: gettextf("Methods not found: %s", paste(dQuote(methods[missing]),     collapse = ", "))
#: R/refClass.R:0
#, fuzzy
msgid "Methods not found: %s"
msgstr "オブジェクト %s は存在しません"

#. R/trace.R: gettextf("Modified functions inserted through trace(): %s", paste(objectsDone,     collapse = ", "))
#: R/trace.R:0
msgid "Modified functions inserted through trace(): %s"
msgstr "変更された関数が trace() を通じて挿入されます: %s"

#. R/trace.R: gettextf("New functions are not currently inserted (not untraceable): %s",     paste(newObjects, collapse = ", "))
#: R/trace.R:0
msgid "New functions are not currently inserted (not untraceable): %s"
msgstr "新しい関数は現在挿入できません (アントレース可能ではありません): %s"

#. R/SClasses.R: gettextf("No %s names supplied", what)
#: R/SClasses.R:0
msgid "No %s names supplied"
msgstr "いかなる %s 名も与えられていません"

#. R/NextMethod.R: stop("No next method available")
#: R/NextMethod.R:0
msgid "No next method available"
msgstr "次のメソッドは利用可能ではありません"

#. R/methodsTable.R: gettextf("No simply inherited methods found for function %s; using non-simple method",     sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid "No simply inherited methods found for function %s; using non-simple method"
msgstr "関数 %s に対して素直に継承されたメソッドが見つかりません; 素直でないメソッドを使います"

#. R/trace.R: gettextf("Non-function objects are not currently inserted (not traceable): %s",     paste(notTraceable, collapse = ", "))
#: R/trace.R:0
msgid "Non-function objects are not currently inserted (not traceable): %s"
msgstr "関数でないオブジェクトは現在挿入できません（トレース不能です）: %s"

#. R/methodsTable.R: gettextf("Note: method with signature %s chosen for function %s,\n target signature %s.\n %s would also be valid",     sQuote(selected), sQuote(attr(cond, "generic")), sQuote(attr(cond,         "target")), paste0("\"", possible[is.na(match(possible,         selected))], "\"", collapse = ", "))
#: R/methodsTable.R:0
msgid ""
"Note: method with signature %s chosen for function %s,\n"
" target signature %s.\n"
" %s would also be valid"
msgstr ""
"注: シグネチャー %s を持つメソッドが、関数 %s に対して選ばれました,\n"
" 対象シグネチャー %s です。\n"
" %s もまた有効かもしれません"

#. R/RClassUtils.R: gettextf("Note: some superclasses of class %s in package %s have duplicate definitions.  This definition is not being treated as equivalent to that from package %s",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
msgid "Note: some superclasses of class %s in package %s have duplicate definitions.  This definition is not being treated as equivalent to that from package %s"
msgstr "注意: パッケージ %2$s 中のクラス %1$s のある上位クラスが重複する定義を持ちます。  この定義はパッケージ %3$s からのそれと同値としては扱われません"

#. R/RClassUtils.R: gettextf("Note: the specification for class %s in package %s seems equivalent to one from package %s: not turning on duplicate class definitions for this class.",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
msgid "Note: the specification for class %s in package %s seems equivalent to one from package %s: not turning on duplicate class definitions for this class."
msgstr "注意: パッケージ %2$s 中の S3 クラス %1$s はパッケージ %3$s からのものと同値に見えますので、このクラスに対する重複クラス定義は行いません"

#. R/MethodsListClass.R: gettextf("\n    Notes: %s.\n", notei)
#: R/MethodsListClass.R:0
msgid "Notes: %s."
msgstr "注意: %s"

#. R/BasicClasses.R: gettextf("OOPS: something wrong with '.OldClassesPrototypes[[%d]]'",     i)
#: R/BasicClasses.R:0
#, fuzzy
msgid "OOPS: something wrong with '.OldClassesPrototypes[[%d]]'"
msgstr "おや、'.OldClassesPrototypes' の第 %d 行目が何か変です"

#. R/refClass.R: gettextf("Reference superclasses must come from the same package for the environment to be defined:  got %s and %s",     .nQuote(clRefMethods$.objectPackage), .nQuote(pkg))
#: R/refClass.R:0
msgid "Reference superclasses must come from the same package for the environment to be defined:  got %s and %s"
msgstr ""

#. R/Methods.R: gettextf("Restoring default function definition of %s", sQuote(f))
#: R/Methods.R:0
msgid "Restoring default function definition of %s"
msgstr "%s の既定の関数定義を回復しています"

#. R/ClassExtensions.R: gettextf("S3Part() is only defined for classes set up by setOldCLass(), basic classes or subclasses of these:  not true of class %s",     dQuote(class(object)))
#: R/ClassExtensions.R:0
msgid "S3Part() is only defined for classes set up by setOldCLass(), basic classes or subclasses of these:  not true of class %s"
msgstr "S3Part() は setOldClass() によってセットアップされたクラス、基本クラス、もしくはそれらのサブクラスに対してだけ定義されます: クラス %s に対しては定義できません"

#. R/method.skeleton.R: gettextf("Skeleton of method written to %s", if (is.character(file)) file else "connection")
#: R/method.skeleton.R:0
msgid "Skeleton of method written to %s"
msgstr "メソッドの骨格 (skeleton) が %s に書き込まれます"

#. R/RClassUtils.R: gettextf("The prototype for class %s has undefined slot(s): %s",     dQuote(name), paste0("'", undefinedPrototypeSlots, "'", collapse = ", "))
#: R/RClassUtils.R:0
#, fuzzy
msgid "The prototype for class %s has undefined slot(s): %s"
msgstr "'%s' リスト (クラス %s に対する) は未定義のクラス %s を含みます"

#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead))
#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead))
#: R/MethodsList.R:0
#, fuzzy
msgid "Use %s instead."
msgstr "%s を代わりに使ってください．"

#. R/as.R: gettextf("a 'replace' method definition in 'setAs' must be a function of two arguments, got %d",     length(args))
#: R/as.R:0
msgid "a 'replace' method definition in 'setAs' must be a function of two arguments, got %d"
msgstr "'setAs' 中の 'replace' メソッド定義は 2 つの引数を持つ関数でなければなりません; (%d) でした"

#. R/NextMethod.R: gettextf("a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'",     sQuote(f))
#: R/NextMethod.R:0
msgid "a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'"
msgstr "callNextMethod() の呼び出しが %s への呼び出しに現れました。しかしこの呼び出しは総称的関数や別の 'callNextMethod' から来たものには見えません"

#. R/refClass.R: gettextf("a call to superClass() is in the method %s but there is no superclass definition of this method for class %s",     sQuote(me), dQuote(thisClass@className))
#: R/refClass.R:0
msgid "a call to superClass() is in the method %s but there is no superclass definition of this method for class %s"
msgstr "superClass() の呼び出しがメソッド %s 中にありますが、クラス %s に対するこのメソッドの上位クラス定義がありません"

#. R/Methods.R: stop("a function for argument 'f' must be a generic function")
#. R/trace.R: stop("a function for argument 'f' must be a generic function")
#: R/Methods.R:0 R/trace.R:0
msgid "a function for argument 'f' must be a generic function"
msgstr "引数 'f' に対する関数は総称的でなければなりません"

#. R/RClassUtils.R: gettextf("a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype@object)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s"
msgstr "プロトタイプオブジェクトがクラス %s のオブジェクトスロットを伴い与えられましたが、クラス定義はクラス %s であるオブジェクトを必要とします"

#. R/RClassUtils.R: gettextf("a prototype was supplied of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "a prototype was supplied of class %s, but the class definition requires an object that is class %s"
msgstr "クラス %s のプロトタイプが与えられましたが、クラス定義はクラス %s であるオブジェクトを必要とします"

#. R/refClass.R: gettextf("a single class name is needed for field %s, got a character vector of length %d",     sQuote(thisName), length(thisField))
#: R/refClass.R:0
msgid "a single class name is needed for field %s, got a character vector of length %d"
msgstr "欄 %s には単一のクラス名が必要とされています: 長さ %d の文字ベクトルが与えられました"

#. R/RClassUtils.R: gettextf("a validity method must be a function of one argument, got an object of class %s",     dQuote(class(validity)))
#: R/RClassUtils.R:0
msgid "a validity method must be a function of one argument, got an object of class %s"
msgstr "validity メソッドは一つの変数を持つ関数でなければなりません、クラス %s のオブジェクトを得ました"

#. R/SClasses.R: gettextf("abnormal type %s is not supported as a superclass of a class definition",     dQuote(type))
#: R/SClasses.R:0
msgid "abnormal type %s is not supported as a superclass of a class definition"
msgstr "異常なタイプ %s はクラス定義のスーパークラスとしてはサポートされていません."

#. R/RMethodUtils.R: gettextf("action function %s has no arguments, should have at least 1",     sQuote(fname))
#: R/RMethodUtils.R:0
msgid "action function %s has no arguments, should have at least 1"
msgstr "アクション関数 %s は引数を持ちません。少なくとも 1 つは持つべきです"

#. R/as.R: warning("ambiguous object (length != 1) to coerce to \"name\"")
#: R/as.R:0
msgid "ambiguous object (length != 1) to coerce to \"name\""
msgstr "\"name\" に強制変更するには曖昧なオブジェクトです (length != 1)"

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\n",     "move the file or remove the class/method")
#: R/zzz.R:0
msgid "apparently bad method or class metadata in saved environment;"
msgstr "保存された環境中に誤ったメソッドもしくはクラスメタデータがあるようです;"

#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f1)))
#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f2)))
#: R/Methods.R:0
msgid "argument %s is not S4"
msgstr "引数 %s は S4 ではありません"

#. R/Methods.R: gettextf("argument %s must be a generic function or a single character string; got an object of class %s",     sQuote("f"), dQuote(class(f)))
#: R/Methods.R:0
msgid "argument %s must be a generic function or a single character string; got an object of class %s"
msgstr "引数 %s は総称的関数か単一の文字列でなければなりません; クラス %s のオブジェクトを得ました"

#. R/SClasses.R: gettextf("argument %s must be a list or a character vector; got an object of class %s",     dQuote(what), dQuote(class(fields)))
#: R/SClasses.R:0
msgid "argument %s must be a list or a character vector; got an object of class %s"
msgstr "引数 %s はリストか文字ベクトルでなければなりません; クラス %s のオブジェクトを得ました"

#. R/oldClass.R: gettextf("argument 'Classes' must be a vector of two classes; got an argument of length %d",     length(Classes))
#: R/oldClass.R:0
msgid "argument 'Classes' must be a vector of two classes; got an argument of length %d"
msgstr "引数 'Classes' は二つのクラスのベクトルでなければなりません; 長さ %d の引数でした"

#. R/oldClass.R: gettextf("argument 'S4Class' must be a class definition: got an object of class %s",     dQuote(class(S4Class)))
#: R/oldClass.R:0
msgid "argument 'S4Class' must be a class definition: got an object of class %s"
msgstr "引数 'S4Class' はクラス定義でなければなりません: クラス %s のオブジェクトが与えられました"

#. R/RClassUtils.R: stop("argument 'abbreviate' must be 0, 1, 2, or 3")
#: R/RClassUtils.R:0
msgid "argument 'abbreviate' must be 0, 1, 2, or 3"
msgstr "引数 'abbreviate' は 0,1,2,3 のどれかでなければなりません"

#. R/SClasses.R: stop("argument 'classDef' must be a class definition or the name of a class")
#: R/SClasses.R:0
msgid "argument 'classDef' must be a class definition or the name of a class"
msgstr "引数 'classDef' はクラス定義かクラスの名前でなければなりません"

#. R/SClasses.R: gettextf("argument 'classDef' must be a string or a class representation; got an object of class %s",     dQuote(class(classDef)))
#: R/SClasses.R:0
msgid "argument 'classDef' must be a string or a class representation; got an object of class %s"
msgstr "引数 'classDef' は文字列かクラス表現でなければなりません; クラス %s のオブジェクトでした"

#. R/Methods.R: gettextf("argument 'f' must be a generic function or %s", .notSingleString(f))
#: R/Methods.R:0
msgid "argument 'f' must be a generic function or %s"
msgstr "引数 'f' に対する関数は総称的関数または %s でなければなりません"

#. R/RMethodUtils.R: stop("argument 'f' must be a string, generic function, or primitive: got an ordinary function")
#: R/RMethodUtils.R:0
msgid "argument 'f' must be a string, generic function, or primitive: got an ordinary function"
msgstr "引数 'f' は文字列、総称的関数またはプリミティブである必要がありますが、普通の関数が得られました"

#. R/RClassUtils.R: stop("argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'")
#: R/RClassUtils.R:0
msgid "argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'"
msgstr "引数 'includeSubclasses' は、単一の値か、引数 'classes' と同じ長さのベクトルである論理値でなければなりません"

#. R/trace.R: stop("argument 'signature' is not meaningful for tracing reference methods")
#: R/trace.R:0
msgid "argument 'signature' is not meaningful for tracing reference methods"
msgstr "引数 'signature' は参照メソッドを追跡するのに足る意味を持ちません"

#. R/Methods.R: warning("argument 'signature' is not meaningful with the current implementation and is ignored \n(extract a subset of the methods list instead)")
#: R/Methods.R:0
msgid ""
"argument 'signature' is not meaningful with the current implementation and is ignored \n"
"(extract a subset of the methods list instead)"
msgstr ""
"引数 'signature' は現在の実装では意味が無いので無視されます\n"
"(代わりにメソッドリストの一部を抜き出します)"

#. R/methodsTable.R: stop("argument 'signatures' must be a character matrix whose rows are method signatures")
#: R/methodsTable.R:0
msgid "argument 'signatures' must be a character matrix whose rows are method signatures"
msgstr "引数 'signature' は行がメソッドシグネチャーである文字行列である必要があります"

#. R/trace.R: stop("argument 'what' should be the name of a function")
#: R/trace.R:0
msgid "argument 'what' should be the name of a function"
msgstr "引数 'what' は関数名でなければなりません"

#. R/RMethodUtils.R: stop("argument f must be a generic function with signature \"...\"")
#: R/RMethodUtils.R:0
msgid "argument f must be a generic function with signature \"...\""
msgstr "引数 f はシグネチャが \"...\" である総称的関数でなければなりません"

#. R/as.R: gettextf("argument names in 'replace' changed to agree with 'coerce<-' generic:\n%s",     paste(deparse(replace), sep = "\n    "))
#: R/as.R:0
msgid ""
"argument names in 'replace' changed to agree with 'coerce<-' generic:\n"
"%s"
msgstr ""
"'replace' 中の引数名は総称的な 'coerce<-' に一致するように変更されました:\n"
"%s"

#. R/MethodsList.R: stop("arguments 'names' and 'signature' must have the same length")
#: R/MethodsList.R:0
msgid "arguments 'names' and 'signature' must have the same length"
msgstr "引数 'names' と 'signature' は同じ長さを持たなければなりません"

#. R/refClass.R: stop("arguments must all be character string names of fields")
#: R/refClass.R:0
msgid "arguments must all be character string names of fields"
msgstr "引数はすべて欄名である文字列でなければなりません"

#. R/refClass.R: stop("arguments to methods() must be named, or one named list")
#: R/refClass.R:0
msgid "arguments to methods() must be named, or one named list"
msgstr "methods() の引数は名前付きか、一つの名前付きリストでなければなりません"

#. R/RClassUtils.R: gettextf("assigning as %s a class representation with internal name %s",     dQuote(Class), dQuote(def@className))
#: R/RClassUtils.R:0
msgid "assigning as %s a class representation with internal name %s"
msgstr "%s として内部名 %s を持つクラス表現を割り当て中"

#. R/trace.R: gettextf("assigning over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(pname))
#: R/trace.R:0
msgid "assigning over the binding of symbol %s in environment/package %s"
msgstr "シンボル %s の拘束を跨いで付値しています(環境/パッケージ %s 中)"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid "assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE"
msgstr "クラス %s のオブジェクトの代入はスロット @%s (クラス %s のオブジェクト中) に対しては不正です; is(value, \"%s\") が TRUE ではありません"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid "assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE"
msgstr "クラス %s のオブジェクトの代入はスロット %s (クラス %s のオブジェクト中) に対しては不正です; is(value, \"%s\") が TRUE ではありません"

#. R/Methods.R: gettextf("bad class specified for element %d (should be a single character string)",     i)
#: R/Methods.R:0
msgid "bad class specified for element %d (should be a single character string)"
msgstr "要素 %d に対して間違ったクラスが指定されました (単一の文字列である必要があります)"

#. R/methodsTable.R: gettextf("bad method object stored in method table, class %s",     dQuote(class(current)))
#: R/methodsTable.R:0
msgid "bad method object stored in method table, class %s"
msgstr "間違ったオブジェクトがメソッド (クラス %s) として見付かりました"

#. R/NextMethod.R: gettextf("bad object found as method (class %s)", dQuote(class(method)))
#: R/NextMethod.R:0
msgid "bad object found as method (class %s)"
msgstr "間違ったオブジェクトがメソッド (クラス %s) として見付かりました"

#. R/is.R: gettext("both classes must be defined")
#: R/is.R:0
msgid "both classes must be defined"
msgstr "どちらのクラスも定義されなければなりません"

#. R/NextMethod.R: stop("call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context")
#: R/NextMethod.R:0
msgid "call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context"
msgstr "'callNextMethod' への呼び出しは 'method' または 'callNextMethod' 文脈中にあるとは見えません"

#. R/Methods.R: stop("callGeneric() must be called from within a method body")
#: R/Methods.R:0
msgid "callGeneric() must be called from within a method body"
msgstr "callGeneric() はメソッド本体から呼び出されなくてはなりません"

#. R/is.R: gettextf("cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package",     dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid "cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package"
msgstr "クラス (%s と %s) のどれもがこのパッケージでローカルか変更可能で無いときは 'setIs' 関係を生成できません"

#. R/trace.R: gettextf("cannot find an environment corresponding to package name '%s\"",     package)
#: R/trace.R:0
msgid "cannot find an environment corresponding to package name '%s\""
msgstr "パッケージ名 \"%s\" に対応する環境を見付けることが出来ません"

#. R/BasicClasses.R: stop("cannot have more than one unnamed argument as environment")
#: R/BasicClasses.R:0
msgid "cannot have more than one unnamed argument as environment"
msgstr "環境としての名前のない引数は複数存在できません"

#. R/trace.R: gettextf("cannot insert methods for these functions (methods table not found in source): %s",     paste0("\"", methods[notThere], "\"", collapse = ", "))
#: R/trace.R:0
msgid "cannot insert methods for these functions (methods table not found in source): %s"
msgstr "以下の関数に対するメソッドを挿入できません (メソッドテーブルがソース中にありません): %s"

#. R/trace.R: gettextf("cannot insert these (not found in source): %s", paste0("\"",     functions[notThere], "\"", collapse = ", "))
#: R/trace.R:0
msgid "cannot insert these (not found in source): %s"
msgstr "以下を挿入できません (ソース中に見当たりません): %s"

#. R/Methods.R: gettextf("cannot remove methods for %s in locked environment/package %s",     sQuote(f), sQuote(getPackageName(db)))
#: R/Methods.R:0
msgid "cannot remove methods for %s in locked environment/package %s"
msgstr "%s (ロックされた環境/パッケージ %s 中の) のメソッドを削除できません"

#. R/BasicClasses.R: stop("cannot specify array() arguments when specifying '.Data'")
#: R/BasicClasses.R:0
msgid "cannot specify array() arguments when specifying '.Data'"
msgstr "'.Data' を指定した場合は array() の引数を指定することはできません"

#. R/BasicClasses.R: stop("cannot specify matrix() arguments when specifying '.Data'")
#: R/BasicClasses.R:0
msgid "cannot specify matrix() arguments when specifying '.Data'"
msgstr "'.Data' を指定した場合は matrix() の引数を指定することはできません"

#. R/trace.R: gettextf("cannot untrace method for %s; no method defined for this signature: %s",     sQuote(what), paste(signature, collapse = ", "))
#: R/trace.R:0
msgid "cannot untrace method for %s; no method defined for this signature: %s"
msgstr "メソッド %s に対するメソッドをアントレースできません; 以下のシグネチャに対するメソッドはありません: %s"

#. R/trace.R: stop("cannot use 'at' argument unless the function body has the form '{ ... }'")
#: R/trace.R:0
msgid "cannot use 'at' argument unless the function body has the form '{ ... }'"
msgstr "関数本体が '{ ... }' の形でない限り、'at' 引数は使えません"

#. R/trace.R: stop("cannot use 'at' argument without a trace expression")
#: R/trace.R:0
msgid "cannot use 'at' argument without a trace expression"
msgstr "trace 表現無しの 'at' 引数は使えません"

#. R/SClasses.R: gettextf("cannot use object of class %s in new():  class %s does not extend that class",     dQuote(Classi), dQuote(Class))
#: R/SClasses.R:0
msgid "cannot use object of class %s in new():  class %s does not extend that class"
msgstr "クラス %s のオブジェクトを new() の中では使えません: クラス %s はそのクラスには拡張されません"

#. R/is.R: gettextf("class %s cannot extend class %s", dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid "class %s cannot extend class %s"
msgstr "クラス %s はクラス %s に拡張できません"

#. R/RClassUtils.R: gettextf("class %s does not have a data part (a .Data slot) defined",     dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "class %s does not have a data part (a .Data slot) defined"
msgstr "クラス %s はデータパート (.Data スロット) が定義されていません"

#. R/BasicClasses.R: gettextf("class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent",     dQuote(class(from)))
#: R/BasicClasses.R:0
msgid "class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent"
msgstr "クラス %s は S3 データ部分を持たないため、\"S4\" タイプであり、S3 相当ではありません"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class (%s)", dQuote(name),     dQuote(cl))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class (%s)"
msgstr "クラス %s は未定義のクラス (%s) に拡張されます"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class, %s", dQuote(ClassDef@className),     dQuote(what))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class, %s"
msgstr "クラス %s は未定義のクラスに拡張されます、%s"

#. R/refClass.R: gettextf("class %s for field %s is not defined", dQuote(thisField),     sQuote(thisName))
#: R/refClass.R:0
msgid "class %s for field %s is not defined"
msgstr "クラス %s （欄 %s に対する）が定義されていません"

#. R/RClassUtils.R: gettextf("class %s has a locked definition in package %s", dQuote(Class),     sQuote(getPackageName(where)))
#: R/RClassUtils.R:0
msgid "class %s has a locked definition in package %s"
msgstr "クラス %s はパッケージ %s 中にロックされた定義を持ちます"

#. R/SClasses.R: gettextf("class %s has multiple definitions visible; only the first removed",     dQuote(Class))
#: R/SClasses.R:0
msgid "class %s has multiple definitions visible; only the first removed"
msgstr "クラス %s は複数の可視な定義を持ちます; 最初のものだけが取り除かれます"

#. R/is.R: gettextf("class %s has no visible definition from package or environment %s",     dQuote(class2), sQuote(getPackageName(where)))
#: R/is.R:0
msgid "class %s has no visible definition from package or environment %s"
msgstr "クラス %s はパッケージもしくは環境 %s から可視な定義を持ちません"

#. R/BasicClasses.R: gettextf("class %s is VIRTUAL; not meaningful to create an S4 object from this class",     dQuote(cl))
#: R/BasicClasses.R:0
msgid "class %s is VIRTUAL; not meaningful to create an S4 object from this class"
msgstr "クラス %s はバーチャルです; S4 オブジェクトをこのクラスから作ることは意味がありません"

#. R/as.R: gettextf("class %s is a class union: 'coerce' relations to a class union are not meaningful",     dQuote(to))
#: R/as.R:0
msgid "class %s is a class union: 'coerce' relations to a class union are not meaningful"
msgstr "クラス %s はクラスのユニオンです: クラスユニオンに対する 'coerce' 関係は無意味です"

#. R/is.R: gettextf("class %s is defined (with package slot %s) but no metadata object found to revise %s information---not imported?  Making a copy in package %s",     .dQ(class), sQuote(classDef@package), purpose, sQuote(getPackageName(where,         FALSE)))
#: R/is.R:0
#, fuzzy
msgid "class %s is defined (with package slot %s) but no metadata object found to revise %s information---not imported?  Making a copy in package %s"
msgstr "クラス %s が（パッケージスロット %s とともに) 定義されていますが、%s の情報を改訂するためのメタデータオブジェクトがありません。エクスポートされていないのでは？  パッケージ %s 中にコピーを作成します"

#. R/refClass.R: gettextf("class %s is defined but is not a reference class",     dQuote(Class))
#: R/refClass.R:0
msgid "class %s is defined but is not a reference class"
msgstr "クラス %s は定義されていますが、参照クラスではありません"

#. R/SClasses.R: gettextf("class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)",     dQuote(Class), sQuote(classDef@package))
#: R/SClasses.R:0
msgid "class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)"
msgstr "クラス %s は、パッケージ %s とともに定義されていますが、それに関連するメタデータオブジェクトが見つかりません (エクスポートされていないのでは？)"

#. R/RClassUtils.R: gettextf("class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s",     .dQ(className), .dQ(by), paste(.dQ(coni), collapse = ", "))
#: R/RClassUtils.R:0
msgid "class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s"
msgstr "クラス %s はクラス %s （%s とは不整合） から不整合な上位クラスの構造を継承しています"

#. R/as.R: gettextf("class %s is not defined in this environment", dQuote(to))
#: R/as.R:0
msgid "class %s is not defined in this environment"
msgstr "この環境ではクラス %s は定義されていません"

#. R/SClasses.R: gettextf("class %s is sealed; 'resetClass' will have no effect",     dQuote(Class))
#: R/SClasses.R:0
msgid "class %s is sealed; 'resetClass' will have no effect"
msgstr "クラス %s は封印されています; 'resetClass' は無効でしょう"

#. R/is.R: gettextf("class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'",     dQuote(class1))
#: R/is.R:0
msgid "class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'"
msgstr "クラス %s は封印されています; 新しい上位クラスは、'setClassUnion' を使わない限り、定義できません"

#. R/SClasses.R: gettextf("class %s not found on %s; 'resetClass' will have no effect",     dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "class %s not found on %s; 'resetClass' will have no effect"
msgstr "クラス %s は %s には見付かりません; 'resetClass' は無効でしょう"

#. R/RClassUtils.R: stop("class cannot have both an ordinary and hidden data type")
#: R/RClassUtils.R:0
msgid "class cannot have both an ordinary and hidden data type"
msgstr "クラスは通常と隠れデータタイプの双方を持つことはできません"

#. R/SClasses.R: gettextf("class definition cannot extend more than one of these data types: %s",     paste0("\"", type, "\"", collapse = ", "))
#: R/SClasses.R:0
msgid "class definition cannot extend more than one of these data types: %s"
msgstr "クラス定義は、これらのデータ型のうちの 1 つ以上を広げることができません: %s"

#. R/SClasses.R: gettextf("class definition for %s not found (no action taken)",     dQuote(Class))
#: R/SClasses.R:0
msgid "class definition for %s not found (no action taken)"
msgstr "%s に対するクラス定義が見付かりません (何も行いません)"

#. R/MethodsListClass.R: gettextf("class generator function for class %s from package %s\n",     dQuote(object@className), sQuote(object@package))
#: R/MethodsListClass.R:0
msgid "class generator function for class %s from package %s"
msgstr "クラス %s に対するクラス生成関数 (パッケージ %s から)"

#. R/refClass.R: gettextf("class must be a reference class representation or a character string; got an object of class %s",     dQuote(class(Class)))
#: R/refClass.R:0
msgid "class must be a reference class representation or a character string; got an object of class %s"
msgstr "クラスは参照クラス表現か文字列でなければなりません; クラス %s のオブジェクトを得ました"

#. R/refClass.R: gettextf("code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)",     dQuote(Class), sQuote("codetools"))
#: R/refClass.R:0
msgid "code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)"
msgstr "クラス %s 中のメソッドに対するコードは疑問の余地のある欄指定にたいして検査されていません (推奨パッケージ %s が利用不可能？)"

#. R/RClassUtils.R: gettextf("conflicting definition of data part: .Data = %s, superclass implies %s",     dQuote(elNamed(properties, ".Data")), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "conflicting definition of data part: .Data = %s, superclass implies %s"
msgstr "データパートの相克する定義：.Data = %s, 上位クラスは %s を含意します"

#. R/MethodsList.R: gettextf("default method must be a method definition, a primitive or NULL: got an object of class %s",     dQuote(class(method)))
#: R/MethodsList.R:0
msgid "default method must be a method definition, a primitive or NULL: got an object of class %s"
msgstr "既定のメソッドはメソッド定義，primitive または NULL でなければなりません: クラス %s のオブジェクトを得ました"

#. R/refClass.R: stop("direct calls to callSuper() are invalid:  should only be called from another method")
#: R/refClass.R:0
msgid "direct calls to callSuper() are invalid:  should only be called from another method"
msgstr "callSuper() の直接の呼び出しは不正です: 他のメソッドからのみ呼び出されるべきです"

#. R/trace.R: gettextf("does not seem to be a method table for generic %s in tracing environment",     sQuote(what))
#: R/trace.R:0
msgid "does not seem to be a method table for generic %s in tracing environment"
msgstr "総称 %s に対するトレース環境中のメソッドテーブルのようには見えません"

#. R/SClasses.R: gettextf("duplicate class names among superclasses: %s", paste(.dQ(includes[duplicated(includes)]),     collapse = ", "))
#: R/SClasses.R:0
msgid "duplicate class names among superclasses: %s"
msgstr "上位クラス中に重複したクラス名があります: %s"

#. R/MethodsList.R: gettextf("duplicate element names in 'MethodsList' at level %d: %s",     level, paste("\"", unique(mnames[duplicated(mnames)]), "\"",         collapse = ", "))
#: R/MethodsList.R:0
msgid "duplicate element names in 'MethodsList' at level %d: %s"
msgstr "'MethodsList' のレベル %d に重複した要素名： %s"

#. R/SClasses.R: gettextf("duplicated slot names: %s", paste(sQuote(snames[duplicated(snames)]),     collapse = ", "))
#: R/SClasses.R:0
msgid "duplicated slot names: %s"
msgstr "重複したスロット名: %s"

#. R/MethodsList.R: gettextf("element %d at level %d (class %s) cannot be interpreted as a function or named list",     i, level, dQuote(class(eli)))
#: R/MethodsList.R:0
msgid "element %d at level %d (class %s) cannot be interpreted as a function or named list"
msgstr "要素 %d (レベル %d、クラス %s) は、関数もしくは名前付きリストとして解釈出来ません"

#. R/SClasses.R: gettextf("element %d of the representation was not a single character string",     i)
#: R/SClasses.R:0
msgid "element %d of the representation was not a single character string"
msgstr "representation の要素 %d は単一の文字列ではありません"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to remove definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "error in contained classes (%s) for class %s and unable to remove definition from %s"
msgstr "クラス (%s) がクラス %s に含まれていますが、エラーがあるため %s から定義を取り除けません"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to restore previous definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "error in contained classes (%s) for class %s and unable to restore previous definition from %s"
msgstr "含まれるクラス (%s) (クラス %s に対する) 中にエラーがあり、%s から以前の定義を回復できませんでした"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; class definition removed from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "error in contained classes (%s) for class %s; class definition removed from %s"
msgstr "含まれるクラス (%s) (クラス %s に対する) 中にエラーがありました; %s からクラス定義を取り去りました"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; previous definition restored to %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "error in contained classes (%s) for class %s; previous definition restored to %s"
msgstr "含まれるクラス (%s) (クラス %s に対する) 中にエラーがありました; 以前の定義は %s に回復しました"

#. R/RMethodUtils.R: gettextf("error in load action %s for package %s: %s: %s", aname,     getPackageName(where), callString, value$message)
#: R/RMethodUtils.R:0
msgid "error in load action %s for package %s: %s: %s"
msgstr "ロード動作 %s (パッケージ %s に対する) 中にエラー: %s: %s"

#. R/Methods.R: gettextf("error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)",     sQuote(f), dQuote(class(fdef)))
#: R/Methods.R:0
msgid "error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)"
msgstr "S4 総称的関数 %s の更新に際しエラー; 関数定義は S4 総称的関数ではありません (クラス %s です)"

#. R/RMethodUtils.R: gettextf("expanding the signature to include omitted arguments in definition: %s",     paste(sigNames[omittedSig], "= \"missing\"", collapse = ", "))
#: R/RMethodUtils.R:0
msgid "expanding the signature to include omitted arguments in definition: %s"
msgstr "シグナチャを定義中で使われなかった引数を含むように拡張中: %s"

#. R/addedFunctions.R: gettextf("expected a non-empty character string for argument 'name'")
#: R/addedFunctions.R:0
#, fuzzy
msgid "expected a non-empty character string for argument 'name'"
msgstr "引数の名前には空ではない文字列が必要です"

#. R/Methods.R: gettextf("expected a non-empty character string for argument name")
#: R/Methods.R:0
msgid "expected a non-empty character string for argument name"
msgstr "引数の名前には空ではない文字列が必要です"

#. R/oldClass.R: gettextf("explicit coercion of old-style class (%s) is not defined",     paste(class(from), collapse = ", "))
#: R/oldClass.R:0
msgid "explicit coercion of old-style class (%s) is not defined"
msgstr "旧式のクラス (%s) の明示的な強制変換は定義されていません"

#. R/oldClass.R: gettextf("explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s",     to, dQuote(class(from)[1L]))
#: R/oldClass.R:0
msgid "explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s"
msgstr "as(x, \"%s\") <- value （旧式のクラス %s に対しては）に対する明示的な置き換えは定義されていません"

#. R/methodsTable.R: stop("failed to find expected group generic function: ", what)
#: R/methodsTable.R:0
msgid "failed to find expected group generic function:"
msgstr "期待されたグループ総称的関数を見付けることができませんでした:"

#. R/Methods.R: gettextf("fdef appears to be a generic function, but with generic name %s instead of %s",     sQuote(gen), sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "fdef appears to be a generic function, but with generic name %s instead of %s"
msgstr "関数 %s は総称的関数と思われますが、総称的な名前 %s を持ちます"

#. R/refClass.R: gettextf("field %s is already locked", sQuote(what))
#: R/refClass.R:0
msgid "field %s is already locked"
msgstr "欄 %s はすでにロックされています"

#. R/refClass.R: gettextf("field %s of class %s has a non-default binding and cannot be locked",     sQuote(what), dQuote(className))
#: R/refClass.R:0
msgid "field %s of class %s has a non-default binding and cannot be locked"
msgstr "フィールド %s （クラス %s）は既定の結合を持たないためロックできません"

#. R/refClass.R: gettextf("field %s was supplied as an object of class %s; must be a class name or a binding function",     sQuote(thisName), dQuote(class(thisField)))
#: R/refClass.R:0
msgid "field %s was supplied as an object of class %s; must be a class name or a binding function"
msgstr "欄 %s がクラス %s のオブジェクトとして与えられました; クラス名か連結関数でなければなりません"

#. R/Methods.R: gettextf("first argument should be the names of one of more generic functions (got object of class %s)",     dQuote(class(f)))
#: R/Methods.R:0
msgid "first argument should be the names of one of more generic functions (got object of class %s)"
msgstr "最初の引数はより総称的な関数の一つの名前であるべきです (クラス %s のオブジェクトを得ました)"

#. R/RMethodUtils.R: gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature",     bad2)
#: R/RMethodUtils.R:0
msgid "formal arguments (%s) omitted in the method definition cannot be in the signature"
msgstr "メソッド定義中で使われなかった形式的引数 (%s) はシグナチャ中にあってはいけません"

#. R/Methods.R: gettext("formal arguments differ (in default values?)")
#: R/Methods.R:0
msgid "formal arguments differ (in default values?)"
msgstr "仮引数が異なっています (既定値が異なっているかもしれません?)"

#. R/Methods.R: gettextf("formal arguments differ: (%s), (%s)", paste(a1, collapse = ", "),     paste(a2, collapse = ", "))
#: R/Methods.R:0
msgid "formal arguments differ: (%s), (%s)"
msgstr "仮引数が異なっています: (%s), (%s)"

#. R/RMethodUtils.R: stop(.renderSignature(f, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#. R/RMethodUtils.R: stop(.renderSignature(generic@generic, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#: R/RMethodUtils.R:0
msgid "formal arguments in method and generic do not appear in the same order"
msgstr "メソッド中の形式的引数と総称が同じ順序で現れていません"

#. R/Methods.R: stop("function supplied as argument 'f' must be a generic")
#: R/Methods.R:0
msgid "function supplied as argument 'f' must be a generic"
msgstr "引数 'f' として提供された関数は総称的でなければなりません"

#. R/Methods.R: gettextf("generic function %s not found for removal", sQuote(f))
#: R/Methods.R:0
msgid "generic function %s not found for removal"
msgstr "除去のための総称的関数 %s が見付かりません"

#. R/Methods.R: gettextf("generic function supplied was not created for %s",     sQuote(name))
#: R/Methods.R:0
msgid "generic function supplied was not created for %s"
msgstr "与えられた総称的関数は %s に対して作成できません"

#. R/Methods.R: gettextf("generic names differ: %s, %s", .dQ(f1@generic), .dQ(f2@generic))
#: R/Methods.R:0
msgid "generic names differ: %s, %s"
msgstr "総称名が異なります: %s, %s"

#. R/RMethodUtils.R: stop("got a negative maximum number of frames to look at")
#: R/RMethodUtils.R:0
msgid "got a negative maximum number of frames to look at"
msgstr "見るべきフレームの最大数が負でした"

#. R/Methods.R: gettextf("groups differ: %s, %s", .dQ(gpString(f1@group)), .dQ(gpString(f2@group)))
#: R/Methods.R:0
msgid "groups differ: %s, %s"
msgstr "グループが異なります: %s, %s"

#. R/Methods.R: gettextf("if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default",     name)
#: R/Methods.R:0
msgid "if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default"
msgstr "もし 'def' 引数が与えられるなら、それはメソッドを割り当てる standardGeneric(\"%s\") を呼び出す関数である必要があります"

#. R/RMethodUtils.R: gettextf("in changing formal arguments in %s, some of the old names are not in fact arguments: %s",     msg, paste0("\"", old[is.na(match(old, names(dlist)))], "\"",         collapse = ", "))
#: R/RMethodUtils.R:0
msgid "in changing formal arguments in %s, some of the old names are not in fact arguments: %s"
msgstr "%s 中の形式的引数を変更しようとしましたが、古い名前の幾つかは実際は引数ではありません: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s, slots in prototype and not in class: %s",     dQuote(className), paste(extra, collapse = ", "))
#: R/RClassUtils.R:0
msgid "in constructing the prototype for class %s, slots in prototype and not in class: %s"
msgstr "クラス %s に対するプロトタイプの構築時、スロットはプロトタイプ中にありますがクラス中にはありません: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s",     dQuote(className), dQuote(.class1(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s"
msgstr "クラス %s に対するプロトタイプの構築時: プロトタイプはクラス %s ですが、データ部分はクラス %s を指定しています"

#. R/RClassUtils.R: gettextf("in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)",     dQuote(name), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)"
msgstr "クラス %s の定義において、与えられたデータパートクラス %s が不正です (基本クラスか、基本クラスを結合した仮想的クラスである必要があります)"

#. R/RClassUtils.R: gettextf("in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")",     dQuote(ClassDef@className), dQuote(what), dQuote(class(exti)))
#: R/RClassUtils.R:0
msgid "in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")"
msgstr "クラス %s の定義中、上位クラス %s がクラス %s です (\"SClassExtension\" が期待されます)"

#. R/RClassUtils.R: gettextf("in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s",     dQuote(className), paste(pnames[check], "(class", .dQ(slotDefs[match(pnames[check],         slotNames)]), ")", collapse = ", "))
#: R/RClassUtils.R:0
msgid "in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s"
msgstr "クラス %s に対するプロトタイプの構築時、プロトタイプの要素は対応するスロットクラスとマッチしませんでした: %s"

#. R/RMethodUtils.R: gettextf("in method for %s with signature %s: ", sQuote(f), sQuote(msig))
#: R/RMethodUtils.R:0
msgid "in method for %s with signature %s:"
msgstr "%s に対するメソッド (シグネチャ %s に伴う) 中:"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s (maybe mixing old and new classes?)",     dQuote(cl))
#: R/oldClass.R:0
msgid "inconsistent old-style class information for %s (maybe mixing old and new classes?)"
msgstr "%s に対する不整合な旧式の情報 (恐らく古いクラスと新しいクラスが混ざっている？)"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part",     dQuote(cl), dQuote(prevClass))
#: R/oldClass.R:0
msgid "inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part"
msgstr "%s に対する不整合な旧式のクラス情報; クラスは定義されていますが %s を拡張しておらず、データ部分として無効です"

#. R/RClassUtils.R: gettextf("initializing objects from class %s with these arguments is not supported",     dQuote(Class))
#: R/RClassUtils.R:0
msgid "initializing objects from class %s with these arguments is not supported"
msgstr "これらの引数を持つクラス %s からのオブジェクトの初期化はサポートされていません"

#. R/MethodsList.R: stop("inserting method corresponding to empty signature")
#: R/MethodsList.R:0
msgid "inserting method corresponding to empty signature"
msgstr "空のシグナチャ (signature) に対応するメソッドを挿入"

#. R/MethodsList.R: gettextf("inserting method into non-methods-list object (class %s)",     dQuote(.class1(mlist)))
#: R/MethodsList.R:0
msgid "inserting method into non-methods-list object (class %s)"
msgstr "メソッドをメソッドリストでないオブジェクト (クラス %s) に挿入"

#. R/MethodsList.R: gettextf("inserting method with invalid signature matching argument '...' to class %s",     dQuote(signature[[1L]]))
#: R/MethodsList.R:0
msgid "inserting method with invalid signature matching argument '...' to class %s"
msgstr "クラス %s への不正なシグネチャマッチング引数 '...' を持つメソッドを挿入"

#. R/refClass.R: stop("invalid 'Class' argument:  should be a single string")
#: R/refClass.R:0
msgid "invalid 'Class' argument:  should be a single string"
msgstr "不正な 'Class' 引数です: 単一の文字列である必要があります"

#. R/show.R: gettextf("invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s",     dQuote(class(ignore)))
#: R/show.R:0
msgid "invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s"
msgstr "不正な 'ignore' 引数です; クラス定義か文字ベクトルでなければなりませんがクラス %s のオブジェクトを得ました"

#. R/MethodsList.R: stop("invalid 'package' slot or attribute, wrong length")
#: R/MethodsList.R:0
msgid "invalid 'package' slot or attribute, wrong length"
msgstr "不正な 'package' スロットもしくは属性、間違った長さ"

#. R/trace.R: gettextf("invalid 'source' argument: expected file names or a connection but got an object of class %s",     dQuote(class(source)[[1L]]))
#: R/trace.R:0
msgid "invalid 'source' argument: expected file names or a connection but got an object of class %s"
msgstr "不正な 'source' 引数です: ファイル名かコネクションが期待されますが、クラス %s のオブジェクトが得られました"

#. R/oldClass.R: gettextf("invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s",     paste0("\"", bad, "\"", collapse = ", "))
#: R/oldClass.R:0
msgid "invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s"
msgstr "S3 クラスに対する不正な S4 クラス: S4 バージョン中のスロットは S3 バージョン中のスロットに拡張されなければなりません: %s に対して失敗しました"

#. R/Methods.R: gettextf("invalid argument 'name': %s", .isSingleName(name))
#: R/Methods.R:0
msgid "invalid argument 'name': %s"
msgstr "不正な引数 'name' です: %s"

#. R/refClass.R: gettextf("invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)",     sQuote(fieldName), dQuote(fieldClass), dQuote(class(value)))
#: R/refClass.R:0
msgid "invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)"
msgstr "参照クラスのフィールド %s に対する不正な付値です、クラス %s かサブクラスからでなければなりません (クラス %s でした)"

#. R/show.R: gettextf("invalid call to 'classLabel': expected a name or a class definition, got an object of class %s",     classLabel(class(Class)))
#: R/show.R:0
msgid "invalid call to 'classLabel': expected a name or a class definition, got an object of class %s"
msgstr "不正な 'classLabel' への呼び出し: 名前かクラス定義を期待しましたが、クラス %s のオブジェクトでした"

#. R/SClasses.R: gettextf("invalid class %s object", dQuote(Class))
#: R/SClasses.R:0
msgid "invalid class %s object"
msgstr "不正なクラス %s オブジェクト"

#. R/MethodsList.R: gettextf("invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name",     i)
#: R/MethodsList.R:0
msgid "invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name"
msgstr "\"signature\" 属性に対するリストに不正な要素があります; 要素 %d はクラス定義でもクラス名でもありません"

#. R/RMethodUtils.R: gettextf("invalid element in the \"groupMembers\" slot (class %s)",     dQuote(class(x)))
#: R/RMethodUtils.R:0
msgid "invalid element in the \"groupMembers\" slot (class %s)"
msgstr "\"groupMembers\" スロット中に不正な要素 (クラス %s)"

#. R/MethodsList.R: stop("invalid first argument: should be the name of the first argument in the dispatch")
#: R/MethodsList.R:0
msgid "invalid first argument: should be the name of the first argument in the dispatch"
msgstr "最初の引数が不正です; 割り当て (dispatch) における最初の引数の名前でなければなりません"

#. R/methodsTable.R: gettextf("invalid group generic function in search for inherited method (class %s)",     dQuote(class(gen)))
#: R/methodsTable.R:0
msgid "invalid group generic function in search for inherited method (class %s)"
msgstr "継承メソッドを探索中に不正なグループ総称関数が見付かりました (クラスは %s)"

#. R/languageEl.R: stop("invalid index for function argument")
#: R/languageEl.R:0
msgid "invalid index for function argument"
msgstr "関数引数に対する不正なインデックスです"

#. R/Methods.R: gettextf("invalid method definition: expected a function, got an object of class %s",     dQuote(class(definition)))
#: R/Methods.R:0
msgid "invalid method definition: expected a function, got an object of class %s"
msgstr "不正なメソッド定義です: 関数が期待されますが、クラス %s のオブジェクトが得られました"

#. R/methodsTable.R: gettextf("invalid method element for signature %s at level %d (should be MethodDefinition or .Primitive, had class %s)",     sQuote(classes[[j]]), i, dQuote(class(el)))
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid method element for signature %s at level %d (should be MethodDefinition or .Primitive, had class %s)"
msgstr "シグネチャ %s (レベル %d) に対する不正な mlist (メソッドのリストかメソッドでなければなりません、クラス %s でした)"

#. R/methodsTable.R: stop("invalid methods table request")
#: R/methodsTable.R:0
msgid "invalid methods table request"
msgstr "メソッドテーブルの要求が不正です"

#. R/MethodsListClass.R: gettextf("invalid object for formal method definition: type %s",     dQuote(typeof(def)))
#: R/MethodsListClass.R:0
msgid "invalid object for formal method definition: type %s"
msgstr "形式的なメソッド定義に対する不正なオブジェクト：タイプ %s"

#. R/methodsTable.R: gettextf("invalid object in meta table of methods for %s, label %s, had class %s",     sQuote(generic@generic), sQuote(what), dQuote(class(obj)))
#: R/methodsTable.R:0
msgid "invalid object in meta table of methods for %s, label %s, had class %s"
msgstr "%s、ラベル %s、に対するメソッドのメタテーブル中に不正なオブジェクトがあります。クラス %s でした"

#. R/methodsTable.R: gettextf("invalid object in methods table (%s), expected a method, got an object of class %s",     sQuote(what), dQuote(class(method)))
#: R/methodsTable.R:0
msgid "invalid object in methods table (%s), expected a method, got an object of class %s"
msgstr "メソッドテーブル (%s) 中に不正なオブジェクトがあります。メソッドが期待されますが、クラス %s のオブジェクトが得られました"

#. R/methodsTable.R: gettextf("invalid or unset methods table in generic function %s",     sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid "invalid or unset methods table in generic function %s"
msgstr "総称的関数 %s 中に不正か未設定のメソッドテーブルがあります"

#. R/refClass.R: gettextf("invalid replacement: reference class field %s is read-only",     sQuote(fieldName))
#: R/refClass.R:0
msgid "invalid replacement: reference class field %s is read-only"
msgstr "不正な置き換えです: 参照クラスのフィールド %s は読み込み専用です"

#. R/RMethodUtils.R: gettextf("invalid value from generic function %s, class %s, expected %s",     sQuote(fname), dQuote(class(object)), paste(dQuote(classes),         collapse = " or "))
#: R/RMethodUtils.R:0
msgid "invalid value from generic function %s, class %s, expected %s"
msgstr "総称的関数 %s からの不正な値、クラス %s ですが %s が期待されます"

#. R/refClass.R: gettextf("local assignment to field name will not change the field:\n    %s\n Did you mean to use \"<<-\"? ( in method %s for class %s)",     paste(unlist(assigned$locals)[localsAreFields], collapse = "; "),     methodName, className)
#: R/refClass.R:0
msgid ""
"local assignment to field name will not change the field:\n"
"    %s\n"
" Did you mean to use \"<<-\"? ( in method %s for class %s)"
msgstr ""
"欄名への局所的な付値は欄を変更しません:\n"
"    %s\n"
" \"<<-\" を使いたかったのですか？ (メソッド %s 中でクラス %s に対するもの)"

#. R/RMethodUtils.R: gettextf("making a generic for special function %s", sQuote(f))
#: R/RMethodUtils.R:0
msgid "making a generic for special function %s"
msgstr "特殊関数 %s のジェネリックを作ります"

#. R/trace.R: warning("making a traced version of a special; arguments may be altered")
#: R/trace.R:0
#, fuzzy
msgid "making a traced version of a special; arguments may be altered"
msgstr "プリミティブの traced バージョンを作っています; 引数は '...' として扱われます"

#. R/debug.R: warning("method is not being debugged")
#: R/debug.R:0
msgid "method is not being debugged"
msgstr ""

#. R/RMethodUtils.R: gettextf("methods can add arguments to the generic %s only if '...' is an argument to the generic",     sQuote(generic@generic))
#: R/RMethodUtils.R:0
msgid "methods can add arguments to the generic %s only if '...' is an argument to the generic"
msgstr "メソッドは総称　%s に、 '...' がそれへの引数である時に限り、引数を追加できます"

#. R/as.R: gettextf("methods currently exist for coercing from %s to %s; they will be replaced.",     dQuote(from), dQuote(to))
#: R/as.R:0
msgid "methods currently exist for coercing from %s to %s; they will be replaced."
msgstr "%s から %s への強制変換のためのメソッドが現在存在します; これらを交換します。"

#. R/refClass.R: gettextf("methods declared in usingMethods() but not found: %s",     paste0(declared[!declared %in% allMethods], collapse = ", "))
#: R/refClass.R:0
msgid "methods declared in usingMethods() but not found: %s"
msgstr "メソッドが usingMethods() 中で宣言されましたが見つかりません: %s"

#. R/BasicFunsList.R: gettextf("methods may not be defined for primitive function %s in this version of R",     sQuote(f))
#: R/BasicFunsList.R:0
msgid "methods may not be defined for primitive function %s in this version of R"
msgstr "この R のバージョンでは、プリミティブ関数 %s に対するメソッドを定義することができません"

#. R/Defunct.R: stop("methods:::bind_activation() is defunct;\n rather provide methods for cbind2() / rbind2()")
#: R/Defunct.R:0
msgid ""
"methods:::bind_activation() is defunct;\n"
" rather provide methods for cbind2() / rbind2()"
msgstr ""

#. R/RMethodUtils.R: gettextf("missing function for load action: %s", what)
#: R/RMethodUtils.R:0
msgid "missing function for load action: %s"
msgstr "ロード動作に対する関数がありません; %s"

#. R/MethodsListClass.R: gettextf("missing package slot (%s) in object of class %s (package info added)",     packageSlot(co), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
msgid "missing package slot (%s) in object of class %s (package info added)"
msgstr "欠損したパッケージスロット (%s) がクラス %s のオブジェクト中にあります(パッケージの情報を付け加えました)"

#. R/MethodsList.R: gettextf("more elements in the method signature (%d) than in the generic signature (%d) for function %s",     length(signature), length(anames), sQuote(fun@generic))
#: R/MethodsList.R:0
msgid "more elements in the method signature (%d) than in the generic signature (%d) for function %s"
msgstr "メソッドシグナチャ (%d) 中に総称的な シグネチャ (%d) 中よりも多くの要素があります (関数 %s に対して)"

#. R/RClassUtils.R: gettextf("more than one possible class for the data part: using %s rather than %s",     .dQ(prevDataPartClass), .dQ(value))
#: R/RClassUtils.R:0
msgid "more than one possible class for the data part: using %s rather than %s"
msgstr "データ部分に複数の可能なクラスがあります: %s を %s の代わりに使います"

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\n",     "move the file or remove the class/method")
#: R/zzz.R:0
msgid "move the file or remove the class/method"
msgstr "ファイルを移動するか、クラスまたはメソッドを削除してください"

#. R/SClasses.R: gettextf("multiple class definitions for %s from packages: %s; picking the first",     dQuote(className), paste(sQuote(pkgs), collapse = ", "))
#: R/SClasses.R:0
msgid "multiple class definitions for %s from packages: %s; picking the first"
msgstr "%s に対する多重クラス定義（パッケージ %s）、最初のものを使います"

#. R/RMethodUtils.R: gettextf("multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)",     dQuote(classi), sQuote(pkgi), paste(dQuote(get(classi, envir = .classTable)),         collapse = ", "))
#: R/RMethodUtils.R:0
msgid "multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)"
msgstr "クラス %s に対する複数の定義がありますが、与えられたパッケージ (%s) はそれら (%s) のどれでもありません"

#. R/RMethodUtils.R: gettextf("multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()",     dQuote(classi), paste(dQuote(get(classi, envir = .classTable)),         collapse = ", "))
#: R/RMethodUtils.R:0
msgid "multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()"
msgstr "クラス %s に対する複数の定義があります; 例えば className() によって、その中のひとつ (%s) を指定すべきです"

#. R/promptClass.R: gettextf("multiple definitions of %s found; using the one on %s",     dQuote(clName), whereClass)
#: R/promptClass.R:0
msgid "multiple definitions of %s found; using the one on %s"
msgstr "%s の多重定義が見付かりました; %s に関するものを使います"

#. R/RMethodUtils.R: gettextf("multiple direct matches: %s; using the first of these",     .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple direct matches: %s; using the first of these"
msgstr "複数の直接的なマッチ; %s; これらのうち最初のものを使います"

#. R/RMethodUtils.R: gettextf("multiple equivalent inherited matches: %s; using the first of these",     .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple equivalent inherited matches: %s; using the first of these"
msgstr "複数の同値な継承マッチ; %s; これらのうち最初のものを使います"

#. R/trace.R: gettextf("multiple generics match pattern, using table %s", table)
#: R/trace.R:0
msgid "multiple generics match pattern, using table %s"
msgstr "テーブル %s を使って、複数の総称がパターンにマッチしました"

#. R/Methods.R: gettextf("must provide an environment table; got class %s", dQuote(class(what)))
#: R/Methods.R:0
msgid "must provide an environment table; got class %s"
msgstr "環境テーブルを提供する必要があります；クラス %s が得られました"

#. R/Methods.R: stop("must supply 'generic.function' or 'class'")
#: R/Methods.R:0
msgid "must supply 'generic.function' or 'class'"
msgstr "'generic.function' か 'class' を与える必要があります"

#. R/Methods.R: gettextf("must supply a function skeleton for %s, explicitly or via an existing function",     sQuote(name))
#: R/Methods.R:0
msgid "must supply a function skeleton for %s, explicitly or via an existing function"
msgstr "明示的もしくは既存の関数経由で %s に対する関数の骨格 (skelton) を与える必要があります"

#. R/RMethodUtils.R: gettextf("must supply either a generic function or a function as default for %s",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "must supply either a generic function or a function as default for %s"
msgstr "%s に対する既定値として、総称的関数か関数をあたえる必要があります"

#. R/method.skeleton.R: stop("need a definition for the method here")
#: R/method.skeleton.R:0
msgid "need a definition for the method here"
msgstr "ここで、メソッドに対する定義が必要です"

#. R/RClassUtils.R: gettextf("needed the supplied labels vector of length %d, got %d",     length(nodes), length(short))
#: R/RClassUtils.R:0
msgid "needed the supplied labels vector of length %d, got %d"
msgstr "長さ %d のラベルベクトルを与える必要がありましたが、長さは %d でした"

#. R/RClassUtils.R: gettextf("no '.Data' slot defined for class %s", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "no '.Data' slot defined for class %s"
msgstr "クラス %s に対して定義された '.Data' スロットはありません"

#. R/ClassExtensions.R: gettextf("no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s",     to, dQuote(class(from)))
#: R/ClassExtensions.R:0
msgid "no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s"
msgstr "'as(x, \"%s\") <- value' (クラス %s に対する) には 'replace' メソッドは定義されていません"

#. R/trace.R: gettextf("no definition for object %s found in tracing environment",     sQuote(what))
#: R/trace.R:0
msgid "no definition for object %s found in tracing environment"
msgstr "オブジェクト %s に対する定義がトレース環境中に見付かりません"

#. R/fixPrevious.R: gettextf("no definition for the class of %s (class %s) found",     sQuote(what), dQuote(class))
#: R/fixPrevious.R:0
msgid "no definition for the class of %s (class %s) found"
msgstr "%s のクラス (クラス %s) に対する定義はありません"

#. R/RMethodUtils.R: gettextf("no definition found for class %s", dQuote(classi))
#: R/RMethodUtils.R:0
msgid "no definition found for class %s"
msgstr "クラス %s に対する定義はありません"

#. R/refClass.R: gettextf("no definition found for inherited class: %s", paste0("\"",     contains[missingDefs], "\"", collapse = ", "))
#: R/refClass.R:0
msgid "no definition found for inherited class: %s"
msgstr "継承クラスに対する定義はありません: %s"

#. R/SClasses.R: gettextf("no definition of %s to use for %s", dQuote(Class),     unique)
#: R/SClasses.R:0
msgid "no definition of %s to use for %s"
msgstr "%s (%s に対して使用する) の定義がありません"

#. R/promptClass.R: gettextf("no definition of class %s found", dQuote(clName))
#: R/promptClass.R:0
msgid "no definition of class %s found"
msgstr "クラス %s の定義はありません"

#. R/RClassUtils.R: gettextf("no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s",     .dQ(what), .dQ(def2@className), .dQ(class))
#: R/RClassUtils.R:0
msgid "no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s"
msgstr "%s から %s への継承定義がありません。しかし関係は %s からの setIs() によって含意されています"

#. R/RClassUtils.R: gettextf("no definition was found for superclass %s in the specification of class %s",     dQuote(cl), dQuote(name))
#: R/RClassUtils.R:0
msgid "no definition was found for superclass %s in the specification of class %s"
msgstr "スーパークラス %s に対する定義がクラス %s の設定中にありません"

#. R/Methods.R: gettextf("no environment or package corresponding to argument where=%s",     deparse(where))
#: R/Methods.R:0
msgid "no environment or package corresponding to argument where=%s"
msgstr "引数 where=%s に対応するパッケージ, 環境がありません"

#. R/Methods.R: gettextf("no existing definition for function %s", sQuote(f))
#: R/Methods.R:0
msgid "no existing definition for function %s"
msgstr "関数 %s に対する既存の定義はありません"

#. R/addedFunctions.R: gettextf("no function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no function %s found"
msgstr "関数 %s が見付かりません"

#. R/trace.R: gettextf("no function definition for %s found", sQuote(what))
#: R/trace.R:0
msgid "no function definition for %s found"
msgstr "%s に対する関数定義はありません"

#. R/method.skeleton.R: gettextf("no function definition found for %s", sQuote(generic))
#: R/method.skeleton.R:0
msgid "no function definition found for %s"
msgstr "%s に対する関数定義が見つかりません"

#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#: R/Methods.R:0
msgid "no generic function %s found"
msgstr "総称的関数 %s が見つかりません"

#. R/MethodsList.R: gettextf("no generic function found corresponding to %s", sQuote(f))
#: R/MethodsList.R:0
msgid "no generic function found corresponding to %s"
msgstr "%s に対する総称的関数は見付かりません"

#. R/RMethodUtils.R: gettextf("no generic function found for %s", sQuote(f))
#: R/RMethodUtils.R:0
msgid "no generic function found for %s"
msgstr "%s に対する総称的関数は見付かりません"

#. R/Methods.R: gettextf("no generic function found for '%s'", f)
#: R/Methods.R:0
msgid "no generic function found for '%s'"
msgstr "'%s' に対する総称的関数が見付かりません"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed;\n   a new generic will be assigned for %s",     sQuote(name), sQuote(package), thisPName)
#: R/Methods.R:0
msgid ""
"no generic version of %s on package %s is allowed;\n"
"   a new generic will be assigned for %s"
msgstr ""
"如何なる %s の総称バージョン (パッケージ %s に関する) も許されません;\n"
"   新しい総称が %s に対して割り当てられます"

#. R/Methods.R: gettextf("no method for %s matches class %s", sQuote("..."),     dQuote(signature))
#: R/Methods.R:0
msgid "no method for %s matches class %s"
msgstr "%s に対するいかなるメソッドもクラス %s にはマッチしません"

#. R/Methods.R: gettextf("no method found for function %s and signature %s",     sQuote(fdef@generic), paste(.dQ(signature), collapse = ", "))
#: R/Methods.R:0
msgid "no method found for function %s and signature %s"
msgstr "関数 %s とシグネチャ (signature) %s に対するメソッドがありません"

#. R/Methods.R: gettextf("no method found for function '%s' and signature %s",     f, paste(signature, collapse = ", "))
#: R/Methods.R:0
msgid "no method found for function '%s' and signature %s"
msgstr "関数 '%s' とシグネチャ (signature) %s に対するメソッドが見付かりません"

#. R/Methods.R: gettextf("no method found for signature %s", paste(signature,     collapse = ", "))
#: R/Methods.R:0
msgid "no method found for signature %s"
msgstr "シグネチャ (signature) %s に対するメソッドが見付かりませんでした"

#. R/trace.R: gettextf("no method in methods table for %s for signature %s",     sQuote(what), sQuote(signature))
#: R/trace.R:0
msgid "no method in methods table for %s for signature %s"
msgstr "%s （シグネチャ %s に対する）に対するメソッドテーブル中にメソッドがありません"

#. R/as.R: gettextf("no method or default for as() replacement of %s with Class=\"%s\"",     dQuote(thisClass), Class)
#: R/as.R:0
msgid "no method or default for as() replacement of %s with Class=\"%s\""
msgstr "%s の (Class=\"%s\" を持つ) as() 変換のためのメソッドや既定動作はありません"

#. R/as.R: gettextf("no method or default for coercing %s to %s", dQuote(thisClass),     dQuote(Class))
#: R/as.R:0
msgid "no method or default for coercing %s to %s"
msgstr "%s を %s へ強制変換するためのメソッドや既定動作はありません"

#. R/RMethodUtils.R: gettextf("no method or default matching the \"...\" arguments in %s",     deparse(sys.call(sys.parent()), nlines = 1))
#: R/RMethodUtils.R:0
msgid "no method or default matching the \"...\" arguments in %s"
msgstr "%s 中の \"...\" 引数に一致するメソッドや既定値がありません"

#. R/RMethodUtils.R: gettextf("no methods found for %s; cacheGenericsMetaData() will have no effect",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "no methods found for %s; cacheGenericsMetaData() will have no effect"
msgstr "%s に対するメソッドはありません; cacheGenericsMetaData() は効果を持ちません"

#. R/methodsTable.R: gettextf("no methods table for generic %s from package %s in package %s",     sQuote(generic@generic), sQuote(generic@package), sQuote(getPackageName(where)))
#: R/methodsTable.R:0
msgid "no methods table for generic %s from package %s in package %s"
msgstr "総称的な %s に対するメソッドテーブルを、パッケージ %s (パッケージ %s 中の) から見つけることができません"

#. R/addedFunctions.R: gettextf("no non-generic function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no non-generic function %s found"
msgstr "総称的でない関数 %s が見付かりません"

#. R/SClasses.R: gettextf("no package name supplied and no class definition found for %s",     dQuote(className))
#: R/SClasses.R:0
msgid "no package name supplied and no class definition found for %s"
msgstr "いかなるパッケージ名も与えられていませんし、%s に対するクラス定義も見当たりません"

#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#: R/RMethodUtils.R:0
msgid "no suitable arguments to dispatch methods in this function"
msgstr "この関数中にはメソッドを割り当てるための適切な引数がありません"

#. R/RMethodUtils.R: gettextf("non-function action: %s", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "non-function action: %s"
msgstr "非関数動作: %s"

#. R/Methods.R: gettextf("non-generic function '%s' given to findMethods()",     f)
#: R/Methods.R:0
msgid "non-generic function '%s' given to findMethods()"
msgstr "findMethods() に総称的でない関数 '%s' が与えられました"

#. R/refClass.R: gettextf("non-local assignment to method names is not allowed\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsInMethods], collapse = "; "),     methodName, className)
#: R/refClass.R:0
msgid ""
"non-local assignment to method names is not allowed\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"メソッド名への非局所的な付値は許されません\n"
"    %s\n"
"(メソッド %s 中のクラス %s に対するもの)"

#. R/refClass.R: gettextf("non-local assignment to non-field names (possibly misspelled?)\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsNotFields], collapse = "; "),     methodName, className)
#: R/refClass.R:0
msgid ""
"non-local assignment to non-field names (possibly misspelled?)\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"欄ではない名前への非局所的な付値です (もしかしてミススペル？)\n"
"    %s\n"
"(メソッド %s 中でクラス %s に対するもの)"

#. R/trace.R: stop("none of the objects in the source code could be found:  need to attach or specify the package")
#: R/trace.R:0
msgid "none of the objects in the source code could be found:  need to attach or specify the package"
msgstr "ソースコード中にオブジェクトが見当たりません: パッケージを付加もしくは指定する必要があります"

#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#: R/refClass.R:0
msgid "not a reference class: %s"
msgstr "参照クラスではありません: %s"

#. R/oldClass.R: stop("not allowed to have test==TRUE and an S4Class definition")
#: R/oldClass.R:0
msgid "not allowed to have test==TRUE and an S4Class definition"
msgstr "S4Class の定義と test == TRUE をともに与えることはできません"

#. R/Methods.R: gettext("not both functions!")
#: R/Methods.R:0
msgid "not both functions!"
msgstr "両方の関数はだめ!"

#. R/fixPrevious.R: gettextf("object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)",     sQuote(what))
#: R/fixPrevious.R:0
msgid "object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)"
msgstr "オブジェクト %s は変更されません (これはバージョン 1.8.0 以前の R 由来とは思えまん)"

#. R/fixPrevious.R: gettextf("object %s not changed (it is not consistent with the current definition of class %s from %s)",     sQuote(what), dQuote(Class), sQuote(ClassDef@package))
#: R/fixPrevious.R:0
msgid "object %s not changed (it is not consistent with the current definition of class %s from %s)"
msgstr "オブジェクト %s は変更されません (これは クラス %s (%s からの) の現在の定義と両立しません)"

#. R/fixPrevious.R: gettextf("object %s not found", sQuote(what))
#: R/fixPrevious.R:0
msgid "object %s not found"
msgstr "オブジェクト %s は存在しません"

#. R/BasicClasses.R: gettextf("object must be a valid data part for class %s; not true of type %s",     dQuote(cl), dQuote(class(data)))
#: R/BasicClasses.R:0
msgid "object must be a valid data part for class %s; not true of type %s"
msgstr "オブジェクトは %s 型ではなく、クラス %s の有効なデータ部分でなければなりません"

#. R/MethodsList.R: gettextf("object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object",     sQuote(fun@generic), length(sigClasses), length(signature))
#: R/MethodsList.R:0
msgid "object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object"
msgstr "関数 %s に対するメソッドシグナチャとして使用しようとしているオブジェクトは正しいシグナチャ (単一のクラス名のリスト) のようには見えません: %d 個のクラス名がありましたが、シグナチャオブジェクトには %d 個の要素があります"

#. R/trace.R: gettextf("objects found in multiple packages: using %s and ignoring %s",     sQuote(names(possible[[1L]])), paste(sQuote(names(possible[-1L])),         collapse = ", "))
#: R/trace.R:0
msgid "objects found in multiple packages: using %s and ignoring %s"
msgstr "オブジェクトは複数のパッケージで見つかりました。%s を使い %s を無視します"

#. R/Methods.R: gettextf("only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)",     inherited)
#: R/Methods.R:0
msgid "only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)"
msgstr "'where' が与えられた時は、'inherited' に対しては FALSE だけが意味を持ちます (%s が与えられました)"

#. R/SClasses.R: stop("only arguments 'Class' and 'where' can be supplied when argument 'representation' is a 'classRepresentation' object")
#: R/SClasses.R:0
msgid "only arguments 'Class' and 'where' can be supplied when argument 'representation' is a 'classRepresentation' object"
msgstr "'representation' が 'classRepresentation' オブジェクトのときは、引数 'Class' と 'where' だけを与えられます"

#. R/SClasses.R: stop("only one data object (unnamed argument to prototype) allowed")
#: R/SClasses.R:0
msgid "only one data object (unnamed argument to prototype) allowed"
msgstr "1 つのデータオブジェクト (プロトタイプへの名前の無い引数) だけが許されます"

#. R/Methods.R: gettext("original function is prohibited as a generic function")
#: R/Methods.R:0
msgid "original function is prohibited as a generic function"
msgstr "オリジナルな関数は総称的関数とすることはできません"

#. R/trace.R: gettextf("package %s is not attached and no namespace found for it",     sQuote(package))
#: R/trace.R:0
msgid "package %s is not attached and no namespace found for it"
msgstr "パッケージ %s が付加されておらず、それに対する名前空間が見つかりませんでした"

#. R/Methods.R: gettextf("package slots  differ: %s, %s", .dQ(gpString(f1@package)),     .dQ(gpString(f2@package)))
#: R/Methods.R:0
msgid "package slots  differ: %s, %s"
msgstr "パッケージのスロットが異なります: %s, %s"

#. R/RClassUtils.R: gettextf("potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)",     dQuote(Class), paste(bad, collapse = ", "))
#: R/RClassUtils.R:0
msgid "potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)"
msgstr "クラス継承中に循環がある可能性：%s は上位クラスと下位クラス (%s) 中に重複しています"

#. R/Methods.R: stop("primitive functions cannot be methods; they must be enclosed in a regular function")
#: R/Methods.R:0
msgid "primitive functions cannot be methods; they must be enclosed in a regular function"
msgstr "プリミティブな関数はメソッドにはなれません; 普通の関数中に含める必要があります"

#. R/RClassUtils.R: warning("prototype is a list with named elements (could be ambiguous):  better to use function prototype() to avoid trouble.")
#: R/RClassUtils.R:0
msgid "prototype is a list with named elements (could be ambiguous):  better to use function prototype() to avoid trouble."
msgstr "プロトタイプは名前付き要素のリストです (曖昧かも知れません): 面倒をさけるためには関数 prototype() を使う方が良いでしょう"

#. R/ClassExtensions.R: gettextf("replacement value must be of class %s, got one of class %s",     dQuote(CLASS), dQuote(class(value)[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must be of class %s, got one of class %s"
msgstr "置き換え値は %s クラスでなければなりませんが, %s クラスの一つがが与えられました"

#. R/ClassExtensions.R: gettextf("replacement value must extend class %s, got %s", dQuote(needClass),     dQuote(S3Class[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must extend class %s, got %s"
msgstr "置き換え値は %s クラスを拡張しなければなりませんが, %s が与えられました"

#. R/oldClass.R: gettextf("restoring definition of class %s", dQuote(cl))
#: R/oldClass.R:0
msgid "restoring definition of class %s"
msgstr "クラス %s の定義を回復しています"

#. R/trace.R: gettextf("setting a method over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(getPackageName(where)))
#: R/trace.R:0
msgid "setting a method over the binding of symbol %s in environment/package %s"
msgstr "シンボル %s の binding を跨ぐメソッドを設定しています (環境/パッケージ %s 中)"

#. R/Methods.R: gettextf("signatures differ:  (%s), (%s)", paste(f1@signature,     collapse = ", "), paste(f2@signature, collapse = ", "))
#: R/Methods.R:0
msgid "signatures differ:  (%s), (%s)"
msgstr "シグネチャが異なります: (%s), (%s)"

#. R/RMethodUtils.R: gettextf("single string; got an object of class %s", dQuote(class(what)[[1L]]))
#: R/RMethodUtils.R:0
msgid "single string; got an object of class %s"
msgstr "1 つのストリング; クラス %s のオブジェクトを得ました"

#. R/oldClass.R: gettextf("slot %s: class %s should extend class %s", sQuote(what),     dQuote(slots1[[what]]), dQuote(slots2[[what]]))
#: R/oldClass.R:0
msgid "slot %s: class %s should extend class %s"
msgstr "スロット %s: クラス %s はクラス %s を拡張しているべきです。"

#. R/RMethodUtils.R: gettextf("some actions are missing: %s", paste(actions[!allExists],     collapse = ", "))
#: R/RMethodUtils.R:0
msgid "some actions are missing: %s"
msgstr "なんらかの動作が欠けています: %s"

#. R/trace.R: gettextf("supplied package, %s, differs from package inferred from source, %s",     sQuote(package), sQuote(envPackage))
#: R/trace.R:0
msgid "supplied package, %s, differs from package inferred from source, %s"
msgstr "与えられたパッケージ %s はソース %s から参照されたパッケージと異なります"

#. R/methodsTable.R: gettextf("the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s",     dQuote(class(condAction)))
#: R/methodsTable.R:0
msgid "the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s"
msgstr "\"ambiguousMethodSelection\" オプションは条件付きアクションとして呼び出される関数であるべきです; クラス %s のオブジェクトでした"

#. R/RMethodUtils.R: gettextf("the %s argument must be NULL or a generic function object; got an object of class %s",     sQuote("genericFunction"), dQuote(class(genericFunction)))
#: R/RMethodUtils.R:0
msgid "the %s argument must be NULL or a generic function object; got an object of class %s"
msgstr "引数 %s は NULL か総称的関数オブジェクトでなければなりません: クラス %s のオブジェクトを得ました"

#. R/RClassUtils.R: gettextf("the '%s' list for class %s, includes an undefined class %s",     if (superClassCase) "superClass" else "subClass", dQuote(className),     dQuote(.className(by)))
#: R/RClassUtils.R:0
msgid "the '%s' list for class %s, includes an undefined class %s"
msgstr "'%s' リスト (クラス %s に対する) は未定義のクラス %s を含みます"

#. R/ClassExtensions.R: gettextf("the 'S3Class' argument must be a superclass of %s:  not true of class %s",     dQuote(class(object)), dQuote(S3Class))
#: R/ClassExtensions.R:0
msgid "the 'S3Class' argument must be a superclass of %s:  not true of class %s"
msgstr "'S3Class' 引数は %s のスーパークラスでなければなりません: クラス %s はそうではありません"

#. R/ClassExtensions.R: gettextf("the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s",     dQuote(class(coerce)))
#: R/ClassExtensions.R:0
msgid "the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s"
msgstr "'setIs' に対する 'coerce' 引数は１つの引数を持つ関数であるべきですが、クラス %s のオブジェクトを受け取りました"

#. R/refClass.R: gettextf("the 'contains' argument should be the names of superclasses:  got an element of class %s",     dQuote(class(what)))
#: R/refClass.R:0
msgid "the 'contains' argument should be the names of superclasses:  got an element of class %s"
msgstr "'contains' 引数は上位クラスの名前であるべきです: クラス %s の要素を得ました"

#. R/ClassExtensions.R: gettextf("the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s",     dQuote(class(replace)))
#: R/ClassExtensions.R:0
msgid "the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s"
msgstr "selts() への 'replace' 引数は 2 もしくは 3 つの引数を持つ関数であるべきですが、クラス %s のオブジェクトを得ました"

#. R/Methods.R: gettextf("the 'where' environment (%s) is a locked namespace; cannot assign methods there",     getPackageName(where))
#: R/Methods.R:0
msgid "the 'where' environment (%s) is a locked namespace; cannot assign methods there"
msgstr "'where' 環境 (%s) はロックされた名前空間です; そこへはメソッドを割り当てられません"

#. R/oldClass.R: gettextf("the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")",     .class1(prototype), mainClass)
#: R/oldClass.R:0
msgid "the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")"
msgstr "プロトタイプの S3 クラス、\"%s\" は未定義です; これは登録済みの S3 クラス (\"%s\") の場合にのみ許されます"

#. R/RMethodUtils.R: gettextf("the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!",     sQuote(fname), paste(as.character(x[[2L]]), collapse = "\n"))
#: R/RMethodUtils.R:0
msgid "the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!"
msgstr "%s に対する総称的関数の本体は異なった名前 (\"%s\") を割り当てるため 'standardGeneric' を呼び出しています!"

#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#: R/refClass.R:0
msgid "the class of field %s in the object is not compatible with the desired class %s in the target"
msgstr "オブジェクトのフィールド %s のクラスがターゲットのクラス %s と整合しません。"

#. R/ClassExtensions.R: gettextf("the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)\n",     TO, dQuote(FROM), TO, dQuote(class(value)))
#: R/ClassExtensions.R:0
msgid "the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)"
msgstr "計算式: 'as(object, \"%s\") <- value' は, オブジェクトのクラスが %s である時には、'is(value, \"%s\")' が TRUE であるとき ('class(value)' が %s であったとき) のみ有効です"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid "the definition of class %s in package %s is locked so fields may not be modified"
msgstr "クラス %s（パッケージ %s 中）の定義はロックされていて、欄は変更できないかもしれません"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked, methods may not be redefined",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid "the definition of class %s in package %s is locked, methods may not be redefined"
msgstr "クラス%sの定義（パッケージ %s 中の）はロックされていて、関数は再定義できないかもしれません。"

#. R/trace.R: stop("the editing in trace() can only change the body of the function, not the arguments or defaults")
#: R/trace.R:0
msgid "the editing in trace() can only change the body of the function, not the arguments or defaults"
msgstr "trace() 中での編集は関数の本体のみを変更します、引数や既定動作は変更しません"

#. R/trace.R: gettextf("the editing in trace() can only change the body of the function; got an object of class %s",     dQuote(class(def2)))
#: R/trace.R:0
msgid "the editing in trace() can only change the body of the function; got an object of class %s"
msgstr "trace() 中での編集は関数の本体のみを変更します; クラス %s のオブジェクトでした"

#. R/Methods.R: gettextf("the environment %s is locked; cannot assign methods for function %s",     sQuote(getPackageName(where)), sQuote(f))
#: R/Methods.R:0
msgid "the environment %s is locked; cannot assign methods for function %s"
msgstr "環境 %s がロックされています; 関数 %s に対するメソッドを割り当てられません"

#. R/RMethodUtils.R: gettextf("the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed",     what, sQuote(f))
#: R/RMethodUtils.R:0
msgid "the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed"
msgstr "%s として使われている関数 (%s に対する総称的関数の作成中) は現在トレースされています; 使われた関数はトレースされないでしょう"

#. R/ClassUnion.R: gettextf("the member classes must be defined: not true of %s",     paste(.dQ(as(members[!membersDefined], "character")), collapse = ", "))
#: R/ClassUnion.R:0
msgid "the member classes must be defined: not true of %s"
msgstr "メンバークラスが定義されている必要があります: %s についてはそうでありません"

#. R/trace.R: gettextf("the method for %s for this signature was not being traced",     sQuote(what))
#: R/trace.R:0
msgid "the method for %s for this signature was not being traced"
msgstr "このシグナチャの %s に対するメソッドはトレースされていませんでした"

#. R/Methods.R: gettextf("the method for function %s and signature %s is sealed and cannot be re-defined",     sQuote(f), .signatureString(fdef, signature))
#: R/Methods.R:0
msgid "the method for function %s and signature %s is sealed and cannot be re-defined"
msgstr "関数 %s とシグネチァ (signature) %s に対するメソッドは封印 (sealed) されており、再定義出来ません"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match %s's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match %s's arguments (%s)"
msgstr "メソッド (%s) に対するシグナチャ中の名前が %s の引数 (%s) にマッチしません"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match function's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match function's arguments (%s)"
msgstr "メソッド (%s) に対するシグネチャ中の名前が関数の引数 (%s) にマッチしません"

#. R/refClass.R: gettextf("the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")",     value[[field]], sQuote(field), fieldList[[field]])
#: R/refClass.R:0
msgid "the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")"
msgstr "上書きクラス (\"%s\") (欄 %s の) は既存の欄定義 (\"%s\") の下位クラスではありません"

#. R/ClassExtensions.R: gettextf("there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error",     to, dQuote(Class))
#: R/ClassExtensions.R:0
msgid "there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error"
msgstr "'as(object, \"%s\") <- value' には、オブジェクトがクラス %s で 'replace' 引数が与えられていないときには、自動的な定義はありません; 置き換えはエラーになるでしょう"

#. R/refClass.R: gettextf("topic %s is not a method name in class %s\nThe class definition follows\n",     sQuote(topic), dQuote(className))
#: R/refClass.R:0
msgid ""
"topic %s is not a method name in class %s\n"
"The class definition follows"
msgstr ""
"トピック %s はクラス %s 中のメソッド名ではありません\n"
"クラス定義が続きます"

#. R/trace.R: gettextf("tracing the internal function %s is not allowed", sQuote(what))
#: R/trace.R:0
msgid "tracing the internal function %s is not allowed"
msgstr "内部関数 %s のトレースは許されていません"

#. R/RClassUtils.R: gettextf("trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object",     dQuote(class(def)), dQuote(Class))
#: R/RClassUtils.R:0
msgid "trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object"
msgstr "クラス %s のオブジェクトをクラス %s の定義として与えようとしています: \"classRepresentation\" オブジェクトを与える必要があります"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s in an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid "trying to change the formal arguments in %s in an object of class %s; expected a function definition"
msgstr "%s 中の形式的引数 (クラス %s のオブジェクト中) を変更しようとしています; 関数定義が期待されています"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid "trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition"
msgstr "%s 中の形式的引数を変更しようとしましたが、クラス %s のオブジェクトから新しい形式的引数を受け取りました; 関数定義が期待されていました"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)",     msg, paste0("\"", old, "\"", collapse = ", "), paste0("\"",         new, "\"", collapse = ", "))
#: R/RMethodUtils.R:0
msgid "trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)"
msgstr "%s 中の形式的引数を変更しようとしましたが、既存の引数の数は新しい引数の数より大です (余分な引数は使われないでしょう): (%s) 対 (%s)"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)",     msg, paste0("\"", old, "\"", collapse = ", "), paste0("\"",         new, "\"", collapse = ", "))
#: R/RMethodUtils.R:0
msgid "trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)"
msgstr "%s 中の形式的引数を変更しようとしましたが、既存の引数の数は新しい引数の数未満です: (%s) 対 (%s)"

#. R/methodsTable.R: gettextf("trying to check signature length of generic '%s', but it is not a generic function: i = %d, funs = %s, gnames = %s",     what, i, paste(unlist(funs), collapse = ", "), paste(as.character(gnames),         collapse = ", "))
#: R/methodsTable.R:0
msgid "trying to check signature length of generic '%s', but it is not a generic function: i = %d, funs = %s, gnames = %s"
msgstr "総称的な '%s' のシグネチャの長さをチェックしていますが、これは総称的ではありません: i = %d, funs = %s, gnames = %s"

#. R/methodsTable.R: gettextf("trying to check signature length of group generic '%s', but it is not a group generic",     what)
#: R/methodsTable.R:0
msgid "trying to check signature length of group generic '%s', but it is not a group generic"
msgstr "グループ総称関数 '%s' のシグネチャの長さをチェック中ですが、これはグループ総称的ではありません"

#. R/methodsTable.R: stop("trying to find a methods table in a non-generic function")
#: R/methodsTable.R:0
msgid "trying to find a methods table in a non-generic function"
msgstr "総称的でない関数中にメソッドテーブルを探しています"

#. R/MethodsList.R: gettextf("trying to match a method signature of class %s; expects a list or a character vector",     dQuote(class(signature)))
#: R/MethodsList.R:0
msgid "trying to match a method signature of class %s; expects a list or a character vector"
msgstr "クラス %s のメソッドシグナチャをマッチしようとしています; リストか文字ベクトルが期待されています"

#. R/MethodsList.R: gettextf("trying to match a method signature to an object (of class %s) that is not a generic function",     dQuote(class(fun)))
#: R/MethodsList.R:0
msgid "trying to match a method signature to an object (of class %s) that is not a generic function"
msgstr "メソッドシグナチャを総称的関数でない (クラス %s の) オブジェクトにマッチしようとしています"

#. R/as.R: gettextf("trying to set an 'as' relation from %s to itself",     dQuote(.class1(from)))
#: R/as.R:0
msgid "trying to set an 'as' relation from %s to itself"
msgstr "%s からそれ自体への 'as' 関係を設定しようとしています"

#. R/ClassUnion.R: gettextf("unable to create union class:  could not set members %s",     paste(.dQ(failed), collapse = ", "))
#: R/ClassUnion.R:0
msgid "unable to create union class:  could not set members %s"
msgstr "union クラスを生成できません: メンバー %s を設定できませんでした"

#. R/RClassUtils.R: gettextf("unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s",     .dQ(className), paste(.dQ(setdiff(newconflicts, conflicts)),         collapse = ", "))
#: R/RClassUtils.R:0
msgid "unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s"
msgstr "クラス %s に対する上位クラスに一貫性のある順序を見出すことができません: 選ばれた順序は %s の上位クラスと一貫性がありません"

#. R/RClassUtils.R: gettextf("unable to find an environment containing class %s",     dQuote(Class))
#: R/RClassUtils.R:0
msgid "unable to find an environment containing class %s"
msgstr "クラス %s を含む環境を見付けることが出来ません"

#. R/methodsTable.R: gettextf("unable to find an inherited method for function %s for signature %s",     sQuote(fdef@generic), sQuote(cnames))
#: R/methodsTable.R:0
msgid "unable to find an inherited method for function %s for signature %s"
msgstr "関数 %s (シグネチャ %s に対する) に対する継承メソッドを見付けることができません"

#. R/RClassUtils.R: gettextf("unable to find required package %s", sQuote(package))
#: R/RClassUtils.R:0
msgid "unable to find required package %s"
msgstr "必要とされるパッケージ %s を見付けることが出来ません"

#. R/as.R: stop("undefined 'coerce' method")
#: R/as.R:0
msgid "undefined 'coerce' method"
msgstr "未定義の 'coerce' メソッド"

#. R/methodsTable.R: gettextf("undefined classes (%s) will be ignored for argument '%s'",     paste0("\"", unique(.undefClasses), "\"", collapse = ", "),     colnames(sigs)[[j]])
#: R/methodsTable.R:0
msgid "undefined classes (%s) will be ignored for argument '%s'"
msgstr "未定義のクラス (%s) は引数 '%s' に対して無視されます"

#. R/RClassUtils.R: gettext("undefined slot classes in definition of %s: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "undefined slot classes in definition of %s: %s"
msgstr "%s の定義中に未定義のスロットクラス: %s"

#. R/RClassUtils.R: gettextf("undefined subclass %s of class %s; definition not updated",     .dQ(what), .dQ(def@className))
#: R/RClassUtils.R:0
msgid "undefined subclass %s of class %s; definition not updated"
msgstr "未定義のサブクラス %s (クラスは %s) です; 定義は更新されません"

#. R/zzz.R: message("unloading 'methods' package ...")
#: R/zzz.R:0
msgid "unloading 'methods' package ..."
msgstr "'methods' パッケージをアンロード中 ..."

#. R/BasicClasses.R: gettextf("unnamed argument must extend either the S3 class or the class of the data part; not true of class %s",     dQuote(Classi))
#: R/BasicClasses.R:0
msgid "unnamed argument must extend either the S3 class or the class of the data part; not true of class %s"
msgstr "無名引数はクラス %s ではなく、S3 クラスかデータ部分のクラスのいずれかを継承する必要があります"

#. R/BasicClasses.R: gettextf("unnamed argument to initialize() for S3 class must have a class definition; %s does not",     dQuote(Classi))
#: R/BasicClasses.R:0
msgid "unnamed argument to initialize() for S3 class must have a class definition; %s does not"
msgstr "S3 クラスに対する initialize() の無名引数にはクラス定義が必要ですが、%s にはクラス定義がありません"

#. R/BasicClasses.R: stop("unnamed argument to new() must be an environment for the new object")
#: R/BasicClasses.R:0
msgid "unnamed argument to new() must be an environment for the new object"
msgstr "new() への名前のない引数は新しいオブジェクトに対する環境でなければなりません"

#. R/refClass.R: gettextf("unnamed arguments to $new() must be objects from a reference class; got an object of class %s",     dQuote(class(super)))
#: R/refClass.R:0
msgid "unnamed arguments to $new() must be objects from a reference class; got an object of class %s"
msgstr "$new() 関数への名前なし引数は参照クラスからのオブジェクトである必要があります; クラス %s のオブジェクトを得ました"

#. R/SClasses.R: stop("validity method must be NULL or a function of one argument")
#: R/SClasses.R:0
msgid "validity method must be NULL or a function of one argument"
msgstr "validity メソッドは NULL かまたは引数一つの関数でなければなりません"

#. R/Methods.R: gettextf("value classes differ: %s, %s", .dQ(gpString(f1@valueClass)),     .dQ(gpString(f2@valueClass)))
#: R/Methods.R:0
msgid "value classes differ: %s, %s"
msgstr "値のクラスが異なります: %s, %s"

#. R/methodsTable.R: ngettext(length(candidates), "Choosing method %s from %d ambiguous possibility",     "Choosing method %s from %d ambiguous possibilities")
#: R/methodsTable.R:0
msgid "Choosing method %s from %d ambiguous possibility"
msgid_plural "Choosing method %s from %d ambiguous possibilities"
msgstr[0] "メソッド %s を選択 (%d 個の曖昧な可能性から)"

#. R/MethodsListClass.R: ngettext(nreport, "Reported %d ambiguous selection out of %d for function %s\n",     "Reported %d ambiguous selections out of %d for function %s\n")
#: R/MethodsListClass.R:0
msgid "Reported %d ambiguous selection out of %d for function %s\n"
msgid_plural "Reported %d ambiguous selections out of %d for function %s\n"
msgstr[0] "%d 個の曖昧な選択が %d 個中報告されました (関数 %s に対して)\n"

#. R/methodsTable.R: ngettext(which2, "Selecting %d method of minimum distance", "Selecting %d methods of minimum distance")
#: R/methodsTable.R:0
msgid "Selecting %d method of minimum distance"
msgid_plural "Selecting %d methods of minimum distance"
msgstr[0] "最小距離の %d 個のメソッドを選択"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d non-group method", "Selecting %d non-group methods")
#: R/methodsTable.R:0
msgid "Selecting %d non-group method"
msgid_plural "Selecting %d non-group methods"
msgstr[0] "%d 個の非グループメソッドを選択"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d partially exact-matching method",     "Selecting %d partially exact-matching methods")
#: R/methodsTable.R:0
msgid "Selecting %d partially exact-matching method"
msgid_plural "Selecting %d partially exact-matching methods"
msgstr[0] "%d 個の部分的に正確なマッチングメソッドを選択"

#. R/is.R: ngettext(sum(is.na(match(n2, n1))), "class %s is missing slot from class %s (%s), and no coerce method was supplied",     "class %s is missing slots from class %s (%s), and no coerce method was supplied")
#: R/is.R:0
msgid "class %s is missing slot from class %s (%s), and no coerce method was supplied"
msgid_plural "class %s is missing slots from class %s (%s), and no coerce method was supplied"
msgstr[0] "クラス %s はクラス %s (%s) からのスロットを欠いています、そして強制変換メソッドは与えられていません"

#. R/SClasses.R: ngettext(length(dslots), "duplicated slot name: %s", "duplicated slot names: %s")
#: R/SClasses.R:0
msgid "duplicated slot name: %s"
msgid_plural "duplicated slot names: %s"
msgstr[0] "重複したスロット名: %s"

#. R/methodsTable.R: ngettext(length(methods), "found %d equally good next method",     "found %d equally good next methods")
#: R/methodsTable.R:0
msgid "found %d equally good next method"
msgid_plural "found %d equally good next methods"
msgstr[0] "%d 個の同じぐらい良いネクストメソッド"

#. R/MethodsList.R: ngettext(sum(is.na(which)), "in the method signature for function %s invalid argument name in the signature: %s",     "in the method signature for function %s invalid argument names in the signature: %s")
#: R/MethodsList.R:0
msgid "in the method signature for function %s invalid argument name in the signature: %s"
msgid_plural "in the method signature for function %s invalid argument names in the signature: %s"
msgstr[0] "関数 %s に対するメソッドシグネチャ中に、シグネチャ中の不正な引数名: %s"

#. R/SClasses.R: ngettext(sum(is.na(which)), "invalid name for slot of class %s: %s",     "invalid names for slots of class %s: %s")
#: R/SClasses.R:0
msgid "invalid name for slot of class %s: %s"
msgid_plural "invalid names for slots of class %s: %s"
msgstr[0] "クラス %s のスロットに対しては不正な名前です: %s"

#. R/SClasses.R: ngettext(length(pkgs), "multiple definition of class %s visible (%s); using the definition\n   in package %s for %s",     "multiple definitions of class %s visible (%s); using the definition\n   in package %s for %s")
#: R/SClasses.R:0
msgid ""
"multiple definition of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgid_plural ""
"multiple definitions of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgstr[0] ""
"クラス %s の多重定義が見付かりました (%s); 定義\n"
"   をパッケージ %s 中の %s に対して使います"

#. R/RClassUtils.R: ngettext(sum(is.na(match(pnames, slots))), "named elements of prototype do not correspond to slot name: %s",     "named elements of prototype do not correspond to slot names: %s")
#: R/RClassUtils.R:0
msgid "named elements of prototype do not correspond to slot name: %s"
msgid_plural "named elements of prototype do not correspond to slot names: %s"
msgstr[0] "プロトタイプの名前つきの要素はスロット名に対応しません: %s"

#. R/MethodsList.R: ngettext(length(unknown), "no definition for class %s", "no definition for classes %s")
#: R/MethodsList.R:0
msgid "no definition for class %s"
msgid_plural "no definition for classes %s"
msgstr[0] "クラス %s に対する定義はありません"

#. R/promptClass.R: ngettext(length(whereClass), "no definition of class %s in the specified position, %s, definition on : %s",     "no definition of class %s in the specified position, %s, definitions on : %s")
#: R/promptClass.R:0
msgid "no definition of class %s in the specified position, %s, definition on : %s"
msgid_plural "no definition of class %s in the specified position, %s, definitions on : %s"
msgstr[0] "クラス %s の定義は指定された位置 %s にありません、以下に関する定義です: %s"

#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s")
#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s")
#: R/RMethodUtils.R:0
msgid "non-argument found in the signature: %s"
msgid_plural "non-arguments found in the signature: %s"
msgstr[0] "シグナチャ中に引数でないものがあります: %s"

#. R/is.R: ngettext(length(bad), "slot in class %s must extend corresponding slot in class %s: fails for %s",     "slots in class %s must extend corresponding slots in class %s: fails for %s")
#: R/is.R:0
msgid "slot in class %s must extend corresponding slot in class %s: fails for %s"
msgid_plural "slots in class %s must extend corresponding slots in class %s: fails for %s"
msgstr[0] "クラス %s のスロットは対応する %s 中のスロットを拡張していなければなりません: %s に対して失敗しました"

#. R/RMethodUtils.R: ngettext(length(fdef), "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)",     "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)")
#: R/RMethodUtils.R:0
msgid "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)"
msgid_plural "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)"
msgstr[0] "%s (%s) に対する総称的関数の形式的引数は、既定 (%s) として使われる非総称的なそれと異なります"

#~ msgid "invalid method sublist"
#~ msgstr "不正なメソッドサブリスト"

#~ msgid "%f is not a valid generic function: methods list was an object of class %s"
#~ msgstr "%f は適切な総称的関数ではありません: メソッドリストはクラス %s のオブジェクトでした"

#~ msgid "%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s"
#~ msgstr "%s は TRUE, FALSE, もしくはこれらの値の名前付き論理値ベクトルでなければなりません; クラス %s のオブジェクトでした"

#~ msgid "skipping methods list element %s of unexpected class %s"
#~ msgstr "メソッドリスト要素 %s をスキップします (予期しないクラス %s の)"

#~ msgid "invalid call in method dispatch to '%s' (no default method)"
#~ msgstr " メソッド割り当て '%s' において不正な呼び出し(既定メソッドがありません) "

#~ msgid "subclass %s of class %s is not local and cannot be updated for new inheritance information; consider setClassUnion()"
#~ msgstr " サブクラス %s (クラスは %s) は局所的でなく、新しい継承情報のために更新できません; setClassUnion() の使用を考えてください "

#~ msgid "Note: the specification for S3 class %s in package %s seems equivalent to one from package %s: not turning on duplicate class definitions for this class."
#~ msgstr " 注意: パッケージ %2$s 中の S3 クラス %1$s  はパッケージ %3$s からのものと同値に見えますので、このクラスに対する重複クラス定義は行いません "

#~ msgid "methods cannot be defined for the primitive function %s"
#~ msgstr " プリミティブ関数 %s に対してはメソッドを定義できません "

#~ msgid "package %s seems to have out-of-date methods; need to reinstall from source"
#~ msgstr " パッケージ %s は時代遅れのメソッドを持つようです; ソースから再インストールする必要があります "

#~ msgid "trying to execute load actions without 'methods' package"
#~ msgstr " 'methods' パッケージ無しにロード動作の実行を試みています "

#~ msgid "special function %s is not permitted to have methods"
#~ msgstr " 特殊関数 %s はメソッドを持つことが出来ません "

#~ msgid "special function %s has no known argument list; will assume '(x, ...)'"
#~ msgstr " 特殊関数 %s は引数リストを持っていません; '(x, ...)' と仮定します "

#~ msgid "'callGeneric' with a primitive needs explicit arguments (no formal args defined)"
#~ msgstr " プリミティブを伴う 'callGeneric' は明示的な引数 (形式的引数が定義されていない) を必要とします "

#~ msgid "\""
#~ msgstr " \" "

#~ msgid "could not find superclass %s to clean up when removing subclass references to class %s"
#~ msgstr " クリーンアップのために上位クラス %s を見付けられませんでした (クラス %s への下位クラス参照を除去する際) "

#~ msgid "no class %s found as expected in removing subclass %s"
#~ msgstr " 期待されるクラス %s は見付かりません (下位クラス %s を除去中の際） "

#~ msgid "replacement value is not a matrix"
#~ msgstr " 置き換え値は行列ではありません "

#~ msgid "field %s is read-only"
#~ msgstr " 欄 %s は読み取り専用です "

#~ msgid "not a package name: %s"
#~ msgstr " パッケージ名ではありません: %s "

#, fuzzy
#~ msgid "a list argument for 'fields' must have nonempty names for all the fields"
#~ msgstr " 欄へのリスト引数は全ての欄に対し空でない名前が必要です "

#, fuzzy
#~ msgid "argument 'fields' must be a list of the field classes or definitions or the names of the fields; got an object of class %s"
#~ msgstr " 引数欄は欄クラスまたは定義のリスト、さもなければ単に欄の名前でなければなりません；クラス %s のオブジェクトが与えられました "

#~ msgid "Warning:  using defunct methods list search"
#~ msgstr " 警告：廃止されたメソッドリスト検索を用いています "

#~ msgid "apparent inconsistency in the methods for function %s; argument %s in the signature corresponds to %s in the methods list object"
#~ msgstr " 関数 %s に対するメソッド中の恐らく非整合性；シグネチャ(signature)中の引数 %s はメソッドリストオブジェクト中の %s に対応します "

#~ msgid "no S4 method for function %s and signature %s; consider getS3method() if you wanted the S3 method"
#~ msgstr " 関数 %s とシグネチャ(signature) %s に対する S4 メソッドはありません；もし S3 メソッドが必要なら getS3method() の使用を検討して下さい "

#~ msgid "no method defined in methods list object for function %s and signature %s"
#~ msgstr " 関数 %s とシグネチャ(signature) %s に対して定義されたメソッドはメソッドリスト中にありません "

#~ msgid "Methods list objects are not maintained in this version of R:  request for function %s may return incorrect information"
#~ msgstr " このバージョンのRではメソッドリストのオブジェクトは管理されません：  関数 %s への要求は不正な結果を返すかもしれません "

#~ msgid "multiple equivalent inherited matches:"
#~ msgstr " 複数の継承された同等物による一致: "

#~ msgid "; using the first of these"
#~ msgstr " ; これらのうち最初のものを使います "

#~ msgid "'traceOn' is deprecated: use the function 'trace' in the 'methods' package instead"
#~ msgstr " 'traceOn' は廃止されました：'methods' パッケージ中では代わりに関数 'trace' を使って下さい "

#~ msgid "'traceOff' is deprecated: use the function 'untrace' in the 'methods' package instead"
#~ msgstr " 'traceOff' は廃止されました：'methods' パッケージ中では代わりに関数 'untrace' を使って下さい "

#, fuzzy
#~ msgid "The class of field %s in the object is not compatible with the desired class %s in the target"
#~ msgstr " オブジェクトのフィールド \"%s\" のクラスがターゲットのクラス%sと整合しません。 "

#~ msgid "in .OldClassesPrototypes"
#~ msgstr " .OldClassesPrototypes 内 "

#~ msgid "internal error: did not get a valid generic function object for function %s"
#~ msgstr " 内部エラー：関数 %s に対する適正な総称的関数オブジェクトを得ることができませんでした "

#~ msgid "apparent internal error: a generic function was found for \"%s\", but no corresponding object was found searching from \"%s\""
#~ msgstr " 恐らく内部エラー： \"%s\" に対する総称的関数が見付かりましたが、\"%s\" からの検索では対応するオブジェクトが見付かりませんでした "

#~ msgid "selectMethod(): mlist is not an environment or NULL :"
#~ msgstr " selectMethod（）：mlistは環境またはNULLでありません： "

#~ msgid "** should no longer happen!"
#~ msgstr " **は、もはや起こってはいけません！ "

#~ msgid "Classes: %s, %s"
#~ msgstr " クラス: %s, %s "

#~ msgid "internal error: Bad methods list object in fixing methods for primitive function %s"
#~ msgstr " 内部エラー：プリミティブ関数 \"%s\" に対するメソッドを修正する際に誤ったメソッドリストオブジェクト "

#~ msgid "botched namespace: failed to find 'base' namespace in its parents"
#~ msgstr " へまな名前空間：その親中に 'base' 名前空間が見付かりません "

#~ msgid "multiple direct matches:"
#~ msgstr " 複数の直接の一致: "

#, fuzzy
#~ msgid "Internal error: definition of class %s not properly assigned"
#~ msgstr " 内部エラー: 適切に割り当てられなかったクラスの定義 \"%s\" "

#, fuzzy
#~ msgid "internal problem in as(): %s is(object, \"%s\") is TRUE, but the metadata asserts that the 'is' relation is FALSE"
#~ msgstr " as() 中に内部問題： \"%s\" is(object, \"%s\") は TRUE ですが、メタデータは 'is' 関係 FALSE と主張しています "

#~ msgid "connection"
#~ msgstr " コネクション "

#~ msgid "Internal error in finding inherited methods; didn't return a unique method"
#~ msgstr " 継承メソッドを探索中に内部エラーがありました; ユニークなメソッドを返すことができません "

#~ msgid "\", but it is not a group generic"
#~ msgstr " \", しかしそれはグループ総称的関数ではありません "

#~ msgid "Trying to check signature length of generic \""
#~ msgstr " 以下の総称的関数のシグネチャの長さをチェックすることを試みています \" "

#~ msgid "\", but it is not a  generic function: i ="
#~ msgstr " \", しかしながらこれは総称的関数ではありません: i = "

#~ msgid ", funs ="
#~ msgstr " , funs = "

#~ msgid ","
#~ msgstr " , "

#~ msgid "; gnames ="
#~ msgstr " ; gnames = "

#~ msgid "Something weird:  inconsistent number of args in methods table strings:"
#~ msgstr " なにかおかしい: メソッドテーブル文字列中に矛盾した数の引数があります: "

#~ msgid "(using the largest value)"
#~ msgstr " (最大の値を使います) "

#~ msgid "Undefined classes ("
#~ msgstr " 未定義クラス( "

#~ msgid "Method %s from class %s was not processed into a class method until being installed.  Possible corruption of the methods in the class."
#~ msgstr " メソッド %s (クラス %s からの)はインストールされるまでクラスメソッドとして処理されません． このクラス中のメソッドに混乱がある可能性があります． "

#~ msgid ".TraceWithMethods: after computing what, whereF"
#~ msgstr " .TraceWithMethods: what, whereF の計算後に "

#~ msgid ".TraceWithMethods: untrace case"
#~ msgstr " .TraceWithMethods: トレースされないケース "

#~ msgid ".TraceWithMethods: about to assign or setMethod"
#~ msgstr " .TraceWithMethods: 付値もしくは setMethod しようとしています "

#, fuzzy
#~ msgid "Constructing traceable class %s"
#~ msgstr " トレース可能な以下のクラスを作成中 \" "

#~ msgid "Pretend we inserted class"
#~ msgstr " クラスを挿入したかのようにふるまいます "

#~ msgid "= \"missing\""
#~ msgstr " = \"missing\" "

#~ msgid "found"
#~ msgstr " が見付かりました "

#~ msgid "Invalid mlist element for signature \""
#~ msgstr " 以下のシグネチャに対する不正な mlist 要素 \" "

#~ msgid "\" at level"
#~ msgstr " \"、レベルは "

#~ msgid "\")"
#~ msgstr " \") "

#~ msgid "Invalid object in methods table (\""
#~ msgstr " 不正なオブジェクトが以下のメソッドテーブル中にありました (\" "

#~ msgid "\"), expected a method, got an object of class \""
#~ msgstr " \")、メソッドが期待されますが、以下のクラスのオブジェクトが得られました \" "

#~ msgid "Environment of class \""
#~ msgstr " 以下のクラスの環境 \" "

#~ msgid "Replacement value must be of class \""
#~ msgstr " 置き換え値は以下のクラスでなければなりません \" "

#~ msgid "\", got one of class \""
#~ msgstr " \", しかし, 以下のクラスの１つが与えられました \" "

#~ msgid "\", for signature"
#~ msgstr " \", 以下のシグネチャに対する "

#~ msgid "Field \""
#~ msgstr " 欄 \" "

#~ msgid "the supplied generic function definition for"
#~ msgstr " 以下に対する提供された総称的関数定義 "

#~ msgid "does not seem to call 'standardGeneric'; no methods will be dispatched!"
#~ msgstr " 'standardGeneric' を呼び出すようには見えません；如何なるメソッドも割り当てられません！ "

#~ msgid "no generic function \"'%s\" found"
#~ msgstr " 総称的関数 '%s' が見つかりません "

#~ msgid ""
#~ "Restoring the implicit generic function for %s from package %s\n"
#~ "    into package %s; the generic differs from the default conversion (%s)"
#~ msgstr " 隠匿された総称的関数 %s をパッケージ %s から %s へ戻す際、総称がデフォルトの変換(%s) と異なりました "

#~ msgid ""
#~ "Creating a generic for %s in package %s\n"
#~ "    (the supplied definition differs from and overrides the implicit generic\n"
#~ "    in package %s: %s)"
#~ msgstr ""
#~ " %s に対する総称を %s パッケージ中に作成しています \n"
#~ " (与えられた定義が異なるため, パッケージ \"%s\" 中に隠匿された総称を \n"
#~ " 上書きします: %s) "

#~ msgid "\" is not a known action (warn, stop, once, ignore); no action recorded for function \""
#~ msgstr " ” は既知のアクション(warn, stop, once, ignore)ではありません； 以下の関数に対してはいかなるアクションも記録されていません "

#~ msgid "must give named list of refdefined fields"
#~ msgstr " 再定義された欄の名前付きリストを与える必要があります "

#~ msgid "Only accessor fields can be replaced:  field \"%s\" has class \"%s\""
#~ msgstr " accessor 欄だけが置き換えられます： 欄 \"%s\" はクラス \"%s\" を持ちます "

#, fuzzy
#~ msgid "Value supplied for field \"%s\" (with class \"%s\") is not a subclass of required class \"%s\""
#~ msgstr " クラス \"%s\" のオブジェクト(要求されたクラス \"%s\" ではなく)を初期化 "

#, fuzzy
#~ msgid "The fieldReadOnly argument must be the names of the read-only fields; got an object of class \"%s\""
#~ msgstr " 最初の引数は総称的関数の名前であるべきです(クラス \"%s\" のオブジェクトを得ました) "

#, fuzzy
#~ msgid "Field classes undefined: %s"
#~ msgstr " 値のクラスが異なります： %s, %s "

#, fuzzy
#~ msgid "Trying to set a read-only field ("
#~ msgstr " \"%s\" からそれ自体への 'as' 関係を設定しようとしています "

#~ msgid ")"
#~ msgstr " ) "

#, fuzzy
#~ msgid "\"%s\" is not a known reference class"
#~ msgstr " \"%s\" は定義されたクラスではありません "

#, fuzzy
#~ msgid "Invalid accessor function list: %s"
#~ msgstr " 関数引数に対する不正なインデックスです "

#~ msgid "Defining type \"%s\" as a superclass via class \"%s\""
#~ msgstr " タイプ \"%s\" をクラス \"%s\" を経たスーパークラスと定義すること "

#, fuzzy
#~ msgid "invalid argument 'f', expected a function or its name, got an object of class %s"
#~ msgstr " 不正な引数 \"f\" です。関数かその名前が期待されていますが、クラス \"%s\" のオブジェクトが得られました "

#~ msgid "in the method signature for function \"%s\" no definition for class: %s"
#~ msgid_plural "in the method signature for function \"%s\" no definition for classes: %s"
#~ msgstr[0] " 関数 \"%s\" に対するメソッドシグネチャ中に、シグネチャ中の不正な引数名：% "

#~ msgid "None of the orderings of the superclasses of class \"%s\" is consistent with the superclass ordering of  its direct superclasses; using an ordering which conflicts with %s"
#~ msgstr " クラス \"%s\" の上位クラスの順序付けはどれもその直接の上位クラスの上位クラス順序と両立しません；%s と矛盾する順序付けを用います "

#~ msgid "Some of the superclasses in the definition of class \""
#~ msgstr " クラスの定義のスーパークラスのいくつか \" "

#~ msgid ""
#~ "S3 methods written for S4 classes will fail inheritance!\n"
#~ "Package"
#~ msgstr ""
#~ "S4 クラスに対して書かれた S3 メソッドが継承に失敗しました！ \n"
#~ " パッケージ "

#~ msgid "apparently has"
#~ msgstr " 見たところ以下を持ちます "

#~ msgid "such methods  for the functions"
#~ msgstr " この関数に対するそうしたメソッド "

#~ msgid "Possible dangerous methods:"
#~ msgstr " 危険な可能性のあるメソッド： "

#~ msgid "(Warnings generated once per package per session)"
#~ msgstr " (警告はパッケージ毎、セッション毎に一回出されます) "

#~ msgid "There are apparent S3 methods for class \""
#~ msgstr " 見たところ S3 メソッドが存在します、以下のクラス \" "

#~ msgid ""
#~ "\"\n"
#~ "DANGER: any subclasses of this class will not inherit the methods"
#~ msgstr ""
#~ " \" \n"
#~ " 危険: このクラスのどんなサブクラスもメソッドを引き継がないでしょう. "

#~ msgid ""
#~ "\" have apparent S3 methods.\n"
#~ "\n"
#~ "DANGER: the new class will not inherit these methods.\n"
#~ "Complain to the author of the superclass definitions."
#~ msgstr ""
#~ " \" 見かけのS3方法を持ってください. \n"
#~ "\n"
#~ " 危険: 新しいクラスはこれらのメソッドを引き継がないでしょう. \n"
#~ " スーパークラスの定義について作者に訴えてください. "

#~ msgid "signature must be a vector of classes or an environment"
#~ msgstr " シグネチャ(signature)はクラスのベクトルか環境でなければなりません "

#~ msgid "selectMethod(): .SelectMethodOn - old stuff - please report"
#~ msgstr " selectMethod(): .SelectMethodOn - 古いものです - 報告してください "

#~ msgid "no unique method corresponding to this signature"
#~ msgstr " このシグネチャ(signature)に対応するユニークなメソッドはありません "

#~ msgid "unable to match signature to methods"
#~ msgstr " シグネチャ(signature)をメソッドにマッチさせられません "

#~ msgid "class \"%s\" cannot be used as the data part of another class"
#~ msgstr " クラス \"%s\" は他のクラスのデータ部分として使うことは出来ません "

#~ msgid "internal error: bad code for 'setPrimitiveMethods': %s"
#~ msgstr " 内部エラー：'setPrimitiveMethods' に対する間違ったコード: %s "

#~ msgid "Ambiguous method selection for \"%s\", target \"%s\""
#~ msgstr " \"%s\" に対する曖昧なメソッド選択、 ターゲットは \"%s\" でした "

#~ msgid ""
#~ "(the first of the signatures shown will be used)\n"
#~ "%s"
#~ msgstr ""
#~ " (最初に示されたシグネチャが使われます) \n"
#~ " %s "

#~ msgid "Couldn't find methods table for \"%s\", package \"%s\" may be out of date"
#~ msgstr " \"%s\" に対するメソッドテーブルを見付けられませんでした。パッケージ \"%s\" は時代遅れかもしれません "

#~ msgid "The class to be removed  (\""
#~ msgstr " 取り除かれるべきクラス (\" "

#~ msgid "\") has defined subclasses that should also be removed: ("
#~ msgstr " \") は同様に取り除かれるべきサブクラスを定義しました： ( "

#~ msgid "'NextMethod' not defined because the current method is not a 'MethodDefinition' object"
#~ msgstr " 現在のメソッドは 'MethodDefinition' オブジェクトではないので 'NextMethod' は定義されません "

#~ msgid "expected a list of signature objects, got \"%s\""
#~ msgstr " シグナチャリストを期待しましたが、\"%s\" でした "

#~ msgid "New generic for \"%s\" does not agree with implicit generic from package \"%s\"; a new generic will be assigned with package \"%s\""
#~ msgstr " \"%s\" に対する新しい総称がパッケージ  \"%s\" からの暗黙の総称と一致しません; 新しい総称がパッケージ \"%s\" を用いて割り当てられます "

#~ msgid "Function \"%s\" may not be used as a generic (implicitly prohibited)"
#~ msgstr " 関数 \"%s\" は総称的関数として使うことができません(暗黙のうちに禁止されています) "

#~ msgid "Implicit generic exists for \"%s\", but will be overriden by explicit call to setGeneric()"
#~ msgstr " \"%s\" に対する暗黙の総称が存在しますが、setGeneric() の明示的な呼出しにより上書きされます "

#~ msgid "Unable to find package environment for class \"%s\" to revise subclass information"
#~ msgstr " 下位クラス情報を改訂するためのクラス \"%s\" に対するパッケージ情報を見付けることが出来ません "

#~ msgid "Could not find generic function \"%s\" to initialize cached methods"
#~ msgstr " キャッシュされたメソッドを初期化するための総称的関数 \"%s\" を見付けることができませんでした "

#~ msgid "No generic function found for \"%s\"; no action taken in removeMethodsObject"
#~ msgstr " \"%s\" に対する総称的関数が見付かりません；　removeMethodsObject　中で如何なるアクションも行われません "

#~ msgid "the environment/package \"%s\" is locked; cannot remove methods data for \"%s\""
#~ msgstr " 環境/パッケージ \"%s\" はロックされています； \"%s\" に対するメソッドデータを取り除けません "

#~ msgid "trying to change the argument list of %s with %d arguments to have arguments (%s)"
#~ msgstr " %d 個の引数を持つ %s の引数リストを、引数  (%s) を持つように変更を試みます "

#~ msgid "get rid of variables in definition %s (%s); they conflict with the needed change to argument names (%s)"
#~ msgstr " 定義 %s (%s) 中の変数をとりのぞきます；これらは引数名 (%s) への必要とされる変換と相克します "

#~ msgid "arguments in definition %s changed from (%s) to (%s)"
#~ msgstr " 定義 %s 中の引数が (%s) から (%s) へ変換されました "

#~ msgid "the methods object name for \"%s\" must include the name of the package that contains the generic function, but no generic function of this name was found"
#~ msgstr " \"%s\" に対するメソッドオブジェクト名は総称的関数を含むパッケージ名を含まねばなりません、しかしこの名前の総称的関数はありません "

#~ msgid "no way to associate a generic function with an object of class \"%s\""
#~ msgstr " 総称的関数をクラス \"%s\" のオブジェクトに関連付ける方法はありません "

#~ msgid "no methods found for generic \"%s\""
#~ msgstr " 総称的な \"%s\" に対するメソッドが見付かりませんでした "

#~ msgid "\"%s\" is not one of the basic functions"
#~ msgstr " \"%s\" は基本関数ではありません． "

#~ msgid "cannot reset \"%s\", the definition is not a generic function object"
#~ msgstr " \"%s\" をリセット出来ません、この定義は総称的関数オブジェクトではありません "

#~ msgid "No nongeneric version of function \"%s\" exists to be restored"
#~ msgstr " 復帰するべき関数 \"%s\" の非総称版が見付かりません "

#~ msgid "\"%s\" from \"%s\" is a non-generic function; no methods available"
#~ msgstr " \"%s\" (\"%s\" から) は総称的関数ではありません；使えるメソッドがありません "

#~ msgid "invalid 'fdef' for \"%s\" in 'getAllMethods'; expected either a 'genericFunction object' or a primitive function, got an object of class \"%s\""
#~ msgstr " 'getAllMethods' 中に \"%s\" に対する不正な 'fdef'；'genericFunction object' か プリミティブな関数が期待されますが、クラス \"%s\" のオブジェクトです "

#~ msgid "Methods list for generic \""
#~ msgstr " 以下の総称(generic)に対するメソッドが見付かりません \" "

#~ msgid "\" not found"
#~ msgstr " \" "

#~ msgid ".UsingMethodsTables: 'onOff' is not TRUE or FALSE"
#~ msgstr " .UsingMethodsTables: 'onOff' は TRUE でも FALSE でもありません "

#~ msgid "Package \"%s\" is not loaded"
#~ msgstr " パッケージ \"%s\" はロードされていません "

#~ msgid "old-style ('S3') class \"%s\" supplied as a superclass of \"%s\", but no automatic conversion will be peformed for S3 classes"
#~ msgstr " 古いスタイルの ('S3') クラス \"%s\" が \"%s\" の上位クラスとして与えられましたが、S3 クラスに対しては自動的な強制変換は実行されません "

#~ msgid "'%s' is not a function visible from '%s'"
#~ msgstr " '%s' は '%s' から可視な関数ではありません "

#~ msgid "trying to use new() on a virtual class"
#~ msgstr " 仮想クラスに対して new() を用いています "
